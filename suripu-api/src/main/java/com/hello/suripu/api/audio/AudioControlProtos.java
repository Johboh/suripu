// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: audio_control.proto

package com.hello.suripu.api.audio;

public final class AudioControlProtos {
  private AudioControlProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AudioClassifierMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated sint32 idata = 1;
    /**
     * <code>repeated sint32 idata = 1;</code>
     */
    java.util.List<java.lang.Integer> getIdataList();
    /**
     * <code>repeated sint32 idata = 1;</code>
     */
    int getIdataCount();
    /**
     * <code>repeated sint32 idata = 1;</code>
     */
    int getIdata(int index);

    // optional int32 numclasses = 2;
    /**
     * <code>optional int32 numclasses = 2;</code>
     */
    boolean hasNumclasses();
    /**
     * <code>optional int32 numclasses = 2;</code>
     */
    int getNumclasses();

    // optional .AudioClassifierMessage.ClassifierType type = 3;
    /**
     * <code>optional .AudioClassifierMessage.ClassifierType type = 3;</code>
     */
    boolean hasType();
    /**
     * <code>optional .AudioClassifierMessage.ClassifierType type = 3;</code>
     */
    com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType getType();
  }
  /**
   * Protobuf type {@code AudioClassifierMessage}
   */
  public static final class AudioClassifierMessage extends
      com.google.protobuf.GeneratedMessage
      implements AudioClassifierMessageOrBuilder {
    // Use AudioClassifierMessage.newBuilder() to construct.
    private AudioClassifierMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AudioClassifierMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AudioClassifierMessage defaultInstance;
    public static AudioClassifierMessage getDefaultInstance() {
      return defaultInstance;
    }

    public AudioClassifierMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AudioClassifierMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                idata_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              idata_.add(input.readSInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                idata_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                idata_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              numclasses_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType value = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          idata_ = java.util.Collections.unmodifiableList(idata_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hello.suripu.api.audio.AudioControlProtos.internal_static_AudioClassifierMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hello.suripu.api.audio.AudioControlProtos.internal_static_AudioClassifierMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.class, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<AudioClassifierMessage> PARSER =
        new com.google.protobuf.AbstractParser<AudioClassifierMessage>() {
      public AudioClassifierMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AudioClassifierMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AudioClassifierMessage> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code AudioClassifierMessage.ClassifierType}
     */
    public enum ClassifierType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LINEARSVM = 0;</code>
       */
      LINEARSVM(0, 0),
      ;

      /**
       * <code>LINEARSVM = 0;</code>
       */
      public static final int LINEARSVM_VALUE = 0;


      public final int getNumber() { return value; }

      public static ClassifierType valueOf(int value) {
        switch (value) {
          case 0: return LINEARSVM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ClassifierType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ClassifierType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ClassifierType>() {
              public ClassifierType findValueByNumber(int number) {
                return ClassifierType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final ClassifierType[] VALUES = values();

      public static ClassifierType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ClassifierType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:AudioClassifierMessage.ClassifierType)
    }

    private int bitField0_;
    // repeated sint32 idata = 1;
    public static final int IDATA_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> idata_;
    /**
     * <code>repeated sint32 idata = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getIdataList() {
      return idata_;
    }
    /**
     * <code>repeated sint32 idata = 1;</code>
     */
    public int getIdataCount() {
      return idata_.size();
    }
    /**
     * <code>repeated sint32 idata = 1;</code>
     */
    public int getIdata(int index) {
      return idata_.get(index);
    }

    // optional int32 numclasses = 2;
    public static final int NUMCLASSES_FIELD_NUMBER = 2;
    private int numclasses_;
    /**
     * <code>optional int32 numclasses = 2;</code>
     */
    public boolean hasNumclasses() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 numclasses = 2;</code>
     */
    public int getNumclasses() {
      return numclasses_;
    }

    // optional .AudioClassifierMessage.ClassifierType type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType type_;
    /**
     * <code>optional .AudioClassifierMessage.ClassifierType type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .AudioClassifierMessage.ClassifierType type = 3;</code>
     */
    public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType getType() {
      return type_;
    }

    private void initFields() {
      idata_ = java.util.Collections.emptyList();
      numclasses_ = 0;
      type_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType.LINEARSVM;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < idata_.size(); i++) {
        output.writeSInt32(1, idata_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, numclasses_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(3, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < idata_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(idata_.get(i));
        }
        size += dataSize;
        size += 1 * getIdataList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numclasses_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AudioClassifierMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hello.suripu.api.audio.AudioControlProtos.internal_static_AudioClassifierMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hello.suripu.api.audio.AudioControlProtos.internal_static_AudioClassifierMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.class, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder.class);
      }

      // Construct using com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        idata_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        numclasses_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType.LINEARSVM;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hello.suripu.api.audio.AudioControlProtos.internal_static_AudioClassifierMessage_descriptor;
      }

      public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage getDefaultInstanceForType() {
        return com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance();
      }

      public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage build() {
        com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage buildPartial() {
        com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage result = new com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          idata_ = java.util.Collections.unmodifiableList(idata_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.idata_ = idata_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.numclasses_ = numclasses_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage) {
          return mergeFrom((com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage other) {
        if (other == com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance()) return this;
        if (!other.idata_.isEmpty()) {
          if (idata_.isEmpty()) {
            idata_ = other.idata_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIdataIsMutable();
            idata_.addAll(other.idata_);
          }
          onChanged();
        }
        if (other.hasNumclasses()) {
          setNumclasses(other.getNumclasses());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated sint32 idata = 1;
      private java.util.List<java.lang.Integer> idata_ = java.util.Collections.emptyList();
      private void ensureIdataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          idata_ = new java.util.ArrayList<java.lang.Integer>(idata_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated sint32 idata = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getIdataList() {
        return java.util.Collections.unmodifiableList(idata_);
      }
      /**
       * <code>repeated sint32 idata = 1;</code>
       */
      public int getIdataCount() {
        return idata_.size();
      }
      /**
       * <code>repeated sint32 idata = 1;</code>
       */
      public int getIdata(int index) {
        return idata_.get(index);
      }
      /**
       * <code>repeated sint32 idata = 1;</code>
       */
      public Builder setIdata(
          int index, int value) {
        ensureIdataIsMutable();
        idata_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 idata = 1;</code>
       */
      public Builder addIdata(int value) {
        ensureIdataIsMutable();
        idata_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 idata = 1;</code>
       */
      public Builder addAllIdata(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIdataIsMutable();
        super.addAll(values, idata_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 idata = 1;</code>
       */
      public Builder clearIdata() {
        idata_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 numclasses = 2;
      private int numclasses_ ;
      /**
       * <code>optional int32 numclasses = 2;</code>
       */
      public boolean hasNumclasses() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 numclasses = 2;</code>
       */
      public int getNumclasses() {
        return numclasses_;
      }
      /**
       * <code>optional int32 numclasses = 2;</code>
       */
      public Builder setNumclasses(int value) {
        bitField0_ |= 0x00000002;
        numclasses_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 numclasses = 2;</code>
       */
      public Builder clearNumclasses() {
        bitField0_ = (bitField0_ & ~0x00000002);
        numclasses_ = 0;
        onChanged();
        return this;
      }

      // optional .AudioClassifierMessage.ClassifierType type = 3;
      private com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType type_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType.LINEARSVM;
      /**
       * <code>optional .AudioClassifierMessage.ClassifierType type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .AudioClassifierMessage.ClassifierType type = 3;</code>
       */
      public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType getType() {
        return type_;
      }
      /**
       * <code>optional .AudioClassifierMessage.ClassifierType type = 3;</code>
       */
      public Builder setType(com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .AudioClassifierMessage.ClassifierType type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.ClassifierType.LINEARSVM;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AudioClassifierMessage)
    }

    static {
      defaultInstance = new AudioClassifierMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AudioClassifierMessage)
  }

  public interface AudioControlOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 audio_min_energy_threshold = 1;
    /**
     * <code>optional int32 audio_min_energy_threshold = 1;</code>
     *
     * <pre>
     *minimum log2 audio energy above background noise to save off and classify.
     *500 is a good value for this.  Raise to 1000 to be less sensitive.    
     * </pre>
     */
    boolean hasAudioMinEnergyThreshold();
    /**
     * <code>optional int32 audio_min_energy_threshold = 1;</code>
     *
     * <pre>
     *minimum log2 audio energy above background noise to save off and classify.
     *500 is a good value for this.  Raise to 1000 to be less sensitive.    
     * </pre>
     */
    int getAudioMinEnergyThreshold();

    // optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;
    /**
     * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
     *
     * <pre>
     *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
     *so every 1875 feat vecs is a minute. 
     * </pre>
     */
    boolean hasAudioNumFeatVecsUntilAttemptFeatureUpload();
    /**
     * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
     *
     * <pre>
     *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
     *so every 1875 feat vecs is a minute. 
     * </pre>
     */
    int getAudioNumFeatVecsUntilAttemptFeatureUpload();

    // optional int32 audio_feat_buffer_size = 3;
    /**
     * <code>optional int32 audio_feat_buffer_size = 3;</code>
     *
     * <pre>
     *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
     *the buffer should be sized for your upload period 
     * </pre>
     */
    boolean hasAudioFeatBufferSize();
    /**
     * <code>optional int32 audio_feat_buffer_size = 3;</code>
     *
     * <pre>
     *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
     *the buffer should be sized for your upload period 
     * </pre>
     */
    int getAudioFeatBufferSize();

    // optional int32 audio_recording_period_in_frames = 4;
    /**
     * <code>optional int32 audio_recording_period_in_frames = 4;</code>
     *
     * <pre>
     *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
     * </pre>
     */
    boolean hasAudioRecordingPeriodInFrames();
    /**
     * <code>optional int32 audio_recording_period_in_frames = 4;</code>
     *
     * <pre>
     *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
     * </pre>
     */
    int getAudioRecordingPeriodInFrames();

    // optional .AudioControl.AudioCaptureAction audio_capture_action = 8;
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
     */
    boolean hasAudioCaptureAction();
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
     */
    com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction getAudioCaptureAction();

    // optional .AudioClassifierMessage audio_capture_classifier = 9;
    /**
     * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
     */
    boolean hasAudioCaptureClassifier();
    /**
     * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
     */
    com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage getAudioCaptureClassifier();
    /**
     * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
     */
    com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder getAudioCaptureClassifierOrBuilder();

    // optional .AudioClassifierMessage audio_capture_hmm = 10;
    /**
     * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
     */
    boolean hasAudioCaptureHmm();
    /**
     * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
     */
    com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage getAudioCaptureHmm();
    /**
     * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
     */
    com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder getAudioCaptureHmmOrBuilder();

    // optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;</code>
     */
    boolean hasAudioSaveRawData();
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;</code>
     */
    com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction getAudioSaveRawData();

    // optional .AudioControl.AudioCaptureAction audio_save_features = 12;
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_save_features = 12;</code>
     */
    boolean hasAudioSaveFeatures();
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_save_features = 12;</code>
     */
    com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction getAudioSaveFeatures();
  }
  /**
   * Protobuf type {@code AudioControl}
   */
  public static final class AudioControl extends
      com.google.protobuf.GeneratedMessage
      implements AudioControlOrBuilder {
    // Use AudioControl.newBuilder() to construct.
    private AudioControl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AudioControl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AudioControl defaultInstance;
    public static AudioControl getDefaultInstance() {
      return defaultInstance;
    }

    public AudioControl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AudioControl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              audioMinEnergyThreshold_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              audioNumFeatVecsUntilAttemptFeatureUpload_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              audioFeatBufferSize_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              audioRecordingPeriodInFrames_ = input.readInt32();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction value = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                audioCaptureAction_ = value;
              }
              break;
            }
            case 74: {
              com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = audioCaptureClassifier_.toBuilder();
              }
              audioCaptureClassifier_ = input.readMessage(com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(audioCaptureClassifier_);
                audioCaptureClassifier_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 82: {
              com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = audioCaptureHmm_.toBuilder();
              }
              audioCaptureHmm_ = input.readMessage(com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(audioCaptureHmm_);
                audioCaptureHmm_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction value = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                audioSaveRawData_ = value;
              }
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction value = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                audioSaveFeatures_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hello.suripu.api.audio.AudioControlProtos.internal_static_AudioControl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hello.suripu.api.audio.AudioControlProtos.internal_static_AudioControl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hello.suripu.api.audio.AudioControlProtos.AudioControl.class, com.hello.suripu.api.audio.AudioControlProtos.AudioControl.Builder.class);
    }

    public static com.google.protobuf.Parser<AudioControl> PARSER =
        new com.google.protobuf.AbstractParser<AudioControl>() {
      public AudioControl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AudioControl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AudioControl> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code AudioControl.AudioCaptureAction}
     *
     * <pre>
     *turn on/off audio capture
     * </pre>
     */
    public enum AudioCaptureAction
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OFF = 0;</code>
       */
      OFF(0, 0),
      /**
       * <code>ON = 1;</code>
       */
      ON(1, 1),
      ;

      /**
       * <code>OFF = 0;</code>
       */
      public static final int OFF_VALUE = 0;
      /**
       * <code>ON = 1;</code>
       */
      public static final int ON_VALUE = 1;


      public final int getNumber() { return value; }

      public static AudioCaptureAction valueOf(int value) {
        switch (value) {
          case 0: return OFF;
          case 1: return ON;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AudioCaptureAction>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AudioCaptureAction>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AudioCaptureAction>() {
              public AudioCaptureAction findValueByNumber(int number) {
                return AudioCaptureAction.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.hello.suripu.api.audio.AudioControlProtos.AudioControl.getDescriptor().getEnumTypes().get(0);
      }

      private static final AudioCaptureAction[] VALUES = values();

      public static AudioCaptureAction valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private AudioCaptureAction(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:AudioControl.AudioCaptureAction)
    }

    private int bitField0_;
    // optional int32 audio_min_energy_threshold = 1;
    public static final int AUDIO_MIN_ENERGY_THRESHOLD_FIELD_NUMBER = 1;
    private int audioMinEnergyThreshold_;
    /**
     * <code>optional int32 audio_min_energy_threshold = 1;</code>
     *
     * <pre>
     *minimum log2 audio energy above background noise to save off and classify.
     *500 is a good value for this.  Raise to 1000 to be less sensitive.    
     * </pre>
     */
    public boolean hasAudioMinEnergyThreshold() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 audio_min_energy_threshold = 1;</code>
     *
     * <pre>
     *minimum log2 audio energy above background noise to save off and classify.
     *500 is a good value for this.  Raise to 1000 to be less sensitive.    
     * </pre>
     */
    public int getAudioMinEnergyThreshold() {
      return audioMinEnergyThreshold_;
    }

    // optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;
    public static final int AUDIO_NUM_FEAT_VECS_UNTIL_ATTEMPT_FEATURE_UPLOAD_FIELD_NUMBER = 2;
    private int audioNumFeatVecsUntilAttemptFeatureUpload_;
    /**
     * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
     *
     * <pre>
     *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
     *so every 1875 feat vecs is a minute. 
     * </pre>
     */
    public boolean hasAudioNumFeatVecsUntilAttemptFeatureUpload() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
     *
     * <pre>
     *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
     *so every 1875 feat vecs is a minute. 
     * </pre>
     */
    public int getAudioNumFeatVecsUntilAttemptFeatureUpload() {
      return audioNumFeatVecsUntilAttemptFeatureUpload_;
    }

    // optional int32 audio_feat_buffer_size = 3;
    public static final int AUDIO_FEAT_BUFFER_SIZE_FIELD_NUMBER = 3;
    private int audioFeatBufferSize_;
    /**
     * <code>optional int32 audio_feat_buffer_size = 3;</code>
     *
     * <pre>
     *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
     *the buffer should be sized for your upload period 
     * </pre>
     */
    public boolean hasAudioFeatBufferSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 audio_feat_buffer_size = 3;</code>
     *
     * <pre>
     *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
     *the buffer should be sized for your upload period 
     * </pre>
     */
    public int getAudioFeatBufferSize() {
      return audioFeatBufferSize_;
    }

    // optional int32 audio_recording_period_in_frames = 4;
    public static final int AUDIO_RECORDING_PERIOD_IN_FRAMES_FIELD_NUMBER = 4;
    private int audioRecordingPeriodInFrames_;
    /**
     * <code>optional int32 audio_recording_period_in_frames = 4;</code>
     *
     * <pre>
     *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
     * </pre>
     */
    public boolean hasAudioRecordingPeriodInFrames() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 audio_recording_period_in_frames = 4;</code>
     *
     * <pre>
     *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
     * </pre>
     */
    public int getAudioRecordingPeriodInFrames() {
      return audioRecordingPeriodInFrames_;
    }

    // optional .AudioControl.AudioCaptureAction audio_capture_action = 8;
    public static final int AUDIO_CAPTURE_ACTION_FIELD_NUMBER = 8;
    private com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction audioCaptureAction_;
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
     */
    public boolean hasAudioCaptureAction() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
     */
    public com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction getAudioCaptureAction() {
      return audioCaptureAction_;
    }

    // optional .AudioClassifierMessage audio_capture_classifier = 9;
    public static final int AUDIO_CAPTURE_CLASSIFIER_FIELD_NUMBER = 9;
    private com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage audioCaptureClassifier_;
    /**
     * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
     */
    public boolean hasAudioCaptureClassifier() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
     */
    public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage getAudioCaptureClassifier() {
      return audioCaptureClassifier_;
    }
    /**
     * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
     */
    public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder getAudioCaptureClassifierOrBuilder() {
      return audioCaptureClassifier_;
    }

    // optional .AudioClassifierMessage audio_capture_hmm = 10;
    public static final int AUDIO_CAPTURE_HMM_FIELD_NUMBER = 10;
    private com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage audioCaptureHmm_;
    /**
     * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
     */
    public boolean hasAudioCaptureHmm() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
     */
    public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage getAudioCaptureHmm() {
      return audioCaptureHmm_;
    }
    /**
     * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
     */
    public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder getAudioCaptureHmmOrBuilder() {
      return audioCaptureHmm_;
    }

    // optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;
    public static final int AUDIO_SAVE_RAW_DATA_FIELD_NUMBER = 11;
    private com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction audioSaveRawData_;
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;</code>
     */
    public boolean hasAudioSaveRawData() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;</code>
     */
    public com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction getAudioSaveRawData() {
      return audioSaveRawData_;
    }

    // optional .AudioControl.AudioCaptureAction audio_save_features = 12;
    public static final int AUDIO_SAVE_FEATURES_FIELD_NUMBER = 12;
    private com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction audioSaveFeatures_;
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_save_features = 12;</code>
     */
    public boolean hasAudioSaveFeatures() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .AudioControl.AudioCaptureAction audio_save_features = 12;</code>
     */
    public com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction getAudioSaveFeatures() {
      return audioSaveFeatures_;
    }

    private void initFields() {
      audioMinEnergyThreshold_ = 0;
      audioNumFeatVecsUntilAttemptFeatureUpload_ = 0;
      audioFeatBufferSize_ = 0;
      audioRecordingPeriodInFrames_ = 0;
      audioCaptureAction_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
      audioCaptureClassifier_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance();
      audioCaptureHmm_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance();
      audioSaveRawData_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
      audioSaveFeatures_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, audioMinEnergyThreshold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, audioNumFeatVecsUntilAttemptFeatureUpload_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, audioFeatBufferSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, audioRecordingPeriodInFrames_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(8, audioCaptureAction_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(9, audioCaptureClassifier_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(10, audioCaptureHmm_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(11, audioSaveRawData_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(12, audioSaveFeatures_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, audioMinEnergyThreshold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, audioNumFeatVecsUntilAttemptFeatureUpload_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, audioFeatBufferSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, audioRecordingPeriodInFrames_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, audioCaptureAction_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, audioCaptureClassifier_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, audioCaptureHmm_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, audioSaveRawData_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, audioSaveFeatures_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hello.suripu.api.audio.AudioControlProtos.AudioControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hello.suripu.api.audio.AudioControlProtos.AudioControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hello.suripu.api.audio.AudioControlProtos.AudioControl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AudioControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hello.suripu.api.audio.AudioControlProtos.AudioControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hello.suripu.api.audio.AudioControlProtos.internal_static_AudioControl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hello.suripu.api.audio.AudioControlProtos.internal_static_AudioControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hello.suripu.api.audio.AudioControlProtos.AudioControl.class, com.hello.suripu.api.audio.AudioControlProtos.AudioControl.Builder.class);
      }

      // Construct using com.hello.suripu.api.audio.AudioControlProtos.AudioControl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAudioCaptureClassifierFieldBuilder();
          getAudioCaptureHmmFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        audioMinEnergyThreshold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        audioNumFeatVecsUntilAttemptFeatureUpload_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        audioFeatBufferSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        audioRecordingPeriodInFrames_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        audioCaptureAction_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (audioCaptureClassifierBuilder_ == null) {
          audioCaptureClassifier_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance();
        } else {
          audioCaptureClassifierBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (audioCaptureHmmBuilder_ == null) {
          audioCaptureHmm_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance();
        } else {
          audioCaptureHmmBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        audioSaveRawData_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
        bitField0_ = (bitField0_ & ~0x00000080);
        audioSaveFeatures_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hello.suripu.api.audio.AudioControlProtos.internal_static_AudioControl_descriptor;
      }

      public com.hello.suripu.api.audio.AudioControlProtos.AudioControl getDefaultInstanceForType() {
        return com.hello.suripu.api.audio.AudioControlProtos.AudioControl.getDefaultInstance();
      }

      public com.hello.suripu.api.audio.AudioControlProtos.AudioControl build() {
        com.hello.suripu.api.audio.AudioControlProtos.AudioControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hello.suripu.api.audio.AudioControlProtos.AudioControl buildPartial() {
        com.hello.suripu.api.audio.AudioControlProtos.AudioControl result = new com.hello.suripu.api.audio.AudioControlProtos.AudioControl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.audioMinEnergyThreshold_ = audioMinEnergyThreshold_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.audioNumFeatVecsUntilAttemptFeatureUpload_ = audioNumFeatVecsUntilAttemptFeatureUpload_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.audioFeatBufferSize_ = audioFeatBufferSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.audioRecordingPeriodInFrames_ = audioRecordingPeriodInFrames_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.audioCaptureAction_ = audioCaptureAction_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (audioCaptureClassifierBuilder_ == null) {
          result.audioCaptureClassifier_ = audioCaptureClassifier_;
        } else {
          result.audioCaptureClassifier_ = audioCaptureClassifierBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (audioCaptureHmmBuilder_ == null) {
          result.audioCaptureHmm_ = audioCaptureHmm_;
        } else {
          result.audioCaptureHmm_ = audioCaptureHmmBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.audioSaveRawData_ = audioSaveRawData_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.audioSaveFeatures_ = audioSaveFeatures_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hello.suripu.api.audio.AudioControlProtos.AudioControl) {
          return mergeFrom((com.hello.suripu.api.audio.AudioControlProtos.AudioControl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hello.suripu.api.audio.AudioControlProtos.AudioControl other) {
        if (other == com.hello.suripu.api.audio.AudioControlProtos.AudioControl.getDefaultInstance()) return this;
        if (other.hasAudioMinEnergyThreshold()) {
          setAudioMinEnergyThreshold(other.getAudioMinEnergyThreshold());
        }
        if (other.hasAudioNumFeatVecsUntilAttemptFeatureUpload()) {
          setAudioNumFeatVecsUntilAttemptFeatureUpload(other.getAudioNumFeatVecsUntilAttemptFeatureUpload());
        }
        if (other.hasAudioFeatBufferSize()) {
          setAudioFeatBufferSize(other.getAudioFeatBufferSize());
        }
        if (other.hasAudioRecordingPeriodInFrames()) {
          setAudioRecordingPeriodInFrames(other.getAudioRecordingPeriodInFrames());
        }
        if (other.hasAudioCaptureAction()) {
          setAudioCaptureAction(other.getAudioCaptureAction());
        }
        if (other.hasAudioCaptureClassifier()) {
          mergeAudioCaptureClassifier(other.getAudioCaptureClassifier());
        }
        if (other.hasAudioCaptureHmm()) {
          mergeAudioCaptureHmm(other.getAudioCaptureHmm());
        }
        if (other.hasAudioSaveRawData()) {
          setAudioSaveRawData(other.getAudioSaveRawData());
        }
        if (other.hasAudioSaveFeatures()) {
          setAudioSaveFeatures(other.getAudioSaveFeatures());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hello.suripu.api.audio.AudioControlProtos.AudioControl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hello.suripu.api.audio.AudioControlProtos.AudioControl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 audio_min_energy_threshold = 1;
      private int audioMinEnergyThreshold_ ;
      /**
       * <code>optional int32 audio_min_energy_threshold = 1;</code>
       *
       * <pre>
       *minimum log2 audio energy above background noise to save off and classify.
       *500 is a good value for this.  Raise to 1000 to be less sensitive.    
       * </pre>
       */
      public boolean hasAudioMinEnergyThreshold() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 audio_min_energy_threshold = 1;</code>
       *
       * <pre>
       *minimum log2 audio energy above background noise to save off and classify.
       *500 is a good value for this.  Raise to 1000 to be less sensitive.    
       * </pre>
       */
      public int getAudioMinEnergyThreshold() {
        return audioMinEnergyThreshold_;
      }
      /**
       * <code>optional int32 audio_min_energy_threshold = 1;</code>
       *
       * <pre>
       *minimum log2 audio energy above background noise to save off and classify.
       *500 is a good value for this.  Raise to 1000 to be less sensitive.    
       * </pre>
       */
      public Builder setAudioMinEnergyThreshold(int value) {
        bitField0_ |= 0x00000001;
        audioMinEnergyThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 audio_min_energy_threshold = 1;</code>
       *
       * <pre>
       *minimum log2 audio energy above background noise to save off and classify.
       *500 is a good value for this.  Raise to 1000 to be less sensitive.    
       * </pre>
       */
      public Builder clearAudioMinEnergyThreshold() {
        bitField0_ = (bitField0_ & ~0x00000001);
        audioMinEnergyThreshold_ = 0;
        onChanged();
        return this;
      }

      // optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;
      private int audioNumFeatVecsUntilAttemptFeatureUpload_ ;
      /**
       * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
       *
       * <pre>
       *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
       *so every 1875 feat vecs is a minute. 
       * </pre>
       */
      public boolean hasAudioNumFeatVecsUntilAttemptFeatureUpload() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
       *
       * <pre>
       *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
       *so every 1875 feat vecs is a minute. 
       * </pre>
       */
      public int getAudioNumFeatVecsUntilAttemptFeatureUpload() {
        return audioNumFeatVecsUntilAttemptFeatureUpload_;
      }
      /**
       * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
       *
       * <pre>
       *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
       *so every 1875 feat vecs is a minute. 
       * </pre>
       */
      public Builder setAudioNumFeatVecsUntilAttemptFeatureUpload(int value) {
        bitField0_ |= 0x00000002;
        audioNumFeatVecsUntilAttemptFeatureUpload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
       *
       * <pre>
       *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
       *so every 1875 feat vecs is a minute. 
       * </pre>
       */
      public Builder clearAudioNumFeatVecsUntilAttemptFeatureUpload() {
        bitField0_ = (bitField0_ & ~0x00000002);
        audioNumFeatVecsUntilAttemptFeatureUpload_ = 0;
        onChanged();
        return this;
      }

      // optional int32 audio_feat_buffer_size = 3;
      private int audioFeatBufferSize_ ;
      /**
       * <code>optional int32 audio_feat_buffer_size = 3;</code>
       *
       * <pre>
       *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
       *the buffer should be sized for your upload period 
       * </pre>
       */
      public boolean hasAudioFeatBufferSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 audio_feat_buffer_size = 3;</code>
       *
       * <pre>
       *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
       *the buffer should be sized for your upload period 
       * </pre>
       */
      public int getAudioFeatBufferSize() {
        return audioFeatBufferSize_;
      }
      /**
       * <code>optional int32 audio_feat_buffer_size = 3;</code>
       *
       * <pre>
       *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
       *the buffer should be sized for your upload period 
       * </pre>
       */
      public Builder setAudioFeatBufferSize(int value) {
        bitField0_ |= 0x00000004;
        audioFeatBufferSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 audio_feat_buffer_size = 3;</code>
       *
       * <pre>
       *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
       *the buffer should be sized for your upload period 
       * </pre>
       */
      public Builder clearAudioFeatBufferSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        audioFeatBufferSize_ = 0;
        onChanged();
        return this;
      }

      // optional int32 audio_recording_period_in_frames = 4;
      private int audioRecordingPeriodInFrames_ ;
      /**
       * <code>optional int32 audio_recording_period_in_frames = 4;</code>
       *
       * <pre>
       *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
       * </pre>
       */
      public boolean hasAudioRecordingPeriodInFrames() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 audio_recording_period_in_frames = 4;</code>
       *
       * <pre>
       *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
       * </pre>
       */
      public int getAudioRecordingPeriodInFrames() {
        return audioRecordingPeriodInFrames_;
      }
      /**
       * <code>optional int32 audio_recording_period_in_frames = 4;</code>
       *
       * <pre>
       *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
       * </pre>
       */
      public Builder setAudioRecordingPeriodInFrames(int value) {
        bitField0_ |= 0x00000008;
        audioRecordingPeriodInFrames_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 audio_recording_period_in_frames = 4;</code>
       *
       * <pre>
       *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
       * </pre>
       */
      public Builder clearAudioRecordingPeriodInFrames() {
        bitField0_ = (bitField0_ & ~0x00000008);
        audioRecordingPeriodInFrames_ = 0;
        onChanged();
        return this;
      }

      // optional .AudioControl.AudioCaptureAction audio_capture_action = 8;
      private com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction audioCaptureAction_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
       */
      public boolean hasAudioCaptureAction() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
       */
      public com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction getAudioCaptureAction() {
        return audioCaptureAction_;
      }
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
       */
      public Builder setAudioCaptureAction(com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        audioCaptureAction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
       */
      public Builder clearAudioCaptureAction() {
        bitField0_ = (bitField0_ & ~0x00000010);
        audioCaptureAction_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
        onChanged();
        return this;
      }

      // optional .AudioClassifierMessage audio_capture_classifier = 9;
      private com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage audioCaptureClassifier_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder> audioCaptureClassifierBuilder_;
      /**
       * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
       */
      public boolean hasAudioCaptureClassifier() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
       */
      public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage getAudioCaptureClassifier() {
        if (audioCaptureClassifierBuilder_ == null) {
          return audioCaptureClassifier_;
        } else {
          return audioCaptureClassifierBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
       */
      public Builder setAudioCaptureClassifier(com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage value) {
        if (audioCaptureClassifierBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioCaptureClassifier_ = value;
          onChanged();
        } else {
          audioCaptureClassifierBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
       */
      public Builder setAudioCaptureClassifier(
          com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder builderForValue) {
        if (audioCaptureClassifierBuilder_ == null) {
          audioCaptureClassifier_ = builderForValue.build();
          onChanged();
        } else {
          audioCaptureClassifierBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
       */
      public Builder mergeAudioCaptureClassifier(com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage value) {
        if (audioCaptureClassifierBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              audioCaptureClassifier_ != com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance()) {
            audioCaptureClassifier_ =
              com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.newBuilder(audioCaptureClassifier_).mergeFrom(value).buildPartial();
          } else {
            audioCaptureClassifier_ = value;
          }
          onChanged();
        } else {
          audioCaptureClassifierBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
       */
      public Builder clearAudioCaptureClassifier() {
        if (audioCaptureClassifierBuilder_ == null) {
          audioCaptureClassifier_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance();
          onChanged();
        } else {
          audioCaptureClassifierBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
       */
      public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder getAudioCaptureClassifierBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getAudioCaptureClassifierFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
       */
      public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder getAudioCaptureClassifierOrBuilder() {
        if (audioCaptureClassifierBuilder_ != null) {
          return audioCaptureClassifierBuilder_.getMessageOrBuilder();
        } else {
          return audioCaptureClassifier_;
        }
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_classifier = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder> 
          getAudioCaptureClassifierFieldBuilder() {
        if (audioCaptureClassifierBuilder_ == null) {
          audioCaptureClassifierBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder>(
                  audioCaptureClassifier_,
                  getParentForChildren(),
                  isClean());
          audioCaptureClassifier_ = null;
        }
        return audioCaptureClassifierBuilder_;
      }

      // optional .AudioClassifierMessage audio_capture_hmm = 10;
      private com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage audioCaptureHmm_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder> audioCaptureHmmBuilder_;
      /**
       * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
       */
      public boolean hasAudioCaptureHmm() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
       */
      public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage getAudioCaptureHmm() {
        if (audioCaptureHmmBuilder_ == null) {
          return audioCaptureHmm_;
        } else {
          return audioCaptureHmmBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
       */
      public Builder setAudioCaptureHmm(com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage value) {
        if (audioCaptureHmmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioCaptureHmm_ = value;
          onChanged();
        } else {
          audioCaptureHmmBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
       */
      public Builder setAudioCaptureHmm(
          com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder builderForValue) {
        if (audioCaptureHmmBuilder_ == null) {
          audioCaptureHmm_ = builderForValue.build();
          onChanged();
        } else {
          audioCaptureHmmBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
       */
      public Builder mergeAudioCaptureHmm(com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage value) {
        if (audioCaptureHmmBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              audioCaptureHmm_ != com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance()) {
            audioCaptureHmm_ =
              com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.newBuilder(audioCaptureHmm_).mergeFrom(value).buildPartial();
          } else {
            audioCaptureHmm_ = value;
          }
          onChanged();
        } else {
          audioCaptureHmmBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
       */
      public Builder clearAudioCaptureHmm() {
        if (audioCaptureHmmBuilder_ == null) {
          audioCaptureHmm_ = com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.getDefaultInstance();
          onChanged();
        } else {
          audioCaptureHmmBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
       */
      public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder getAudioCaptureHmmBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getAudioCaptureHmmFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
       */
      public com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder getAudioCaptureHmmOrBuilder() {
        if (audioCaptureHmmBuilder_ != null) {
          return audioCaptureHmmBuilder_.getMessageOrBuilder();
        } else {
          return audioCaptureHmm_;
        }
      }
      /**
       * <code>optional .AudioClassifierMessage audio_capture_hmm = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder> 
          getAudioCaptureHmmFieldBuilder() {
        if (audioCaptureHmmBuilder_ == null) {
          audioCaptureHmmBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessage.Builder, com.hello.suripu.api.audio.AudioControlProtos.AudioClassifierMessageOrBuilder>(
                  audioCaptureHmm_,
                  getParentForChildren(),
                  isClean());
          audioCaptureHmm_ = null;
        }
        return audioCaptureHmmBuilder_;
      }

      // optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;
      private com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction audioSaveRawData_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;</code>
       */
      public boolean hasAudioSaveRawData() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;</code>
       */
      public com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction getAudioSaveRawData() {
        return audioSaveRawData_;
      }
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;</code>
       */
      public Builder setAudioSaveRawData(com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        audioSaveRawData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_save_raw_data = 11;</code>
       */
      public Builder clearAudioSaveRawData() {
        bitField0_ = (bitField0_ & ~0x00000080);
        audioSaveRawData_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
        onChanged();
        return this;
      }

      // optional .AudioControl.AudioCaptureAction audio_save_features = 12;
      private com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction audioSaveFeatures_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_save_features = 12;</code>
       */
      public boolean hasAudioSaveFeatures() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_save_features = 12;</code>
       */
      public com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction getAudioSaveFeatures() {
        return audioSaveFeatures_;
      }
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_save_features = 12;</code>
       */
      public Builder setAudioSaveFeatures(com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        audioSaveFeatures_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .AudioControl.AudioCaptureAction audio_save_features = 12;</code>
       */
      public Builder clearAudioSaveFeatures() {
        bitField0_ = (bitField0_ & ~0x00000100);
        audioSaveFeatures_ = com.hello.suripu.api.audio.AudioControlProtos.AudioControl.AudioCaptureAction.OFF;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AudioControl)
    }

    static {
      defaultInstance = new AudioControl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AudioControl)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AudioClassifierMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AudioClassifierMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AudioControl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AudioControl_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023audio_control.proto\"\222\001\n\026AudioClassifie" +
      "rMessage\022\r\n\005idata\030\001 \003(\021\022\022\n\nnumclasses\030\002 " +
      "\001(\005\0224\n\004type\030\003 \001(\0162&.AudioClassifierMessa" +
      "ge.ClassifierType\"\037\n\016ClassifierType\022\r\n\tL" +
      "INEARSVM\020\000\"\212\004\n\014AudioControl\022\"\n\032audio_min" +
      "_energy_threshold\030\001 \001(\005\0228\n0audio_num_fea" +
      "t_vecs_until_attempt_feature_upload\030\002 \001(" +
      "\005\022\036\n\026audio_feat_buffer_size\030\003 \001(\005\022(\n aud" +
      "io_recording_period_in_frames\030\004 \001(\005\022>\n\024a" +
      "udio_capture_action\030\010 \001(\0162 .AudioControl",
      ".AudioCaptureAction\0229\n\030audio_capture_cla" +
      "ssifier\030\t \001(\0132\027.AudioClassifierMessage\0222" +
      "\n\021audio_capture_hmm\030\n \001(\0132\027.AudioClassif" +
      "ierMessage\022=\n\023audio_save_raw_data\030\013 \001(\0162" +
      " .AudioControl.AudioCaptureAction\022=\n\023aud" +
      "io_save_features\030\014 \001(\0162 .AudioControl.Au" +
      "dioCaptureAction\"%\n\022AudioCaptureAction\022\007" +
      "\n\003OFF\020\000\022\006\n\002ON\020\001B0\n\032com.hello.suripu.api." +
      "audioB\022AudioControlProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_AudioClassifierMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_AudioClassifierMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AudioClassifierMessage_descriptor,
              new java.lang.String[] { "Idata", "Numclasses", "Type", });
          internal_static_AudioControl_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_AudioControl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AudioControl_descriptor,
              new java.lang.String[] { "AudioMinEnergyThreshold", "AudioNumFeatVecsUntilAttemptFeatureUpload", "AudioFeatBufferSize", "AudioRecordingPeriodInFrames", "AudioCaptureAction", "AudioCaptureClassifier", "AudioCaptureHmm", "AudioSaveRawData", "AudioSaveFeatures", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
