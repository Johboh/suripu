// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: periodic.proto

package com.hello.suripu.api.input;

public final class DataInputProtos {
  private DataInputProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface periodic_dataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 unix_time = 1;
    /**
     * <code>optional int32 unix_time = 1;</code>
     */
    boolean hasUnixTime();
    /**
     * <code>optional int32 unix_time = 1;</code>
     */
    int getUnixTime();

    // optional int32 light = 2;
    /**
     * <code>optional int32 light = 2;</code>
     */
    boolean hasLight();
    /**
     * <code>optional int32 light = 2;</code>
     */
    int getLight();

    // optional int32 temperature = 3;
    /**
     * <code>optional int32 temperature = 3;</code>
     */
    boolean hasTemperature();
    /**
     * <code>optional int32 temperature = 3;</code>
     */
    int getTemperature();

    // optional int32 humidity = 4;
    /**
     * <code>optional int32 humidity = 4;</code>
     */
    boolean hasHumidity();
    /**
     * <code>optional int32 humidity = 4;</code>
     */
    int getHumidity();

    // optional int32 dust = 5;
    /**
     * <code>optional int32 dust = 5;</code>
     */
    boolean hasDust();
    /**
     * <code>optional int32 dust = 5;</code>
     */
    int getDust();

    // optional string name = 6;
    /**
     * <code>optional string name = 6;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 6;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 6;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional bytes mac = 7;
    /**
     * <code>optional bytes mac = 7;</code>
     */
    boolean hasMac();
    /**
     * <code>optional bytes mac = 7;</code>
     */
    com.google.protobuf.ByteString getMac();

    // optional int32 light_variability = 8;
    /**
     * <code>optional int32 light_variability = 8;</code>
     */
    boolean hasLightVariability();
    /**
     * <code>optional int32 light_variability = 8;</code>
     */
    int getLightVariability();

    // optional int32 light_tonality = 9;
    /**
     * <code>optional int32 light_tonality = 9;</code>
     */
    boolean hasLightTonality();
    /**
     * <code>optional int32 light_tonality = 9;</code>
     */
    int getLightTonality();

    // optional int32 firmware_version = 10;
    /**
     * <code>optional int32 firmware_version = 10;</code>
     */
    boolean hasFirmwareVersion();
    /**
     * <code>optional int32 firmware_version = 10;</code>
     */
    int getFirmwareVersion();

    // optional string device_id = 12;
    /**
     * <code>optional string device_id = 12;</code>
     *
     * <pre>
     * Please do not reuse index 11, it's for the removed pill_data.
     * </pre>
     */
    boolean hasDeviceId();
    /**
     * <code>optional string device_id = 12;</code>
     *
     * <pre>
     * Please do not reuse index 11, it's for the removed pill_data.
     * </pre>
     */
    java.lang.String getDeviceId();
    /**
     * <code>optional string device_id = 12;</code>
     *
     * <pre>
     * Please do not reuse index 11, it's for the removed pill_data.
     * </pre>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    // optional int32 dust_variability = 13;
    /**
     * <code>optional int32 dust_variability = 13;</code>
     */
    boolean hasDustVariability();
    /**
     * <code>optional int32 dust_variability = 13;</code>
     */
    int getDustVariability();

    // optional int32 dust_max = 14;
    /**
     * <code>optional int32 dust_max = 14;</code>
     */
    boolean hasDustMax();
    /**
     * <code>optional int32 dust_max = 14;</code>
     */
    int getDustMax();

    // optional int32 dust_min = 15;
    /**
     * <code>optional int32 dust_min = 15;</code>
     */
    boolean hasDustMin();
    /**
     * <code>optional int32 dust_min = 15;</code>
     */
    int getDustMin();

    // optional int32 wave_count = 16;
    /**
     * <code>optional int32 wave_count = 16;</code>
     */
    boolean hasWaveCount();
    /**
     * <code>optional int32 wave_count = 16;</code>
     */
    int getWaveCount();

    // optional int32 hold_count = 17;
    /**
     * <code>optional int32 hold_count = 17;</code>
     */
    boolean hasHoldCount();
    /**
     * <code>optional int32 hold_count = 17;</code>
     */
    int getHoldCount();
  }
  /**
   * Protobuf type {@code periodic_data}
   */
  public static final class periodic_data extends
      com.google.protobuf.GeneratedMessage
      implements periodic_dataOrBuilder {
    // Use periodic_data.newBuilder() to construct.
    private periodic_data(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private periodic_data(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final periodic_data defaultInstance;
    public static periodic_data getDefaultInstance() {
      return defaultInstance;
    }

    public periodic_data getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private periodic_data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              unixTime_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              light_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              temperature_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              humidity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              dust_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              name_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              mac_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              lightVariability_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              lightTonality_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              firmwareVersion_ = input.readInt32();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000400;
              deviceId_ = input.readBytes();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              dustVariability_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              dustMax_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              dustMin_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              waveCount_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              holdCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hello.suripu.api.input.DataInputProtos.internal_static_periodic_data_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hello.suripu.api.input.DataInputProtos.internal_static_periodic_data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hello.suripu.api.input.DataInputProtos.periodic_data.class, com.hello.suripu.api.input.DataInputProtos.periodic_data.Builder.class);
    }

    public static com.google.protobuf.Parser<periodic_data> PARSER =
        new com.google.protobuf.AbstractParser<periodic_data>() {
      public periodic_data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new periodic_data(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<periodic_data> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 unix_time = 1;
    public static final int UNIX_TIME_FIELD_NUMBER = 1;
    private int unixTime_;
    /**
     * <code>optional int32 unix_time = 1;</code>
     */
    public boolean hasUnixTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 unix_time = 1;</code>
     */
    public int getUnixTime() {
      return unixTime_;
    }

    // optional int32 light = 2;
    public static final int LIGHT_FIELD_NUMBER = 2;
    private int light_;
    /**
     * <code>optional int32 light = 2;</code>
     */
    public boolean hasLight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 light = 2;</code>
     */
    public int getLight() {
      return light_;
    }

    // optional int32 temperature = 3;
    public static final int TEMPERATURE_FIELD_NUMBER = 3;
    private int temperature_;
    /**
     * <code>optional int32 temperature = 3;</code>
     */
    public boolean hasTemperature() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 temperature = 3;</code>
     */
    public int getTemperature() {
      return temperature_;
    }

    // optional int32 humidity = 4;
    public static final int HUMIDITY_FIELD_NUMBER = 4;
    private int humidity_;
    /**
     * <code>optional int32 humidity = 4;</code>
     */
    public boolean hasHumidity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 humidity = 4;</code>
     */
    public int getHumidity() {
      return humidity_;
    }

    // optional int32 dust = 5;
    public static final int DUST_FIELD_NUMBER = 5;
    private int dust_;
    /**
     * <code>optional int32 dust = 5;</code>
     */
    public boolean hasDust() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 dust = 5;</code>
     */
    public int getDust() {
      return dust_;
    }

    // optional string name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 6;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string name = 6;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 6;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes mac = 7;
    public static final int MAC_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString mac_;
    /**
     * <code>optional bytes mac = 7;</code>
     */
    public boolean hasMac() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes mac = 7;</code>
     */
    public com.google.protobuf.ByteString getMac() {
      return mac_;
    }

    // optional int32 light_variability = 8;
    public static final int LIGHT_VARIABILITY_FIELD_NUMBER = 8;
    private int lightVariability_;
    /**
     * <code>optional int32 light_variability = 8;</code>
     */
    public boolean hasLightVariability() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 light_variability = 8;</code>
     */
    public int getLightVariability() {
      return lightVariability_;
    }

    // optional int32 light_tonality = 9;
    public static final int LIGHT_TONALITY_FIELD_NUMBER = 9;
    private int lightTonality_;
    /**
     * <code>optional int32 light_tonality = 9;</code>
     */
    public boolean hasLightTonality() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 light_tonality = 9;</code>
     */
    public int getLightTonality() {
      return lightTonality_;
    }

    // optional int32 firmware_version = 10;
    public static final int FIRMWARE_VERSION_FIELD_NUMBER = 10;
    private int firmwareVersion_;
    /**
     * <code>optional int32 firmware_version = 10;</code>
     */
    public boolean hasFirmwareVersion() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 firmware_version = 10;</code>
     */
    public int getFirmwareVersion() {
      return firmwareVersion_;
    }

    // optional string device_id = 12;
    public static final int DEVICE_ID_FIELD_NUMBER = 12;
    private java.lang.Object deviceId_;
    /**
     * <code>optional string device_id = 12;</code>
     *
     * <pre>
     * Please do not reuse index 11, it's for the removed pill_data.
     * </pre>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string device_id = 12;</code>
     *
     * <pre>
     * Please do not reuse index 11, it's for the removed pill_data.
     * </pre>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string device_id = 12;</code>
     *
     * <pre>
     * Please do not reuse index 11, it's for the removed pill_data.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 dust_variability = 13;
    public static final int DUST_VARIABILITY_FIELD_NUMBER = 13;
    private int dustVariability_;
    /**
     * <code>optional int32 dust_variability = 13;</code>
     */
    public boolean hasDustVariability() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 dust_variability = 13;</code>
     */
    public int getDustVariability() {
      return dustVariability_;
    }

    // optional int32 dust_max = 14;
    public static final int DUST_MAX_FIELD_NUMBER = 14;
    private int dustMax_;
    /**
     * <code>optional int32 dust_max = 14;</code>
     */
    public boolean hasDustMax() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 dust_max = 14;</code>
     */
    public int getDustMax() {
      return dustMax_;
    }

    // optional int32 dust_min = 15;
    public static final int DUST_MIN_FIELD_NUMBER = 15;
    private int dustMin_;
    /**
     * <code>optional int32 dust_min = 15;</code>
     */
    public boolean hasDustMin() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 dust_min = 15;</code>
     */
    public int getDustMin() {
      return dustMin_;
    }

    // optional int32 wave_count = 16;
    public static final int WAVE_COUNT_FIELD_NUMBER = 16;
    private int waveCount_;
    /**
     * <code>optional int32 wave_count = 16;</code>
     */
    public boolean hasWaveCount() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 wave_count = 16;</code>
     */
    public int getWaveCount() {
      return waveCount_;
    }

    // optional int32 hold_count = 17;
    public static final int HOLD_COUNT_FIELD_NUMBER = 17;
    private int holdCount_;
    /**
     * <code>optional int32 hold_count = 17;</code>
     */
    public boolean hasHoldCount() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 hold_count = 17;</code>
     */
    public int getHoldCount() {
      return holdCount_;
    }

    private void initFields() {
      unixTime_ = 0;
      light_ = 0;
      temperature_ = 0;
      humidity_ = 0;
      dust_ = 0;
      name_ = "";
      mac_ = com.google.protobuf.ByteString.EMPTY;
      lightVariability_ = 0;
      lightTonality_ = 0;
      firmwareVersion_ = 0;
      deviceId_ = "";
      dustVariability_ = 0;
      dustMax_ = 0;
      dustMin_ = 0;
      waveCount_ = 0;
      holdCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, unixTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, light_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, temperature_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, humidity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, dust_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getNameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, mac_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, lightVariability_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, lightTonality_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, firmwareVersion_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(12, getDeviceIdBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, dustVariability_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(14, dustMax_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(15, dustMin_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(16, waveCount_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(17, holdCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, unixTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, light_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, temperature_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, humidity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, dust_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getNameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, mac_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, lightVariability_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, lightTonality_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, firmwareVersion_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getDeviceIdBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, dustVariability_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, dustMax_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, dustMin_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, waveCount_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, holdCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hello.suripu.api.input.DataInputProtos.periodic_data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hello.suripu.api.input.DataInputProtos.periodic_data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hello.suripu.api.input.DataInputProtos.periodic_data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hello.suripu.api.input.DataInputProtos.periodic_data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hello.suripu.api.input.DataInputProtos.periodic_data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hello.suripu.api.input.DataInputProtos.periodic_data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hello.suripu.api.input.DataInputProtos.periodic_data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hello.suripu.api.input.DataInputProtos.periodic_data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hello.suripu.api.input.DataInputProtos.periodic_data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hello.suripu.api.input.DataInputProtos.periodic_data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hello.suripu.api.input.DataInputProtos.periodic_data prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code periodic_data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hello.suripu.api.input.DataInputProtos.periodic_dataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hello.suripu.api.input.DataInputProtos.internal_static_periodic_data_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hello.suripu.api.input.DataInputProtos.internal_static_periodic_data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hello.suripu.api.input.DataInputProtos.periodic_data.class, com.hello.suripu.api.input.DataInputProtos.periodic_data.Builder.class);
      }

      // Construct using com.hello.suripu.api.input.DataInputProtos.periodic_data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        unixTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        light_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        temperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        humidity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        dust_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        mac_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        lightVariability_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        lightTonality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        firmwareVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        dustVariability_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        dustMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        dustMin_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        waveCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        holdCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hello.suripu.api.input.DataInputProtos.internal_static_periodic_data_descriptor;
      }

      public com.hello.suripu.api.input.DataInputProtos.periodic_data getDefaultInstanceForType() {
        return com.hello.suripu.api.input.DataInputProtos.periodic_data.getDefaultInstance();
      }

      public com.hello.suripu.api.input.DataInputProtos.periodic_data build() {
        com.hello.suripu.api.input.DataInputProtos.periodic_data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hello.suripu.api.input.DataInputProtos.periodic_data buildPartial() {
        com.hello.suripu.api.input.DataInputProtos.periodic_data result = new com.hello.suripu.api.input.DataInputProtos.periodic_data(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unixTime_ = unixTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.light_ = light_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.temperature_ = temperature_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.humidity_ = humidity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dust_ = dust_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.lightVariability_ = lightVariability_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.lightTonality_ = lightTonality_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.firmwareVersion_ = firmwareVersion_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.deviceId_ = deviceId_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.dustVariability_ = dustVariability_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.dustMax_ = dustMax_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.dustMin_ = dustMin_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.waveCount_ = waveCount_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.holdCount_ = holdCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hello.suripu.api.input.DataInputProtos.periodic_data) {
          return mergeFrom((com.hello.suripu.api.input.DataInputProtos.periodic_data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hello.suripu.api.input.DataInputProtos.periodic_data other) {
        if (other == com.hello.suripu.api.input.DataInputProtos.periodic_data.getDefaultInstance()) return this;
        if (other.hasUnixTime()) {
          setUnixTime(other.getUnixTime());
        }
        if (other.hasLight()) {
          setLight(other.getLight());
        }
        if (other.hasTemperature()) {
          setTemperature(other.getTemperature());
        }
        if (other.hasHumidity()) {
          setHumidity(other.getHumidity());
        }
        if (other.hasDust()) {
          setDust(other.getDust());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000020;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasMac()) {
          setMac(other.getMac());
        }
        if (other.hasLightVariability()) {
          setLightVariability(other.getLightVariability());
        }
        if (other.hasLightTonality()) {
          setLightTonality(other.getLightTonality());
        }
        if (other.hasFirmwareVersion()) {
          setFirmwareVersion(other.getFirmwareVersion());
        }
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000400;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (other.hasDustVariability()) {
          setDustVariability(other.getDustVariability());
        }
        if (other.hasDustMax()) {
          setDustMax(other.getDustMax());
        }
        if (other.hasDustMin()) {
          setDustMin(other.getDustMin());
        }
        if (other.hasWaveCount()) {
          setWaveCount(other.getWaveCount());
        }
        if (other.hasHoldCount()) {
          setHoldCount(other.getHoldCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hello.suripu.api.input.DataInputProtos.periodic_data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hello.suripu.api.input.DataInputProtos.periodic_data) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 unix_time = 1;
      private int unixTime_ ;
      /**
       * <code>optional int32 unix_time = 1;</code>
       */
      public boolean hasUnixTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 unix_time = 1;</code>
       */
      public int getUnixTime() {
        return unixTime_;
      }
      /**
       * <code>optional int32 unix_time = 1;</code>
       */
      public Builder setUnixTime(int value) {
        bitField0_ |= 0x00000001;
        unixTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unix_time = 1;</code>
       */
      public Builder clearUnixTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unixTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 light = 2;
      private int light_ ;
      /**
       * <code>optional int32 light = 2;</code>
       */
      public boolean hasLight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 light = 2;</code>
       */
      public int getLight() {
        return light_;
      }
      /**
       * <code>optional int32 light = 2;</code>
       */
      public Builder setLight(int value) {
        bitField0_ |= 0x00000002;
        light_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 light = 2;</code>
       */
      public Builder clearLight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        light_ = 0;
        onChanged();
        return this;
      }

      // optional int32 temperature = 3;
      private int temperature_ ;
      /**
       * <code>optional int32 temperature = 3;</code>
       */
      public boolean hasTemperature() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 temperature = 3;</code>
       */
      public int getTemperature() {
        return temperature_;
      }
      /**
       * <code>optional int32 temperature = 3;</code>
       */
      public Builder setTemperature(int value) {
        bitField0_ |= 0x00000004;
        temperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 temperature = 3;</code>
       */
      public Builder clearTemperature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        temperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 humidity = 4;
      private int humidity_ ;
      /**
       * <code>optional int32 humidity = 4;</code>
       */
      public boolean hasHumidity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 humidity = 4;</code>
       */
      public int getHumidity() {
        return humidity_;
      }
      /**
       * <code>optional int32 humidity = 4;</code>
       */
      public Builder setHumidity(int value) {
        bitField0_ |= 0x00000008;
        humidity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 humidity = 4;</code>
       */
      public Builder clearHumidity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        humidity_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dust = 5;
      private int dust_ ;
      /**
       * <code>optional int32 dust = 5;</code>
       */
      public boolean hasDust() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 dust = 5;</code>
       */
      public int getDust() {
        return dust_;
      }
      /**
       * <code>optional int32 dust = 5;</code>
       */
      public Builder setDust(int value) {
        bitField0_ |= 0x00000010;
        dust_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dust = 5;</code>
       */
      public Builder clearDust() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dust_ = 0;
        onChanged();
        return this;
      }

      // optional string name = 6;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 6;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string name = 6;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 6;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 6;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 6;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        name_ = value;
        onChanged();
        return this;
      }

      // optional bytes mac = 7;
      private com.google.protobuf.ByteString mac_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes mac = 7;</code>
       */
      public boolean hasMac() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes mac = 7;</code>
       */
      public com.google.protobuf.ByteString getMac() {
        return mac_;
      }
      /**
       * <code>optional bytes mac = 7;</code>
       */
      public Builder setMac(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        mac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes mac = 7;</code>
       */
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000040);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }

      // optional int32 light_variability = 8;
      private int lightVariability_ ;
      /**
       * <code>optional int32 light_variability = 8;</code>
       */
      public boolean hasLightVariability() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 light_variability = 8;</code>
       */
      public int getLightVariability() {
        return lightVariability_;
      }
      /**
       * <code>optional int32 light_variability = 8;</code>
       */
      public Builder setLightVariability(int value) {
        bitField0_ |= 0x00000080;
        lightVariability_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 light_variability = 8;</code>
       */
      public Builder clearLightVariability() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lightVariability_ = 0;
        onChanged();
        return this;
      }

      // optional int32 light_tonality = 9;
      private int lightTonality_ ;
      /**
       * <code>optional int32 light_tonality = 9;</code>
       */
      public boolean hasLightTonality() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 light_tonality = 9;</code>
       */
      public int getLightTonality() {
        return lightTonality_;
      }
      /**
       * <code>optional int32 light_tonality = 9;</code>
       */
      public Builder setLightTonality(int value) {
        bitField0_ |= 0x00000100;
        lightTonality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 light_tonality = 9;</code>
       */
      public Builder clearLightTonality() {
        bitField0_ = (bitField0_ & ~0x00000100);
        lightTonality_ = 0;
        onChanged();
        return this;
      }

      // optional int32 firmware_version = 10;
      private int firmwareVersion_ ;
      /**
       * <code>optional int32 firmware_version = 10;</code>
       */
      public boolean hasFirmwareVersion() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 firmware_version = 10;</code>
       */
      public int getFirmwareVersion() {
        return firmwareVersion_;
      }
      /**
       * <code>optional int32 firmware_version = 10;</code>
       */
      public Builder setFirmwareVersion(int value) {
        bitField0_ |= 0x00000200;
        firmwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 firmware_version = 10;</code>
       */
      public Builder clearFirmwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000200);
        firmwareVersion_ = 0;
        onChanged();
        return this;
      }

      // optional string device_id = 12;
      private java.lang.Object deviceId_ = "";
      /**
       * <code>optional string device_id = 12;</code>
       *
       * <pre>
       * Please do not reuse index 11, it's for the removed pill_data.
       * </pre>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string device_id = 12;</code>
       *
       * <pre>
       * Please do not reuse index 11, it's for the removed pill_data.
       * </pre>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string device_id = 12;</code>
       *
       * <pre>
       * Please do not reuse index 11, it's for the removed pill_data.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string device_id = 12;</code>
       *
       * <pre>
       * Please do not reuse index 11, it's for the removed pill_data.
       * </pre>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string device_id = 12;</code>
       *
       * <pre>
       * Please do not reuse index 11, it's for the removed pill_data.
       * </pre>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string device_id = 12;</code>
       *
       * <pre>
       * Please do not reuse index 11, it's for the removed pill_data.
       * </pre>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        deviceId_ = value;
        onChanged();
        return this;
      }

      // optional int32 dust_variability = 13;
      private int dustVariability_ ;
      /**
       * <code>optional int32 dust_variability = 13;</code>
       */
      public boolean hasDustVariability() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 dust_variability = 13;</code>
       */
      public int getDustVariability() {
        return dustVariability_;
      }
      /**
       * <code>optional int32 dust_variability = 13;</code>
       */
      public Builder setDustVariability(int value) {
        bitField0_ |= 0x00000800;
        dustVariability_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dust_variability = 13;</code>
       */
      public Builder clearDustVariability() {
        bitField0_ = (bitField0_ & ~0x00000800);
        dustVariability_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dust_max = 14;
      private int dustMax_ ;
      /**
       * <code>optional int32 dust_max = 14;</code>
       */
      public boolean hasDustMax() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 dust_max = 14;</code>
       */
      public int getDustMax() {
        return dustMax_;
      }
      /**
       * <code>optional int32 dust_max = 14;</code>
       */
      public Builder setDustMax(int value) {
        bitField0_ |= 0x00001000;
        dustMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dust_max = 14;</code>
       */
      public Builder clearDustMax() {
        bitField0_ = (bitField0_ & ~0x00001000);
        dustMax_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dust_min = 15;
      private int dustMin_ ;
      /**
       * <code>optional int32 dust_min = 15;</code>
       */
      public boolean hasDustMin() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 dust_min = 15;</code>
       */
      public int getDustMin() {
        return dustMin_;
      }
      /**
       * <code>optional int32 dust_min = 15;</code>
       */
      public Builder setDustMin(int value) {
        bitField0_ |= 0x00002000;
        dustMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dust_min = 15;</code>
       */
      public Builder clearDustMin() {
        bitField0_ = (bitField0_ & ~0x00002000);
        dustMin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 wave_count = 16;
      private int waveCount_ ;
      /**
       * <code>optional int32 wave_count = 16;</code>
       */
      public boolean hasWaveCount() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 wave_count = 16;</code>
       */
      public int getWaveCount() {
        return waveCount_;
      }
      /**
       * <code>optional int32 wave_count = 16;</code>
       */
      public Builder setWaveCount(int value) {
        bitField0_ |= 0x00004000;
        waveCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wave_count = 16;</code>
       */
      public Builder clearWaveCount() {
        bitField0_ = (bitField0_ & ~0x00004000);
        waveCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hold_count = 17;
      private int holdCount_ ;
      /**
       * <code>optional int32 hold_count = 17;</code>
       */
      public boolean hasHoldCount() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 hold_count = 17;</code>
       */
      public int getHoldCount() {
        return holdCount_;
      }
      /**
       * <code>optional int32 hold_count = 17;</code>
       */
      public Builder setHoldCount(int value) {
        bitField0_ |= 0x00008000;
        holdCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hold_count = 17;</code>
       */
      public Builder clearHoldCount() {
        bitField0_ = (bitField0_ & ~0x00008000);
        holdCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:periodic_data)
    }

    static {
      defaultInstance = new periodic_data(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:periodic_data)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_periodic_data_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_periodic_data_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016periodic.proto\"\307\002\n\rperiodic_data\022\021\n\tun" +
      "ix_time\030\001 \001(\005\022\r\n\005light\030\002 \001(\005\022\023\n\013temperat" +
      "ure\030\003 \001(\005\022\020\n\010humidity\030\004 \001(\005\022\014\n\004dust\030\005 \001(" +
      "\005\022\014\n\004name\030\006 \001(\t\022\013\n\003mac\030\007 \001(\014\022\031\n\021light_va" +
      "riability\030\010 \001(\005\022\026\n\016light_tonality\030\t \001(\005\022" +
      "\030\n\020firmware_version\030\n \001(\005\022\021\n\tdevice_id\030\014" +
      " \001(\t\022\030\n\020dust_variability\030\r \001(\005\022\020\n\010dust_m" +
      "ax\030\016 \001(\005\022\020\n\010dust_min\030\017 \001(\005\022\022\n\nwave_count" +
      "\030\020 \001(\005\022\022\n\nhold_count\030\021 \001(\005B-\n\032com.hello." +
      "suripu.api.inputB\017DataInputProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_periodic_data_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_periodic_data_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_periodic_data_descriptor,
              new java.lang.String[] { "UnixTime", "Light", "Temperature", "Humidity", "Dust", "Name", "Mac", "LightVariability", "LightTonality", "FirmwareVersion", "DeviceId", "DustVariability", "DustMax", "DustMin", "WaveCount", "HoldCount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
