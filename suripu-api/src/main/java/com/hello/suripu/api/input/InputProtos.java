// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Input.proto

package com.hello.suripu.api.input;

public final class InputProtos {
  private InputProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SensorSampleBatchOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .hello.SensorSampleBatch.SensorSample samples = 1;
    /**
     * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
     */
    java.util.List<com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample> 
        getSamplesList();
    /**
     * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
     */
    com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample getSamples(int index);
    /**
     * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
     */
    int getSamplesCount();
    /**
     * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
     */
    java.util.List<? extends com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSampleOrBuilder> 
        getSamplesOrBuilderList();
    /**
     * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
     */
    com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSampleOrBuilder getSamplesOrBuilder(
        int index);

    // optional string device_id = 2;
    /**
     * <code>optional string device_id = 2;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>optional string device_id = 2;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>optional string device_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();
  }
  /**
   * Protobuf type {@code hello.SensorSampleBatch}
   */
  public static final class SensorSampleBatch extends
      com.google.protobuf.GeneratedMessage
      implements SensorSampleBatchOrBuilder {
    // Use SensorSampleBatch.newBuilder() to construct.
    private SensorSampleBatch(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorSampleBatch(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorSampleBatch defaultInstance;
    public static SensorSampleBatch getDefaultInstance() {
      return defaultInstance;
    }

    public SensorSampleBatch getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorSampleBatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                samples_ = new java.util.ArrayList<com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample>();
                mutable_bitField0_ |= 0x00000001;
              }
              samples_.add(input.readMessage(com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              deviceId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          samples_ = java.util.Collections.unmodifiableList(samples_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hello.suripu.api.input.InputProtos.internal_static_hello_SensorSampleBatch_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hello.suripu.api.input.InputProtos.internal_static_hello_SensorSampleBatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hello.suripu.api.input.InputProtos.SensorSampleBatch.class, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorSampleBatch> PARSER =
        new com.google.protobuf.AbstractParser<SensorSampleBatch>() {
      public SensorSampleBatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorSampleBatch(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SensorSampleBatch> getParserForType() {
      return PARSER;
    }

    public interface SensorSampleOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;
      /**
       * <code>optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;</code>
       */
      boolean hasSensorType();
      /**
       * <code>optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;</code>
       */
      com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType getSensorType();

      // optional int32 timestamp = 2;
      /**
       * <code>optional int32 timestamp = 2;</code>
       */
      boolean hasTimestamp();
      /**
       * <code>optional int32 timestamp = 2;</code>
       */
      int getTimestamp();

      // optional int32 value = 3;
      /**
       * <code>optional int32 value = 3;</code>
       */
      boolean hasValue();
      /**
       * <code>optional int32 value = 3;</code>
       */
      int getValue();
    }
    /**
     * Protobuf type {@code hello.SensorSampleBatch.SensorSample}
     */
    public static final class SensorSample extends
        com.google.protobuf.GeneratedMessage
        implements SensorSampleOrBuilder {
      // Use SensorSample.newBuilder() to construct.
      private SensorSample(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SensorSample(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SensorSample defaultInstance;
      public static SensorSample getDefaultInstance() {
        return defaultInstance;
      }

      public SensorSample getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SensorSample(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType value = com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  sensorType_ = value;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                timestamp_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                value_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hello.suripu.api.input.InputProtos.internal_static_hello_SensorSampleBatch_SensorSample_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hello.suripu.api.input.InputProtos.internal_static_hello_SensorSampleBatch_SensorSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.class, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder.class);
      }

      public static com.google.protobuf.Parser<SensorSample> PARSER =
          new com.google.protobuf.AbstractParser<SensorSample>() {
        public SensorSample parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorSample(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SensorSample> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code hello.SensorSampleBatch.SensorSample.SensorType}
       */
      public enum SensorType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>AMBIENT_TEMPERATURE = 0;</code>
         */
        AMBIENT_TEMPERATURE(0, 0),
        /**
         * <code>AMBIENT_HUMIDITY = 1;</code>
         */
        AMBIENT_HUMIDITY(1, 1),
        /**
         * <code>AMBIENT_LIGHT = 2;</code>
         */
        AMBIENT_LIGHT(2, 2),
        /**
         * <code>AMBIENT_DECIBELS = 3;</code>
         */
        AMBIENT_DECIBELS(3, 3),
        /**
         * <code>AMBIENT_AIR_QUALITY = 4;</code>
         */
        AMBIENT_AIR_QUALITY(4, 4),
        /**
         * <code>GPS = 5;</code>
         */
        GPS(5, 5),
        /**
         * <code>PHONE_ACCELERATION = 6;</code>
         */
        PHONE_ACCELERATION(6, 6),
        /**
         * <code>PHONE_STEP_COUNT = 7;</code>
         */
        PHONE_STEP_COUNT(7, 7),
        ;

        /**
         * <code>AMBIENT_TEMPERATURE = 0;</code>
         */
        public static final int AMBIENT_TEMPERATURE_VALUE = 0;
        /**
         * <code>AMBIENT_HUMIDITY = 1;</code>
         */
        public static final int AMBIENT_HUMIDITY_VALUE = 1;
        /**
         * <code>AMBIENT_LIGHT = 2;</code>
         */
        public static final int AMBIENT_LIGHT_VALUE = 2;
        /**
         * <code>AMBIENT_DECIBELS = 3;</code>
         */
        public static final int AMBIENT_DECIBELS_VALUE = 3;
        /**
         * <code>AMBIENT_AIR_QUALITY = 4;</code>
         */
        public static final int AMBIENT_AIR_QUALITY_VALUE = 4;
        /**
         * <code>GPS = 5;</code>
         */
        public static final int GPS_VALUE = 5;
        /**
         * <code>PHONE_ACCELERATION = 6;</code>
         */
        public static final int PHONE_ACCELERATION_VALUE = 6;
        /**
         * <code>PHONE_STEP_COUNT = 7;</code>
         */
        public static final int PHONE_STEP_COUNT_VALUE = 7;


        public final int getNumber() { return value; }

        public static SensorType valueOf(int value) {
          switch (value) {
            case 0: return AMBIENT_TEMPERATURE;
            case 1: return AMBIENT_HUMIDITY;
            case 2: return AMBIENT_LIGHT;
            case 3: return AMBIENT_DECIBELS;
            case 4: return AMBIENT_AIR_QUALITY;
            case 5: return GPS;
            case 6: return PHONE_ACCELERATION;
            case 7: return PHONE_STEP_COUNT;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<SensorType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
                public SensorType findValueByNumber(int number) {
                  return SensorType.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.getDescriptor().getEnumTypes().get(0);
        }

        private static final SensorType[] VALUES = values();

        public static SensorType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private SensorType(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:hello.SensorSampleBatch.SensorSample.SensorType)
      }

      private int bitField0_;
      // optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;
      public static final int SENSOR_TYPE_FIELD_NUMBER = 1;
      private com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType sensorType_;
      /**
       * <code>optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;</code>
       */
      public boolean hasSensorType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;</code>
       */
      public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType getSensorType() {
        return sensorType_;
      }

      // optional int32 timestamp = 2;
      public static final int TIMESTAMP_FIELD_NUMBER = 2;
      private int timestamp_;
      /**
       * <code>optional int32 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 timestamp = 2;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }

      // optional int32 value = 3;
      public static final int VALUE_FIELD_NUMBER = 3;
      private int value_;
      /**
       * <code>optional int32 value = 3;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 value = 3;</code>
       */
      public int getValue() {
        return value_;
      }

      private void initFields() {
        sensorType_ = com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType.AMBIENT_TEMPERATURE;
        timestamp_ = 0;
        value_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, sensorType_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, timestamp_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, value_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, sensorType_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, timestamp_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code hello.SensorSampleBatch.SensorSample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSampleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.hello.suripu.api.input.InputProtos.internal_static_hello_SensorSampleBatch_SensorSample_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.hello.suripu.api.input.InputProtos.internal_static_hello_SensorSampleBatch_SensorSample_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.class, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder.class);
        }

        // Construct using com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          sensorType_ = com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType.AMBIENT_TEMPERATURE;
          bitField0_ = (bitField0_ & ~0x00000001);
          timestamp_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.hello.suripu.api.input.InputProtos.internal_static_hello_SensorSampleBatch_SensorSample_descriptor;
        }

        public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample getDefaultInstanceForType() {
          return com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.getDefaultInstance();
        }

        public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample build() {
          com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample buildPartial() {
          com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample result = new com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sensorType_ = sensorType_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.timestamp_ = timestamp_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample) {
            return mergeFrom((com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample other) {
          if (other == com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.getDefaultInstance()) return this;
          if (other.hasSensorType()) {
            setSensorType(other.getSensorType());
          }
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;
        private com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType sensorType_ = com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType.AMBIENT_TEMPERATURE;
        /**
         * <code>optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;</code>
         */
        public boolean hasSensorType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;</code>
         */
        public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType getSensorType() {
          return sensorType_;
        }
        /**
         * <code>optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;</code>
         */
        public Builder setSensorType(com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          sensorType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .hello.SensorSampleBatch.SensorSample.SensorType sensor_type = 1;</code>
         */
        public Builder clearSensorType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sensorType_ = com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.SensorType.AMBIENT_TEMPERATURE;
          onChanged();
          return this;
        }

        // optional int32 timestamp = 2;
        private int timestamp_ ;
        /**
         * <code>optional int32 timestamp = 2;</code>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 timestamp = 2;</code>
         */
        public int getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional int32 timestamp = 2;</code>
         */
        public Builder setTimestamp(int value) {
          bitField0_ |= 0x00000002;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 timestamp = 2;</code>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000002);
          timestamp_ = 0;
          onChanged();
          return this;
        }

        // optional int32 value = 3;
        private int value_ ;
        /**
         * <code>optional int32 value = 3;</code>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 value = 3;</code>
         */
        public int getValue() {
          return value_;
        }
        /**
         * <code>optional int32 value = 3;</code>
         */
        public Builder setValue(int value) {
          bitField0_ |= 0x00000004;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 value = 3;</code>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          value_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:hello.SensorSampleBatch.SensorSample)
      }

      static {
        defaultInstance = new SensorSample(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:hello.SensorSampleBatch.SensorSample)
    }

    private int bitField0_;
    // repeated .hello.SensorSampleBatch.SensorSample samples = 1;
    public static final int SAMPLES_FIELD_NUMBER = 1;
    private java.util.List<com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample> samples_;
    /**
     * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
     */
    public java.util.List<com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample> getSamplesList() {
      return samples_;
    }
    /**
     * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
     */
    public java.util.List<? extends com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSampleOrBuilder> 
        getSamplesOrBuilderList() {
      return samples_;
    }
    /**
     * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
     */
    public int getSamplesCount() {
      return samples_.size();
    }
    /**
     * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
     */
    public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample getSamples(int index) {
      return samples_.get(index);
    }
    /**
     * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
     */
    public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSampleOrBuilder getSamplesOrBuilder(
        int index) {
      return samples_.get(index);
    }

    // optional string device_id = 2;
    public static final int DEVICE_ID_FIELD_NUMBER = 2;
    private java.lang.Object deviceId_;
    /**
     * <code>optional string device_id = 2;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string device_id = 2;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string device_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      samples_ = java.util.Collections.emptyList();
      deviceId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < samples_.size(); i++) {
        output.writeMessage(1, samples_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getDeviceIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < samples_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, samples_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDeviceIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hello.suripu.api.input.InputProtos.SensorSampleBatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hello.suripu.api.input.InputProtos.SensorSampleBatch prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hello.SensorSampleBatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hello.suripu.api.input.InputProtos.SensorSampleBatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hello.suripu.api.input.InputProtos.internal_static_hello_SensorSampleBatch_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hello.suripu.api.input.InputProtos.internal_static_hello_SensorSampleBatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hello.suripu.api.input.InputProtos.SensorSampleBatch.class, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.Builder.class);
      }

      // Construct using com.hello.suripu.api.input.InputProtos.SensorSampleBatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSamplesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (samplesBuilder_ == null) {
          samples_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          samplesBuilder_.clear();
        }
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hello.suripu.api.input.InputProtos.internal_static_hello_SensorSampleBatch_descriptor;
      }

      public com.hello.suripu.api.input.InputProtos.SensorSampleBatch getDefaultInstanceForType() {
        return com.hello.suripu.api.input.InputProtos.SensorSampleBatch.getDefaultInstance();
      }

      public com.hello.suripu.api.input.InputProtos.SensorSampleBatch build() {
        com.hello.suripu.api.input.InputProtos.SensorSampleBatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hello.suripu.api.input.InputProtos.SensorSampleBatch buildPartial() {
        com.hello.suripu.api.input.InputProtos.SensorSampleBatch result = new com.hello.suripu.api.input.InputProtos.SensorSampleBatch(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (samplesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            samples_ = java.util.Collections.unmodifiableList(samples_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.samples_ = samples_;
        } else {
          result.samples_ = samplesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceId_ = deviceId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hello.suripu.api.input.InputProtos.SensorSampleBatch) {
          return mergeFrom((com.hello.suripu.api.input.InputProtos.SensorSampleBatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hello.suripu.api.input.InputProtos.SensorSampleBatch other) {
        if (other == com.hello.suripu.api.input.InputProtos.SensorSampleBatch.getDefaultInstance()) return this;
        if (samplesBuilder_ == null) {
          if (!other.samples_.isEmpty()) {
            if (samples_.isEmpty()) {
              samples_ = other.samples_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSamplesIsMutable();
              samples_.addAll(other.samples_);
            }
            onChanged();
          }
        } else {
          if (!other.samples_.isEmpty()) {
            if (samplesBuilder_.isEmpty()) {
              samplesBuilder_.dispose();
              samplesBuilder_ = null;
              samples_ = other.samples_;
              bitField0_ = (bitField0_ & ~0x00000001);
              samplesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSamplesFieldBuilder() : null;
            } else {
              samplesBuilder_.addAllMessages(other.samples_);
            }
          }
        }
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000002;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hello.suripu.api.input.InputProtos.SensorSampleBatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hello.suripu.api.input.InputProtos.SensorSampleBatch) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .hello.SensorSampleBatch.SensorSample samples = 1;
      private java.util.List<com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample> samples_ =
        java.util.Collections.emptyList();
      private void ensureSamplesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          samples_ = new java.util.ArrayList<com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample>(samples_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSampleOrBuilder> samplesBuilder_;

      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public java.util.List<com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample> getSamplesList() {
        if (samplesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(samples_);
        } else {
          return samplesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public int getSamplesCount() {
        if (samplesBuilder_ == null) {
          return samples_.size();
        } else {
          return samplesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample getSamples(int index) {
        if (samplesBuilder_ == null) {
          return samples_.get(index);
        } else {
          return samplesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public Builder setSamples(
          int index, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample value) {
        if (samplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSamplesIsMutable();
          samples_.set(index, value);
          onChanged();
        } else {
          samplesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public Builder setSamples(
          int index, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder builderForValue) {
        if (samplesBuilder_ == null) {
          ensureSamplesIsMutable();
          samples_.set(index, builderForValue.build());
          onChanged();
        } else {
          samplesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public Builder addSamples(com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample value) {
        if (samplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSamplesIsMutable();
          samples_.add(value);
          onChanged();
        } else {
          samplesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public Builder addSamples(
          int index, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample value) {
        if (samplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSamplesIsMutable();
          samples_.add(index, value);
          onChanged();
        } else {
          samplesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public Builder addSamples(
          com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder builderForValue) {
        if (samplesBuilder_ == null) {
          ensureSamplesIsMutable();
          samples_.add(builderForValue.build());
          onChanged();
        } else {
          samplesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public Builder addSamples(
          int index, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder builderForValue) {
        if (samplesBuilder_ == null) {
          ensureSamplesIsMutable();
          samples_.add(index, builderForValue.build());
          onChanged();
        } else {
          samplesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public Builder addAllSamples(
          java.lang.Iterable<? extends com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample> values) {
        if (samplesBuilder_ == null) {
          ensureSamplesIsMutable();
          super.addAll(values, samples_);
          onChanged();
        } else {
          samplesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public Builder clearSamples() {
        if (samplesBuilder_ == null) {
          samples_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          samplesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public Builder removeSamples(int index) {
        if (samplesBuilder_ == null) {
          ensureSamplesIsMutable();
          samples_.remove(index);
          onChanged();
        } else {
          samplesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder getSamplesBuilder(
          int index) {
        return getSamplesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSampleOrBuilder getSamplesOrBuilder(
          int index) {
        if (samplesBuilder_ == null) {
          return samples_.get(index);  } else {
          return samplesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public java.util.List<? extends com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSampleOrBuilder> 
           getSamplesOrBuilderList() {
        if (samplesBuilder_ != null) {
          return samplesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(samples_);
        }
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder addSamplesBuilder() {
        return getSamplesFieldBuilder().addBuilder(
            com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.getDefaultInstance());
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder addSamplesBuilder(
          int index) {
        return getSamplesFieldBuilder().addBuilder(
            index, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.getDefaultInstance());
      }
      /**
       * <code>repeated .hello.SensorSampleBatch.SensorSample samples = 1;</code>
       */
      public java.util.List<com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder> 
           getSamplesBuilderList() {
        return getSamplesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSampleOrBuilder> 
          getSamplesFieldBuilder() {
        if (samplesBuilder_ == null) {
          samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSample.Builder, com.hello.suripu.api.input.InputProtos.SensorSampleBatch.SensorSampleOrBuilder>(
                  samples_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          samples_ = null;
        }
        return samplesBuilder_;
      }

      // optional string device_id = 2;
      private java.lang.Object deviceId_ = "";
      /**
       * <code>optional string device_id = 2;</code>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string device_id = 2;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string device_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string device_id = 2;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string device_id = 2;</code>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string device_id = 2;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        deviceId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:hello.SensorSampleBatch)
    }

    static {
      defaultInstance = new SensorSampleBatch(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:hello.SensorSampleBatch)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hello_SensorSampleBatch_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hello_SensorSampleBatch_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hello_SensorSampleBatch_SensorSample_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hello_SensorSampleBatch_SensorSample_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Input.proto\022\005hello\"\217\003\n\021SensorSampleBat" +
      "ch\0226\n\007samples\030\001 \003(\0132%.hello.SensorSample" +
      "Batch.SensorSample\022\021\n\tdevice_id\030\002 \001(\t\032\256\002" +
      "\n\014SensorSample\022E\n\013sensor_type\030\001 \001(\01620.he" +
      "llo.SensorSampleBatch.SensorSample.Senso" +
      "rType\022\021\n\ttimestamp\030\002 \001(\005\022\r\n\005value\030\003 \001(\005\"" +
      "\264\001\n\nSensorType\022\027\n\023AMBIENT_TEMPERATURE\020\000\022" +
      "\024\n\020AMBIENT_HUMIDITY\020\001\022\021\n\rAMBIENT_LIGHT\020\002" +
      "\022\024\n\020AMBIENT_DECIBELS\020\003\022\027\n\023AMBIENT_AIR_QU" +
      "ALITY\020\004\022\007\n\003GPS\020\005\022\026\n\022PHONE_ACCELERATION\020\006",
      "\022\024\n\020PHONE_STEP_COUNT\020\007B+\n\032com.hello.suri" +
      "pu.api.inputB\013InputProtosH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_hello_SensorSampleBatch_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_hello_SensorSampleBatch_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hello_SensorSampleBatch_descriptor,
              new java.lang.String[] { "Samples", "DeviceId", });
          internal_static_hello_SensorSampleBatch_SensorSample_descriptor =
            internal_static_hello_SensorSampleBatch_descriptor.getNestedTypes().get(0);
          internal_static_hello_SensorSampleBatch_SensorSample_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hello_SensorSampleBatch_SensorSample_descriptor,
              new java.lang.String[] { "SensorType", "Timestamp", "Value", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
