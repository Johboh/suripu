// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync_response.proto

package com.hello.suripu.api.output;

public final class OutputProtos {
  private OutputProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SyncResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 upload_cycle = 1;
    /**
     * <code>optional int32 upload_cycle = 1;</code>
     */
    boolean hasUploadCycle();
    /**
     * <code>optional int32 upload_cycle = 1;</code>
     */
    int getUploadCycle();

    // optional int32 sync_cycle = 2;
    /**
     * <code>optional int32 sync_cycle = 2;</code>
     */
    boolean hasSyncCycle();
    /**
     * <code>optional int32 sync_cycle = 2;</code>
     */
    int getSyncCycle();

    // optional int32 acc_scan_cyle = 3;
    /**
     * <code>optional int32 acc_scan_cyle = 3;</code>
     */
    boolean hasAccScanCyle();
    /**
     * <code>optional int32 acc_scan_cyle = 3;</code>
     */
    int getAccScanCyle();

    // optional int32 acc_sampling_interval = 4;
    /**
     * <code>optional int32 acc_sampling_interval = 4;</code>
     */
    boolean hasAccSamplingInterval();
    /**
     * <code>optional int32 acc_sampling_interval = 4;</code>
     */
    int getAccSamplingInterval();

    // optional int32 device_sampling_interval = 5;
    /**
     * <code>optional int32 device_sampling_interval = 5;</code>
     */
    boolean hasDeviceSamplingInterval();
    /**
     * <code>optional int32 device_sampling_interval = 5;</code>
     */
    int getDeviceSamplingInterval();

    // optional .SyncResponse.Alarm alarm = 6;
    /**
     * <code>optional .SyncResponse.Alarm alarm = 6;</code>
     */
    boolean hasAlarm();
    /**
     * <code>optional .SyncResponse.Alarm alarm = 6;</code>
     */
    SyncResponse.Alarm getAlarm();
    /**
     * <code>optional .SyncResponse.Alarm alarm = 6;</code>
     */
    SyncResponse.AlarmOrBuilder getAlarmOrBuilder();

    // optional .SyncResponse.PairingAction pairing_action = 7;
    /**
     * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
     */
    boolean hasPairingAction();
    /**
     * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
     */
    SyncResponse.PairingAction getPairingAction();
    /**
     * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
     */
    SyncResponse.PairingActionOrBuilder getPairingActionOrBuilder();

    // optional .SyncResponse.WhiteNoise white_noise = 8;
    /**
     * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
     */
    boolean hasWhiteNoise();
    /**
     * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
     */
    SyncResponse.WhiteNoise getWhiteNoise();
    /**
     * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
     */
    SyncResponse.WhiteNoiseOrBuilder getWhiteNoiseOrBuilder();

    // optional .SyncResponse.FlashAction flash_action = 9;
    /**
     * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
     */
    boolean hasFlashAction();
    /**
     * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
     */
    SyncResponse.FlashAction getFlashAction();
    /**
     * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
     */
    SyncResponse.FlashActionOrBuilder getFlashActionOrBuilder();

    // optional bool reset_device = 10;
    /**
     * <code>optional bool reset_device = 10;</code>
     */
    boolean hasResetDevice();
    /**
     * <code>optional bool reset_device = 10;</code>
     */
    boolean getResetDevice();

    // optional .SyncResponse.RoomConditions room_conditions = 12;
    /**
     * <code>optional .SyncResponse.RoomConditions room_conditions = 12;</code>
     */
    boolean hasRoomConditions();
    /**
     * <code>optional .SyncResponse.RoomConditions room_conditions = 12;</code>
     */
    SyncResponse.RoomConditions getRoomConditions();

    // repeated .SyncResponse.FileDownload files = 13;
    /**
     * <code>repeated .SyncResponse.FileDownload files = 13;</code>
     */
    java.util.List<SyncResponse.FileDownload>
        getFilesList();
    /**
     * <code>repeated .SyncResponse.FileDownload files = 13;</code>
     */
    SyncResponse.FileDownload getFiles(int index);
    /**
     * <code>repeated .SyncResponse.FileDownload files = 13;</code>
     */
    int getFilesCount();
    /**
     * <code>repeated .SyncResponse.FileDownload files = 13;</code>
     */
    java.util.List<? extends SyncResponse.FileDownloadOrBuilder>
        getFilesOrBuilderList();
    /**
     * <code>repeated .SyncResponse.FileDownload files = 13;</code>
     */
    SyncResponse.FileDownloadOrBuilder getFilesOrBuilder(
            int index);

    // optional bool reset_to_factory_fw = 14;
    /**
     * <code>optional bool reset_to_factory_fw = 14;</code>
     */
    boolean hasResetToFactoryFw();
    /**
     * <code>optional bool reset_to_factory_fw = 14;</code>
     */
    boolean getResetToFactoryFw();

    // optional .SyncResponse.AudioControl audio_control = 15;
    /**
     * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
     */
    boolean hasAudioControl();
    /**
     * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
     */
    SyncResponse.AudioControl getAudioControl();
    /**
     * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
     */
    SyncResponse.AudioControlOrBuilder getAudioControlOrBuilder();
  }
  /**
   * Protobuf type {@code SyncResponse}
   */
  public static final class SyncResponse extends
      com.google.protobuf.GeneratedMessage
      implements SyncResponseOrBuilder {
    // Use SyncResponse.newBuilder() to construct.
    private SyncResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SyncResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SyncResponse defaultInstance;
    public static SyncResponse getDefaultInstance() {
      return defaultInstance;
    }

    public SyncResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SyncResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uploadCycle_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              syncCycle_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accScanCyle_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              accSamplingInterval_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              deviceSamplingInterval_ = input.readInt32();
              break;
            }
            case 50: {
              Alarm.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = alarm_.toBuilder();
              }
              alarm_ = input.readMessage(Alarm.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(alarm_);
                alarm_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              PairingAction.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = pairingAction_.toBuilder();
              }
              pairingAction_ = input.readMessage(PairingAction.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pairingAction_);
                pairingAction_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              WhiteNoise.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = whiteNoise_.toBuilder();
              }
              whiteNoise_ = input.readMessage(WhiteNoise.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(whiteNoise_);
                whiteNoise_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              FlashAction.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = flashAction_.toBuilder();
              }
              flashAction_ = input.readMessage(FlashAction.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flashAction_);
                flashAction_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              resetDevice_ = input.readBool();
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              RoomConditions value = RoomConditions.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                roomConditions_ = value;
              }
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                files_ = new java.util.ArrayList<FileDownload>();
                mutable_bitField0_ |= 0x00000800;
              }
              files_.add(input.readMessage(FileDownload.PARSER, extensionRegistry));
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              resetToFactoryFw_ = input.readBool();
              break;
            }
            case 122: {
              AudioControl.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = audioControl_.toBuilder();
              }
              audioControl_ = input.readMessage(AudioControl.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(audioControl_);
                audioControl_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          files_ = java.util.Collections.unmodifiableList(files_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OutputProtos.internal_static_SyncResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OutputProtos.internal_static_SyncResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SyncResponse.class, Builder.class);
    }

    public static com.google.protobuf.Parser<SyncResponse> PARSER =
        new com.google.protobuf.AbstractParser<SyncResponse>() {
      public SyncResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SyncResponse(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<SyncResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code SyncResponse.RoomConditions}
     */
    public enum RoomConditions
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>IDEAL = 1;</code>
       */
      IDEAL(0, 1),
      /**
       * <code>WARNING = 2;</code>
       */
      WARNING(1, 2),
      /**
       * <code>ALERT = 3;</code>
       */
      ALERT(2, 3),
      ;

      /**
       * <code>IDEAL = 1;</code>
       */
      public static final int IDEAL_VALUE = 1;
      /**
       * <code>WARNING = 2;</code>
       */
      public static final int WARNING_VALUE = 2;
      /**
       * <code>ALERT = 3;</code>
       */
      public static final int ALERT_VALUE = 3;


      public final int getNumber() { return value; }

      public static RoomConditions valueOf(int value) {
        switch (value) {
          case 1: return IDEAL;
          case 2: return WARNING;
          case 3: return ALERT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RoomConditions>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RoomConditions>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RoomConditions>() {
              public RoomConditions findValueByNumber(int number) {
                return RoomConditions.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SyncResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final RoomConditions[] VALUES = values();

      public static RoomConditions valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private RoomConditions(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SyncResponse.RoomConditions)
    }

    public interface FileDownloadOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string host = 1;
      /**
       * <code>optional string host = 1;</code>
       */
      boolean hasHost();
      /**
       * <code>optional string host = 1;</code>
       */
      String getHost();
      /**
       * <code>optional string host = 1;</code>
       */
      com.google.protobuf.ByteString
          getHostBytes();

      // optional string url = 2;
      /**
       * <code>optional string url = 2;</code>
       */
      boolean hasUrl();
      /**
       * <code>optional string url = 2;</code>
       */
      String getUrl();
      /**
       * <code>optional string url = 2;</code>
       */
      com.google.protobuf.ByteString
          getUrlBytes();

      // optional bool copy_to_serial_flash = 4;
      /**
       * <code>optional bool copy_to_serial_flash = 4;</code>
       */
      boolean hasCopyToSerialFlash();
      /**
       * <code>optional bool copy_to_serial_flash = 4;</code>
       */
      boolean getCopyToSerialFlash();

      // optional bool reset_network_processor = 5;
      /**
       * <code>optional bool reset_network_processor = 5;</code>
       */
      boolean hasResetNetworkProcessor();
      /**
       * <code>optional bool reset_network_processor = 5;</code>
       */
      boolean getResetNetworkProcessor();

      // optional bool reset_application_processor = 6;
      /**
       * <code>optional bool reset_application_processor = 6;</code>
       */
      boolean hasResetApplicationProcessor();
      /**
       * <code>optional bool reset_application_processor = 6;</code>
       */
      boolean getResetApplicationProcessor();

      // optional string serial_flash_filename = 7;
      /**
       * <code>optional string serial_flash_filename = 7;</code>
       */
      boolean hasSerialFlashFilename();
      /**
       * <code>optional string serial_flash_filename = 7;</code>
       */
      String getSerialFlashFilename();
      /**
       * <code>optional string serial_flash_filename = 7;</code>
       */
      com.google.protobuf.ByteString
          getSerialFlashFilenameBytes();

      // optional string serial_flash_path = 8;
      /**
       * <code>optional string serial_flash_path = 8;</code>
       */
      boolean hasSerialFlashPath();
      /**
       * <code>optional string serial_flash_path = 8;</code>
       */
      String getSerialFlashPath();
      /**
       * <code>optional string serial_flash_path = 8;</code>
       */
      com.google.protobuf.ByteString
          getSerialFlashPathBytes();

      // optional string sd_card_filename = 3;
      /**
       * <code>optional string sd_card_filename = 3;</code>
       */
      boolean hasSdCardFilename();
      /**
       * <code>optional string sd_card_filename = 3;</code>
       */
      String getSdCardFilename();
      /**
       * <code>optional string sd_card_filename = 3;</code>
       */
      com.google.protobuf.ByteString
          getSdCardFilenameBytes();

      // optional string sd_card_path = 9;
      /**
       * <code>optional string sd_card_path = 9;</code>
       */
      boolean hasSdCardPath();
      /**
       * <code>optional string sd_card_path = 9;</code>
       */
      String getSdCardPath();
      /**
       * <code>optional string sd_card_path = 9;</code>
       */
      com.google.protobuf.ByteString
          getSdCardPathBytes();

      // optional bytes sha1 = 10;
      /**
       * <code>optional bytes sha1 = 10;</code>
       */
      boolean hasSha1();
      /**
       * <code>optional bytes sha1 = 10;</code>
       */
      com.google.protobuf.ByteString getSha1();
    }
    /**
     * Protobuf type {@code SyncResponse.FileDownload}
     */
    public static final class FileDownload extends
        com.google.protobuf.GeneratedMessage
        implements FileDownloadOrBuilder {
      // Use FileDownload.newBuilder() to construct.
      private FileDownload(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private FileDownload(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final FileDownload defaultInstance;
      public static FileDownload getDefaultInstance() {
        return defaultInstance;
      }

      public FileDownload getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private FileDownload(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                host_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                url_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000080;
                sdCardFilename_ = input.readBytes();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000004;
                copyToSerialFlash_ = input.readBool();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000008;
                resetNetworkProcessor_ = input.readBool();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000010;
                resetApplicationProcessor_ = input.readBool();
                break;
              }
              case 58: {
                bitField0_ |= 0x00000020;
                serialFlashFilename_ = input.readBytes();
                break;
              }
              case 66: {
                bitField0_ |= 0x00000040;
                serialFlashPath_ = input.readBytes();
                break;
              }
              case 74: {
                bitField0_ |= 0x00000100;
                sdCardPath_ = input.readBytes();
                break;
              }
              case 82: {
                bitField0_ |= 0x00000200;
                sha1_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OutputProtos.internal_static_SyncResponse_FileDownload_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OutputProtos.internal_static_SyncResponse_FileDownload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FileDownload.class, Builder.class);
      }

      public static com.google.protobuf.Parser<FileDownload> PARSER =
          new com.google.protobuf.AbstractParser<FileDownload>() {
        public FileDownload parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FileDownload(input, extensionRegistry);
        }
      };

      @Override
      public com.google.protobuf.Parser<FileDownload> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional string host = 1;
      public static final int HOST_FIELD_NUMBER = 1;
      private Object host_;
      /**
       * <code>optional string host = 1;</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string host = 1;</code>
       */
      public String getHost() {
        Object ref = host_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            host_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string host = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string url = 2;
      public static final int URL_FIELD_NUMBER = 2;
      private Object url_;
      /**
       * <code>optional string url = 2;</code>
       */
      public boolean hasUrl() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public String getUrl() {
        Object ref = url_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            url_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        Object ref = url_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          url_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional bool copy_to_serial_flash = 4;
      public static final int COPY_TO_SERIAL_FLASH_FIELD_NUMBER = 4;
      private boolean copyToSerialFlash_;
      /**
       * <code>optional bool copy_to_serial_flash = 4;</code>
       */
      public boolean hasCopyToSerialFlash() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool copy_to_serial_flash = 4;</code>
       */
      public boolean getCopyToSerialFlash() {
        return copyToSerialFlash_;
      }

      // optional bool reset_network_processor = 5;
      public static final int RESET_NETWORK_PROCESSOR_FIELD_NUMBER = 5;
      private boolean resetNetworkProcessor_;
      /**
       * <code>optional bool reset_network_processor = 5;</code>
       */
      public boolean hasResetNetworkProcessor() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool reset_network_processor = 5;</code>
       */
      public boolean getResetNetworkProcessor() {
        return resetNetworkProcessor_;
      }

      // optional bool reset_application_processor = 6;
      public static final int RESET_APPLICATION_PROCESSOR_FIELD_NUMBER = 6;
      private boolean resetApplicationProcessor_;
      /**
       * <code>optional bool reset_application_processor = 6;</code>
       */
      public boolean hasResetApplicationProcessor() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool reset_application_processor = 6;</code>
       */
      public boolean getResetApplicationProcessor() {
        return resetApplicationProcessor_;
      }

      // optional string serial_flash_filename = 7;
      public static final int SERIAL_FLASH_FILENAME_FIELD_NUMBER = 7;
      private Object serialFlashFilename_;
      /**
       * <code>optional string serial_flash_filename = 7;</code>
       */
      public boolean hasSerialFlashFilename() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string serial_flash_filename = 7;</code>
       */
      public String getSerialFlashFilename() {
        Object ref = serialFlashFilename_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialFlashFilename_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string serial_flash_filename = 7;</code>
       */
      public com.google.protobuf.ByteString
          getSerialFlashFilenameBytes() {
        Object ref = serialFlashFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serialFlashFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string serial_flash_path = 8;
      public static final int SERIAL_FLASH_PATH_FIELD_NUMBER = 8;
      private Object serialFlashPath_;
      /**
       * <code>optional string serial_flash_path = 8;</code>
       */
      public boolean hasSerialFlashPath() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string serial_flash_path = 8;</code>
       */
      public String getSerialFlashPath() {
        Object ref = serialFlashPath_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialFlashPath_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string serial_flash_path = 8;</code>
       */
      public com.google.protobuf.ByteString
          getSerialFlashPathBytes() {
        Object ref = serialFlashPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serialFlashPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string sd_card_filename = 3;
      public static final int SD_CARD_FILENAME_FIELD_NUMBER = 3;
      private Object sdCardFilename_;
      /**
       * <code>optional string sd_card_filename = 3;</code>
       */
      public boolean hasSdCardFilename() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string sd_card_filename = 3;</code>
       */
      public String getSdCardFilename() {
        Object ref = sdCardFilename_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sdCardFilename_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string sd_card_filename = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSdCardFilenameBytes() {
        Object ref = sdCardFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sdCardFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string sd_card_path = 9;
      public static final int SD_CARD_PATH_FIELD_NUMBER = 9;
      private Object sdCardPath_;
      /**
       * <code>optional string sd_card_path = 9;</code>
       */
      public boolean hasSdCardPath() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string sd_card_path = 9;</code>
       */
      public String getSdCardPath() {
        Object ref = sdCardPath_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sdCardPath_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string sd_card_path = 9;</code>
       */
      public com.google.protobuf.ByteString
          getSdCardPathBytes() {
        Object ref = sdCardPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sdCardPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional bytes sha1 = 10;
      public static final int SHA1_FIELD_NUMBER = 10;
      private com.google.protobuf.ByteString sha1_;
      /**
       * <code>optional bytes sha1 = 10;</code>
       */
      public boolean hasSha1() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bytes sha1 = 10;</code>
       */
      public com.google.protobuf.ByteString getSha1() {
        return sha1_;
      }

      private void initFields() {
        host_ = "";
        url_ = "";
        copyToSerialFlash_ = false;
        resetNetworkProcessor_ = false;
        resetApplicationProcessor_ = false;
        serialFlashFilename_ = "";
        serialFlashPath_ = "";
        sdCardFilename_ = "";
        sdCardPath_ = "";
        sha1_ = com.google.protobuf.ByteString.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getHostBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getUrlBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBytes(3, getSdCardFilenameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(4, copyToSerialFlash_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(5, resetNetworkProcessor_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(6, resetApplicationProcessor_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBytes(7, getSerialFlashFilenameBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(8, getSerialFlashPathBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBytes(9, getSdCardPathBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBytes(10, sha1_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getHostBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getUrlBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getSdCardFilenameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, copyToSerialFlash_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, resetNetworkProcessor_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, resetApplicationProcessor_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, getSerialFlashFilenameBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(8, getSerialFlashPathBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, getSdCardPathBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(10, sha1_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static FileDownload parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static FileDownload parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static FileDownload parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static FileDownload parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static FileDownload parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static FileDownload parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static FileDownload parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static FileDownload parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static FileDownload parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static FileDownload parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(FileDownload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code SyncResponse.FileDownload}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements FileDownloadOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return OutputProtos.internal_static_SyncResponse_FileDownload_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return OutputProtos.internal_static_SyncResponse_FileDownload_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  FileDownload.class, Builder.class);
        }

        // Construct using com.hello.suripu.api.output.OutputProtos.SyncResponse.FileDownload.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          host_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          url_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          copyToSerialFlash_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          resetNetworkProcessor_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          resetApplicationProcessor_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          serialFlashFilename_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          serialFlashPath_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          sdCardFilename_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          sdCardPath_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          sha1_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000200);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return OutputProtos.internal_static_SyncResponse_FileDownload_descriptor;
        }

        public FileDownload getDefaultInstanceForType() {
          return FileDownload.getDefaultInstance();
        }

        public FileDownload build() {
          FileDownload result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public FileDownload buildPartial() {
          FileDownload result = new FileDownload(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.host_ = host_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.url_ = url_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.copyToSerialFlash_ = copyToSerialFlash_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.resetNetworkProcessor_ = resetNetworkProcessor_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.resetApplicationProcessor_ = resetApplicationProcessor_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.serialFlashFilename_ = serialFlashFilename_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.serialFlashPath_ = serialFlashPath_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.sdCardFilename_ = sdCardFilename_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.sdCardPath_ = sdCardPath_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.sha1_ = sha1_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof FileDownload) {
            return mergeFrom((FileDownload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(FileDownload other) {
          if (other == FileDownload.getDefaultInstance()) return this;
          if (other.hasHost()) {
            bitField0_ |= 0x00000001;
            host_ = other.host_;
            onChanged();
          }
          if (other.hasUrl()) {
            bitField0_ |= 0x00000002;
            url_ = other.url_;
            onChanged();
          }
          if (other.hasCopyToSerialFlash()) {
            setCopyToSerialFlash(other.getCopyToSerialFlash());
          }
          if (other.hasResetNetworkProcessor()) {
            setResetNetworkProcessor(other.getResetNetworkProcessor());
          }
          if (other.hasResetApplicationProcessor()) {
            setResetApplicationProcessor(other.getResetApplicationProcessor());
          }
          if (other.hasSerialFlashFilename()) {
            bitField0_ |= 0x00000020;
            serialFlashFilename_ = other.serialFlashFilename_;
            onChanged();
          }
          if (other.hasSerialFlashPath()) {
            bitField0_ |= 0x00000040;
            serialFlashPath_ = other.serialFlashPath_;
            onChanged();
          }
          if (other.hasSdCardFilename()) {
            bitField0_ |= 0x00000080;
            sdCardFilename_ = other.sdCardFilename_;
            onChanged();
          }
          if (other.hasSdCardPath()) {
            bitField0_ |= 0x00000100;
            sdCardPath_ = other.sdCardPath_;
            onChanged();
          }
          if (other.hasSha1()) {
            setSha1(other.getSha1());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          FileDownload parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (FileDownload) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string host = 1;
        private Object host_ = "";
        /**
         * <code>optional string host = 1;</code>
         */
        public boolean hasHost() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string host = 1;</code>
         */
        public String getHost() {
          Object ref = host_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            host_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string host = 1;</code>
         */
        public com.google.protobuf.ByteString
            getHostBytes() {
          Object ref = host_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            host_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string host = 1;</code>
         */
        public Builder setHost(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          host_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string host = 1;</code>
         */
        public Builder clearHost() {
          bitField0_ = (bitField0_ & ~0x00000001);
          host_ = getDefaultInstance().getHost();
          onChanged();
          return this;
        }
        /**
         * <code>optional string host = 1;</code>
         */
        public Builder setHostBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          host_ = value;
          onChanged();
          return this;
        }

        // optional string url = 2;
        private Object url_ = "";
        /**
         * <code>optional string url = 2;</code>
         */
        public boolean hasUrl() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string url = 2;</code>
         */
        public String getUrl() {
          Object ref = url_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            url_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string url = 2;</code>
         */
        public com.google.protobuf.ByteString
            getUrlBytes() {
          Object ref = url_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            url_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string url = 2;</code>
         */
        public Builder setUrl(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          url_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string url = 2;</code>
         */
        public Builder clearUrl() {
          bitField0_ = (bitField0_ & ~0x00000002);
          url_ = getDefaultInstance().getUrl();
          onChanged();
          return this;
        }
        /**
         * <code>optional string url = 2;</code>
         */
        public Builder setUrlBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          url_ = value;
          onChanged();
          return this;
        }

        // optional bool copy_to_serial_flash = 4;
        private boolean copyToSerialFlash_ ;
        /**
         * <code>optional bool copy_to_serial_flash = 4;</code>
         */
        public boolean hasCopyToSerialFlash() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool copy_to_serial_flash = 4;</code>
         */
        public boolean getCopyToSerialFlash() {
          return copyToSerialFlash_;
        }
        /**
         * <code>optional bool copy_to_serial_flash = 4;</code>
         */
        public Builder setCopyToSerialFlash(boolean value) {
          bitField0_ |= 0x00000004;
          copyToSerialFlash_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool copy_to_serial_flash = 4;</code>
         */
        public Builder clearCopyToSerialFlash() {
          bitField0_ = (bitField0_ & ~0x00000004);
          copyToSerialFlash_ = false;
          onChanged();
          return this;
        }

        // optional bool reset_network_processor = 5;
        private boolean resetNetworkProcessor_ ;
        /**
         * <code>optional bool reset_network_processor = 5;</code>
         */
        public boolean hasResetNetworkProcessor() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional bool reset_network_processor = 5;</code>
         */
        public boolean getResetNetworkProcessor() {
          return resetNetworkProcessor_;
        }
        /**
         * <code>optional bool reset_network_processor = 5;</code>
         */
        public Builder setResetNetworkProcessor(boolean value) {
          bitField0_ |= 0x00000008;
          resetNetworkProcessor_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool reset_network_processor = 5;</code>
         */
        public Builder clearResetNetworkProcessor() {
          bitField0_ = (bitField0_ & ~0x00000008);
          resetNetworkProcessor_ = false;
          onChanged();
          return this;
        }

        // optional bool reset_application_processor = 6;
        private boolean resetApplicationProcessor_ ;
        /**
         * <code>optional bool reset_application_processor = 6;</code>
         */
        public boolean hasResetApplicationProcessor() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool reset_application_processor = 6;</code>
         */
        public boolean getResetApplicationProcessor() {
          return resetApplicationProcessor_;
        }
        /**
         * <code>optional bool reset_application_processor = 6;</code>
         */
        public Builder setResetApplicationProcessor(boolean value) {
          bitField0_ |= 0x00000010;
          resetApplicationProcessor_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool reset_application_processor = 6;</code>
         */
        public Builder clearResetApplicationProcessor() {
          bitField0_ = (bitField0_ & ~0x00000010);
          resetApplicationProcessor_ = false;
          onChanged();
          return this;
        }

        // optional string serial_flash_filename = 7;
        private Object serialFlashFilename_ = "";
        /**
         * <code>optional string serial_flash_filename = 7;</code>
         */
        public boolean hasSerialFlashFilename() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string serial_flash_filename = 7;</code>
         */
        public String getSerialFlashFilename() {
          Object ref = serialFlashFilename_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            serialFlashFilename_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string serial_flash_filename = 7;</code>
         */
        public com.google.protobuf.ByteString
            getSerialFlashFilenameBytes() {
          Object ref = serialFlashFilename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            serialFlashFilename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string serial_flash_filename = 7;</code>
         */
        public Builder setSerialFlashFilename(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          serialFlashFilename_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string serial_flash_filename = 7;</code>
         */
        public Builder clearSerialFlashFilename() {
          bitField0_ = (bitField0_ & ~0x00000020);
          serialFlashFilename_ = getDefaultInstance().getSerialFlashFilename();
          onChanged();
          return this;
        }
        /**
         * <code>optional string serial_flash_filename = 7;</code>
         */
        public Builder setSerialFlashFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          serialFlashFilename_ = value;
          onChanged();
          return this;
        }

        // optional string serial_flash_path = 8;
        private Object serialFlashPath_ = "";
        /**
         * <code>optional string serial_flash_path = 8;</code>
         */
        public boolean hasSerialFlashPath() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string serial_flash_path = 8;</code>
         */
        public String getSerialFlashPath() {
          Object ref = serialFlashPath_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            serialFlashPath_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string serial_flash_path = 8;</code>
         */
        public com.google.protobuf.ByteString
            getSerialFlashPathBytes() {
          Object ref = serialFlashPath_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            serialFlashPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string serial_flash_path = 8;</code>
         */
        public Builder setSerialFlashPath(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          serialFlashPath_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string serial_flash_path = 8;</code>
         */
        public Builder clearSerialFlashPath() {
          bitField0_ = (bitField0_ & ~0x00000040);
          serialFlashPath_ = getDefaultInstance().getSerialFlashPath();
          onChanged();
          return this;
        }
        /**
         * <code>optional string serial_flash_path = 8;</code>
         */
        public Builder setSerialFlashPathBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          serialFlashPath_ = value;
          onChanged();
          return this;
        }

        // optional string sd_card_filename = 3;
        private Object sdCardFilename_ = "";
        /**
         * <code>optional string sd_card_filename = 3;</code>
         */
        public boolean hasSdCardFilename() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string sd_card_filename = 3;</code>
         */
        public String getSdCardFilename() {
          Object ref = sdCardFilename_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            sdCardFilename_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string sd_card_filename = 3;</code>
         */
        public com.google.protobuf.ByteString
            getSdCardFilenameBytes() {
          Object ref = sdCardFilename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            sdCardFilename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string sd_card_filename = 3;</code>
         */
        public Builder setSdCardFilename(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          sdCardFilename_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string sd_card_filename = 3;</code>
         */
        public Builder clearSdCardFilename() {
          bitField0_ = (bitField0_ & ~0x00000080);
          sdCardFilename_ = getDefaultInstance().getSdCardFilename();
          onChanged();
          return this;
        }
        /**
         * <code>optional string sd_card_filename = 3;</code>
         */
        public Builder setSdCardFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          sdCardFilename_ = value;
          onChanged();
          return this;
        }

        // optional string sd_card_path = 9;
        private Object sdCardPath_ = "";
        /**
         * <code>optional string sd_card_path = 9;</code>
         */
        public boolean hasSdCardPath() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string sd_card_path = 9;</code>
         */
        public String getSdCardPath() {
          Object ref = sdCardPath_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            sdCardPath_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string sd_card_path = 9;</code>
         */
        public com.google.protobuf.ByteString
            getSdCardPathBytes() {
          Object ref = sdCardPath_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            sdCardPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string sd_card_path = 9;</code>
         */
        public Builder setSdCardPath(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          sdCardPath_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string sd_card_path = 9;</code>
         */
        public Builder clearSdCardPath() {
          bitField0_ = (bitField0_ & ~0x00000100);
          sdCardPath_ = getDefaultInstance().getSdCardPath();
          onChanged();
          return this;
        }
        /**
         * <code>optional string sd_card_path = 9;</code>
         */
        public Builder setSdCardPathBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          sdCardPath_ = value;
          onChanged();
          return this;
        }

        // optional bytes sha1 = 10;
        private com.google.protobuf.ByteString sha1_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes sha1 = 10;</code>
         */
        public boolean hasSha1() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional bytes sha1 = 10;</code>
         */
        public com.google.protobuf.ByteString getSha1() {
          return sha1_;
        }
        /**
         * <code>optional bytes sha1 = 10;</code>
         */
        public Builder setSha1(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          sha1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes sha1 = 10;</code>
         */
        public Builder clearSha1() {
          bitField0_ = (bitField0_ & ~0x00000200);
          sha1_ = getDefaultInstance().getSha1();
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:SyncResponse.FileDownload)
      }

      static {
        defaultInstance = new FileDownload(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:SyncResponse.FileDownload)
    }

    public interface AlarmOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 start_time = 1;
      /**
       * <code>optional uint32 start_time = 1;</code>
       *
       * <pre>
       * obselete,  use ring_offset_from_now
       * </pre>
       */
      boolean hasStartTime();
      /**
       * <code>optional uint32 start_time = 1;</code>
       *
       * <pre>
       * obselete,  use ring_offset_from_now
       * </pre>
       */
      int getStartTime();

      // optional uint32 end_time = 2;
      /**
       * <code>optional uint32 end_time = 2;</code>
       *
       * <pre>
       * obselete, use ring_offset_from_now + ring_duration
       * </pre>
       */
      boolean hasEndTime();
      /**
       * <code>optional uint32 end_time = 2;</code>
       *
       * <pre>
       * obselete, use ring_offset_from_now + ring_duration
       * </pre>
       */
      int getEndTime();

      // optional int32 ringtone_id = 3 [default = 1];
      /**
       * <code>optional int32 ringtone_id = 3 [default = 1];</code>
       */
      boolean hasRingtoneId();
      /**
       * <code>optional int32 ringtone_id = 3 [default = 1];</code>
       */
      int getRingtoneId();

      // optional int32 ring_offset_from_now_in_second = 4;
      /**
       * <code>optional int32 ring_offset_from_now_in_second = 4;</code>
       *
       * <pre>
       * This is a more fault tolerance design
       * </pre>
       */
      boolean hasRingOffsetFromNowInSecond();
      /**
       * <code>optional int32 ring_offset_from_now_in_second = 4;</code>
       *
       * <pre>
       * This is a more fault tolerance design
       * </pre>
       */
      int getRingOffsetFromNowInSecond();

      // optional int32 ring_duration_in_second = 5;
      /**
       * <code>optional int32 ring_duration_in_second = 5;</code>
       */
      boolean hasRingDurationInSecond();
      /**
       * <code>optional int32 ring_duration_in_second = 5;</code>
       */
      int getRingDurationInSecond();
    }
    /**
     * Protobuf type {@code SyncResponse.Alarm}
     */
    public static final class Alarm extends
        com.google.protobuf.GeneratedMessage
        implements AlarmOrBuilder {
      // Use Alarm.newBuilder() to construct.
      private Alarm(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Alarm(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Alarm defaultInstance;
      public static Alarm getDefaultInstance() {
        return defaultInstance;
      }

      public Alarm getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Alarm(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                startTime_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                endTime_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                ringtoneId_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                ringOffsetFromNowInSecond_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                ringDurationInSecond_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OutputProtos.internal_static_SyncResponse_Alarm_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OutputProtos.internal_static_SyncResponse_Alarm_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Alarm.class, Builder.class);
      }

      public static com.google.protobuf.Parser<Alarm> PARSER =
          new com.google.protobuf.AbstractParser<Alarm>() {
        public Alarm parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Alarm(input, extensionRegistry);
        }
      };

      @Override
      public com.google.protobuf.Parser<Alarm> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 start_time = 1;
      public static final int START_TIME_FIELD_NUMBER = 1;
      private int startTime_;
      /**
       * <code>optional uint32 start_time = 1;</code>
       *
       * <pre>
       * obselete,  use ring_offset_from_now
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 start_time = 1;</code>
       *
       * <pre>
       * obselete,  use ring_offset_from_now
       * </pre>
       */
      public int getStartTime() {
        return startTime_;
      }

      // optional uint32 end_time = 2;
      public static final int END_TIME_FIELD_NUMBER = 2;
      private int endTime_;
      /**
       * <code>optional uint32 end_time = 2;</code>
       *
       * <pre>
       * obselete, use ring_offset_from_now + ring_duration
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 end_time = 2;</code>
       *
       * <pre>
       * obselete, use ring_offset_from_now + ring_duration
       * </pre>
       */
      public int getEndTime() {
        return endTime_;
      }

      // optional int32 ringtone_id = 3 [default = 1];
      public static final int RINGTONE_ID_FIELD_NUMBER = 3;
      private int ringtoneId_;
      /**
       * <code>optional int32 ringtone_id = 3 [default = 1];</code>
       */
      public boolean hasRingtoneId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 ringtone_id = 3 [default = 1];</code>
       */
      public int getRingtoneId() {
        return ringtoneId_;
      }

      // optional int32 ring_offset_from_now_in_second = 4;
      public static final int RING_OFFSET_FROM_NOW_IN_SECOND_FIELD_NUMBER = 4;
      private int ringOffsetFromNowInSecond_;
      /**
       * <code>optional int32 ring_offset_from_now_in_second = 4;</code>
       *
       * <pre>
       * This is a more fault tolerance design
       * </pre>
       */
      public boolean hasRingOffsetFromNowInSecond() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 ring_offset_from_now_in_second = 4;</code>
       *
       * <pre>
       * This is a more fault tolerance design
       * </pre>
       */
      public int getRingOffsetFromNowInSecond() {
        return ringOffsetFromNowInSecond_;
      }

      // optional int32 ring_duration_in_second = 5;
      public static final int RING_DURATION_IN_SECOND_FIELD_NUMBER = 5;
      private int ringDurationInSecond_;
      /**
       * <code>optional int32 ring_duration_in_second = 5;</code>
       */
      public boolean hasRingDurationInSecond() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 ring_duration_in_second = 5;</code>
       */
      public int getRingDurationInSecond() {
        return ringDurationInSecond_;
      }

      private void initFields() {
        startTime_ = 0;
        endTime_ = 0;
        ringtoneId_ = 1;
        ringOffsetFromNowInSecond_ = 0;
        ringDurationInSecond_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, endTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, ringtoneId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, ringOffsetFromNowInSecond_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, ringDurationInSecond_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, endTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, ringtoneId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, ringOffsetFromNowInSecond_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, ringDurationInSecond_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static Alarm parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Alarm parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Alarm parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Alarm parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Alarm parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Alarm parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static Alarm parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static Alarm parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static Alarm parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Alarm parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(Alarm prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code SyncResponse.Alarm}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements AlarmOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return OutputProtos.internal_static_SyncResponse_Alarm_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return OutputProtos.internal_static_SyncResponse_Alarm_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Alarm.class, Builder.class);
        }

        // Construct using com.hello.suripu.api.output.OutputProtos.SyncResponse.Alarm.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          startTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          endTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          ringtoneId_ = 1;
          bitField0_ = (bitField0_ & ~0x00000004);
          ringOffsetFromNowInSecond_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          ringDurationInSecond_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return OutputProtos.internal_static_SyncResponse_Alarm_descriptor;
        }

        public Alarm getDefaultInstanceForType() {
          return Alarm.getDefaultInstance();
        }

        public Alarm build() {
          Alarm result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public Alarm buildPartial() {
          Alarm result = new Alarm(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.startTime_ = startTime_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.endTime_ = endTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.ringtoneId_ = ringtoneId_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.ringOffsetFromNowInSecond_ = ringOffsetFromNowInSecond_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.ringDurationInSecond_ = ringDurationInSecond_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Alarm) {
            return mergeFrom((Alarm)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Alarm other) {
          if (other == Alarm.getDefaultInstance()) return this;
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          if (other.hasEndTime()) {
            setEndTime(other.getEndTime());
          }
          if (other.hasRingtoneId()) {
            setRingtoneId(other.getRingtoneId());
          }
          if (other.hasRingOffsetFromNowInSecond()) {
            setRingOffsetFromNowInSecond(other.getRingOffsetFromNowInSecond());
          }
          if (other.hasRingDurationInSecond()) {
            setRingDurationInSecond(other.getRingDurationInSecond());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Alarm parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Alarm) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 start_time = 1;
        private int startTime_ ;
        /**
         * <code>optional uint32 start_time = 1;</code>
         *
         * <pre>
         * obselete,  use ring_offset_from_now
         * </pre>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 start_time = 1;</code>
         *
         * <pre>
         * obselete,  use ring_offset_from_now
         * </pre>
         */
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional uint32 start_time = 1;</code>
         *
         * <pre>
         * obselete,  use ring_offset_from_now
         * </pre>
         */
        public Builder setStartTime(int value) {
          bitField0_ |= 0x00000001;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_time = 1;</code>
         *
         * <pre>
         * obselete,  use ring_offset_from_now
         * </pre>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          startTime_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 end_time = 2;
        private int endTime_ ;
        /**
         * <code>optional uint32 end_time = 2;</code>
         *
         * <pre>
         * obselete, use ring_offset_from_now + ring_duration
         * </pre>
         */
        public boolean hasEndTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 end_time = 2;</code>
         *
         * <pre>
         * obselete, use ring_offset_from_now + ring_duration
         * </pre>
         */
        public int getEndTime() {
          return endTime_;
        }
        /**
         * <code>optional uint32 end_time = 2;</code>
         *
         * <pre>
         * obselete, use ring_offset_from_now + ring_duration
         * </pre>
         */
        public Builder setEndTime(int value) {
          bitField0_ |= 0x00000002;
          endTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 end_time = 2;</code>
         *
         * <pre>
         * obselete, use ring_offset_from_now + ring_duration
         * </pre>
         */
        public Builder clearEndTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          endTime_ = 0;
          onChanged();
          return this;
        }

        // optional int32 ringtone_id = 3 [default = 1];
        private int ringtoneId_ = 1;
        /**
         * <code>optional int32 ringtone_id = 3 [default = 1];</code>
         */
        public boolean hasRingtoneId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 ringtone_id = 3 [default = 1];</code>
         */
        public int getRingtoneId() {
          return ringtoneId_;
        }
        /**
         * <code>optional int32 ringtone_id = 3 [default = 1];</code>
         */
        public Builder setRingtoneId(int value) {
          bitField0_ |= 0x00000004;
          ringtoneId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 ringtone_id = 3 [default = 1];</code>
         */
        public Builder clearRingtoneId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          ringtoneId_ = 1;
          onChanged();
          return this;
        }

        // optional int32 ring_offset_from_now_in_second = 4;
        private int ringOffsetFromNowInSecond_ ;
        /**
         * <code>optional int32 ring_offset_from_now_in_second = 4;</code>
         *
         * <pre>
         * This is a more fault tolerance design
         * </pre>
         */
        public boolean hasRingOffsetFromNowInSecond() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 ring_offset_from_now_in_second = 4;</code>
         *
         * <pre>
         * This is a more fault tolerance design
         * </pre>
         */
        public int getRingOffsetFromNowInSecond() {
          return ringOffsetFromNowInSecond_;
        }
        /**
         * <code>optional int32 ring_offset_from_now_in_second = 4;</code>
         *
         * <pre>
         * This is a more fault tolerance design
         * </pre>
         */
        public Builder setRingOffsetFromNowInSecond(int value) {
          bitField0_ |= 0x00000008;
          ringOffsetFromNowInSecond_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 ring_offset_from_now_in_second = 4;</code>
         *
         * <pre>
         * This is a more fault tolerance design
         * </pre>
         */
        public Builder clearRingOffsetFromNowInSecond() {
          bitField0_ = (bitField0_ & ~0x00000008);
          ringOffsetFromNowInSecond_ = 0;
          onChanged();
          return this;
        }

        // optional int32 ring_duration_in_second = 5;
        private int ringDurationInSecond_ ;
        /**
         * <code>optional int32 ring_duration_in_second = 5;</code>
         */
        public boolean hasRingDurationInSecond() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 ring_duration_in_second = 5;</code>
         */
        public int getRingDurationInSecond() {
          return ringDurationInSecond_;
        }
        /**
         * <code>optional int32 ring_duration_in_second = 5;</code>
         */
        public Builder setRingDurationInSecond(int value) {
          bitField0_ |= 0x00000010;
          ringDurationInSecond_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 ring_duration_in_second = 5;</code>
         */
        public Builder clearRingDurationInSecond() {
          bitField0_ = (bitField0_ & ~0x00000010);
          ringDurationInSecond_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:SyncResponse.Alarm)
      }

      static {
        defaultInstance = new Alarm(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:SyncResponse.Alarm)
    }

    public interface PairingActionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string ssid = 1;
      /**
       * <code>optional string ssid = 1;</code>
       */
      boolean hasSsid();
      /**
       * <code>optional string ssid = 1;</code>
       */
      String getSsid();
      /**
       * <code>optional string ssid = 1;</code>
       */
      com.google.protobuf.ByteString
          getSsidBytes();

      // optional .SyncResponse.PairingAction.ActionType type = 2;
      /**
       * <code>optional .SyncResponse.PairingAction.ActionType type = 2;</code>
       */
      boolean hasType();
      /**
       * <code>optional .SyncResponse.PairingAction.ActionType type = 2;</code>
       */
      PairingAction.ActionType getType();
    }
    /**
     * Protobuf type {@code SyncResponse.PairingAction}
     */
    public static final class PairingAction extends
        com.google.protobuf.GeneratedMessage
        implements PairingActionOrBuilder {
      // Use PairingAction.newBuilder() to construct.
      private PairingAction(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PairingAction(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PairingAction defaultInstance;
      public static PairingAction getDefaultInstance() {
        return defaultInstance;
      }

      public PairingAction getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PairingAction(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                ssid_ = input.readBytes();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                ActionType value = ActionType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  type_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OutputProtos.internal_static_SyncResponse_PairingAction_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OutputProtos.internal_static_SyncResponse_PairingAction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PairingAction.class, Builder.class);
      }

      public static com.google.protobuf.Parser<PairingAction> PARSER =
          new com.google.protobuf.AbstractParser<PairingAction>() {
        public PairingAction parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PairingAction(input, extensionRegistry);
        }
      };

      @Override
      public com.google.protobuf.Parser<PairingAction> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code SyncResponse.PairingAction.ActionType}
       */
      public enum ActionType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>PAIR = 0;</code>
         */
        PAIR(0, 0),
        /**
         * <code>UNPAIR = 1;</code>
         */
        UNPAIR(1, 1),
        ;

        /**
         * <code>PAIR = 0;</code>
         */
        public static final int PAIR_VALUE = 0;
        /**
         * <code>UNPAIR = 1;</code>
         */
        public static final int UNPAIR_VALUE = 1;


        public final int getNumber() { return value; }

        public static ActionType valueOf(int value) {
          switch (value) {
            case 0: return PAIR;
            case 1: return UNPAIR;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ActionType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<ActionType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ActionType>() {
                public ActionType findValueByNumber(int number) {
                  return ActionType.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return PairingAction.getDescriptor().getEnumTypes().get(0);
        }

        private static final ActionType[] VALUES = values();

        public static ActionType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private ActionType(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:SyncResponse.PairingAction.ActionType)
      }

      private int bitField0_;
      // optional string ssid = 1;
      public static final int SSID_FIELD_NUMBER = 1;
      private Object ssid_;
      /**
       * <code>optional string ssid = 1;</code>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string ssid = 1;</code>
       */
      public String getSsid() {
        Object ref = ssid_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ssid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string ssid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
        Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional .SyncResponse.PairingAction.ActionType type = 2;
      public static final int TYPE_FIELD_NUMBER = 2;
      private ActionType type_;
      /**
       * <code>optional .SyncResponse.PairingAction.ActionType type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .SyncResponse.PairingAction.ActionType type = 2;</code>
       */
      public ActionType getType() {
        return type_;
      }

      private void initFields() {
        ssid_ = "";
        type_ = ActionType.PAIR;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getSsidBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, type_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getSsidBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static PairingAction parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static PairingAction parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static PairingAction parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static PairingAction parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static PairingAction parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static PairingAction parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static PairingAction parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static PairingAction parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static PairingAction parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static PairingAction parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(PairingAction prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code SyncResponse.PairingAction}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements PairingActionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return OutputProtos.internal_static_SyncResponse_PairingAction_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return OutputProtos.internal_static_SyncResponse_PairingAction_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  PairingAction.class, Builder.class);
        }

        // Construct using com.hello.suripu.api.output.OutputProtos.SyncResponse.PairingAction.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          ssid_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = ActionType.PAIR;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return OutputProtos.internal_static_SyncResponse_PairingAction_descriptor;
        }

        public PairingAction getDefaultInstanceForType() {
          return PairingAction.getDefaultInstance();
        }

        public PairingAction build() {
          PairingAction result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public PairingAction buildPartial() {
          PairingAction result = new PairingAction(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ssid_ = ssid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.type_ = type_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof PairingAction) {
            return mergeFrom((PairingAction)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(PairingAction other) {
          if (other == PairingAction.getDefaultInstance()) return this;
          if (other.hasSsid()) {
            bitField0_ |= 0x00000001;
            ssid_ = other.ssid_;
            onChanged();
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          PairingAction parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (PairingAction) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string ssid = 1;
        private Object ssid_ = "";
        /**
         * <code>optional string ssid = 1;</code>
         */
        public boolean hasSsid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string ssid = 1;</code>
         */
        public String getSsid() {
          Object ref = ssid_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            ssid_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string ssid = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSsidBytes() {
          Object ref = ssid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            ssid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ssid = 1;</code>
         */
        public Builder setSsid(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          ssid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ssid = 1;</code>
         */
        public Builder clearSsid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ssid_ = getDefaultInstance().getSsid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ssid = 1;</code>
         */
        public Builder setSsidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          ssid_ = value;
          onChanged();
          return this;
        }

        // optional .SyncResponse.PairingAction.ActionType type = 2;
        private ActionType type_ = ActionType.PAIR;
        /**
         * <code>optional .SyncResponse.PairingAction.ActionType type = 2;</code>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .SyncResponse.PairingAction.ActionType type = 2;</code>
         */
        public ActionType getType() {
          return type_;
        }
        /**
         * <code>optional .SyncResponse.PairingAction.ActionType type = 2;</code>
         */
        public Builder setType(ActionType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .SyncResponse.PairingAction.ActionType type = 2;</code>
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          type_ = ActionType.PAIR;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:SyncResponse.PairingAction)
      }

      static {
        defaultInstance = new PairingAction(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:SyncResponse.PairingAction)
    }

    public interface WhiteNoiseOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int32 start_time = 1;
      /**
       * <code>optional int32 start_time = 1;</code>
       */
      boolean hasStartTime();
      /**
       * <code>optional int32 start_time = 1;</code>
       */
      int getStartTime();

      // optional int32 end_time = 2;
      /**
       * <code>optional int32 end_time = 2;</code>
       */
      boolean hasEndTime();
      /**
       * <code>optional int32 end_time = 2;</code>
       */
      int getEndTime();

      // optional int32 sound_id = 3;
      /**
       * <code>optional int32 sound_id = 3;</code>
       */
      boolean hasSoundId();
      /**
       * <code>optional int32 sound_id = 3;</code>
       */
      int getSoundId();
    }
    /**
     * Protobuf type {@code SyncResponse.WhiteNoise}
     */
    public static final class WhiteNoise extends
        com.google.protobuf.GeneratedMessage
        implements WhiteNoiseOrBuilder {
      // Use WhiteNoise.newBuilder() to construct.
      private WhiteNoise(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private WhiteNoise(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final WhiteNoise defaultInstance;
      public static WhiteNoise getDefaultInstance() {
        return defaultInstance;
      }

      public WhiteNoise getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private WhiteNoise(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                startTime_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                endTime_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                soundId_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OutputProtos.internal_static_SyncResponse_WhiteNoise_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OutputProtos.internal_static_SyncResponse_WhiteNoise_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                WhiteNoise.class, Builder.class);
      }

      public static com.google.protobuf.Parser<WhiteNoise> PARSER =
          new com.google.protobuf.AbstractParser<WhiteNoise>() {
        public WhiteNoise parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new WhiteNoise(input, extensionRegistry);
        }
      };

      @Override
      public com.google.protobuf.Parser<WhiteNoise> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional int32 start_time = 1;
      public static final int START_TIME_FIELD_NUMBER = 1;
      private int startTime_;
      /**
       * <code>optional int32 start_time = 1;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 start_time = 1;</code>
       */
      public int getStartTime() {
        return startTime_;
      }

      // optional int32 end_time = 2;
      public static final int END_TIME_FIELD_NUMBER = 2;
      private int endTime_;
      /**
       * <code>optional int32 end_time = 2;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 end_time = 2;</code>
       */
      public int getEndTime() {
        return endTime_;
      }

      // optional int32 sound_id = 3;
      public static final int SOUND_ID_FIELD_NUMBER = 3;
      private int soundId_;
      /**
       * <code>optional int32 sound_id = 3;</code>
       */
      public boolean hasSoundId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 sound_id = 3;</code>
       */
      public int getSoundId() {
        return soundId_;
      }

      private void initFields() {
        startTime_ = 0;
        endTime_ = 0;
        soundId_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, endTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, soundId_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, endTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, soundId_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static WhiteNoise parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static WhiteNoise parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static WhiteNoise parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static WhiteNoise parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static WhiteNoise parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static WhiteNoise parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static WhiteNoise parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static WhiteNoise parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static WhiteNoise parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static WhiteNoise parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(WhiteNoise prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code SyncResponse.WhiteNoise}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements WhiteNoiseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return OutputProtos.internal_static_SyncResponse_WhiteNoise_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return OutputProtos.internal_static_SyncResponse_WhiteNoise_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  WhiteNoise.class, Builder.class);
        }

        // Construct using com.hello.suripu.api.output.OutputProtos.SyncResponse.WhiteNoise.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          startTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          endTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          soundId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return OutputProtos.internal_static_SyncResponse_WhiteNoise_descriptor;
        }

        public WhiteNoise getDefaultInstanceForType() {
          return WhiteNoise.getDefaultInstance();
        }

        public WhiteNoise build() {
          WhiteNoise result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public WhiteNoise buildPartial() {
          WhiteNoise result = new WhiteNoise(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.startTime_ = startTime_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.endTime_ = endTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.soundId_ = soundId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof WhiteNoise) {
            return mergeFrom((WhiteNoise)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(WhiteNoise other) {
          if (other == WhiteNoise.getDefaultInstance()) return this;
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          if (other.hasEndTime()) {
            setEndTime(other.getEndTime());
          }
          if (other.hasSoundId()) {
            setSoundId(other.getSoundId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          WhiteNoise parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (WhiteNoise) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int32 start_time = 1;
        private int startTime_ ;
        /**
         * <code>optional int32 start_time = 1;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 start_time = 1;</code>
         */
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional int32 start_time = 1;</code>
         */
        public Builder setStartTime(int value) {
          bitField0_ |= 0x00000001;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 start_time = 1;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          startTime_ = 0;
          onChanged();
          return this;
        }

        // optional int32 end_time = 2;
        private int endTime_ ;
        /**
         * <code>optional int32 end_time = 2;</code>
         */
        public boolean hasEndTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 end_time = 2;</code>
         */
        public int getEndTime() {
          return endTime_;
        }
        /**
         * <code>optional int32 end_time = 2;</code>
         */
        public Builder setEndTime(int value) {
          bitField0_ |= 0x00000002;
          endTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 end_time = 2;</code>
         */
        public Builder clearEndTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          endTime_ = 0;
          onChanged();
          return this;
        }

        // optional int32 sound_id = 3;
        private int soundId_ ;
        /**
         * <code>optional int32 sound_id = 3;</code>
         */
        public boolean hasSoundId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 sound_id = 3;</code>
         */
        public int getSoundId() {
          return soundId_;
        }
        /**
         * <code>optional int32 sound_id = 3;</code>
         */
        public Builder setSoundId(int value) {
          bitField0_ |= 0x00000004;
          soundId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 sound_id = 3;</code>
         */
        public Builder clearSoundId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          soundId_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:SyncResponse.WhiteNoise)
      }

      static {
        defaultInstance = new WhiteNoise(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:SyncResponse.WhiteNoise)
    }

    public interface FlashActionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int32 red = 1;
      /**
       * <code>optional int32 red = 1;</code>
       */
      boolean hasRed();
      /**
       * <code>optional int32 red = 1;</code>
       */
      int getRed();

      // optional int32 green = 2;
      /**
       * <code>optional int32 green = 2;</code>
       */
      boolean hasGreen();
      /**
       * <code>optional int32 green = 2;</code>
       */
      int getGreen();

      // optional int32 blue = 3;
      /**
       * <code>optional int32 blue = 3;</code>
       */
      boolean hasBlue();
      /**
       * <code>optional int32 blue = 3;</code>
       */
      int getBlue();

      // optional int32 delay_milliseconds = 4;
      /**
       * <code>optional int32 delay_milliseconds = 4;</code>
       */
      boolean hasDelayMilliseconds();
      /**
       * <code>optional int32 delay_milliseconds = 4;</code>
       */
      int getDelayMilliseconds();

      // optional bool fade_in = 5;
      /**
       * <code>optional bool fade_in = 5;</code>
       */
      boolean hasFadeIn();
      /**
       * <code>optional bool fade_in = 5;</code>
       */
      boolean getFadeIn();

      // optional bool fade_out = 6;
      /**
       * <code>optional bool fade_out = 6;</code>
       */
      boolean hasFadeOut();
      /**
       * <code>optional bool fade_out = 6;</code>
       */
      boolean getFadeOut();

      // optional bool rotate = 7;
      /**
       * <code>optional bool rotate = 7;</code>
       */
      boolean hasRotate();
      /**
       * <code>optional bool rotate = 7;</code>
       */
      boolean getRotate();

      // optional int32 alpha = 8;
      /**
       * <code>optional int32 alpha = 8;</code>
       */
      boolean hasAlpha();
      /**
       * <code>optional int32 alpha = 8;</code>
       */
      int getAlpha();
    }
    /**
     * Protobuf type {@code SyncResponse.FlashAction}
     */
    public static final class FlashAction extends
        com.google.protobuf.GeneratedMessage
        implements FlashActionOrBuilder {
      // Use FlashAction.newBuilder() to construct.
      private FlashAction(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private FlashAction(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final FlashAction defaultInstance;
      public static FlashAction getDefaultInstance() {
        return defaultInstance;
      }

      public FlashAction getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private FlashAction(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                red_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                green_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                blue_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                delayMilliseconds_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                fadeIn_ = input.readBool();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                fadeOut_ = input.readBool();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                rotate_ = input.readBool();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                alpha_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OutputProtos.internal_static_SyncResponse_FlashAction_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OutputProtos.internal_static_SyncResponse_FlashAction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FlashAction.class, Builder.class);
      }

      public static com.google.protobuf.Parser<FlashAction> PARSER =
          new com.google.protobuf.AbstractParser<FlashAction>() {
        public FlashAction parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FlashAction(input, extensionRegistry);
        }
      };

      @Override
      public com.google.protobuf.Parser<FlashAction> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional int32 red = 1;
      public static final int RED_FIELD_NUMBER = 1;
      private int red_;
      /**
       * <code>optional int32 red = 1;</code>
       */
      public boolean hasRed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 red = 1;</code>
       */
      public int getRed() {
        return red_;
      }

      // optional int32 green = 2;
      public static final int GREEN_FIELD_NUMBER = 2;
      private int green_;
      /**
       * <code>optional int32 green = 2;</code>
       */
      public boolean hasGreen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 green = 2;</code>
       */
      public int getGreen() {
        return green_;
      }

      // optional int32 blue = 3;
      public static final int BLUE_FIELD_NUMBER = 3;
      private int blue_;
      /**
       * <code>optional int32 blue = 3;</code>
       */
      public boolean hasBlue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 blue = 3;</code>
       */
      public int getBlue() {
        return blue_;
      }

      // optional int32 delay_milliseconds = 4;
      public static final int DELAY_MILLISECONDS_FIELD_NUMBER = 4;
      private int delayMilliseconds_;
      /**
       * <code>optional int32 delay_milliseconds = 4;</code>
       */
      public boolean hasDelayMilliseconds() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 delay_milliseconds = 4;</code>
       */
      public int getDelayMilliseconds() {
        return delayMilliseconds_;
      }

      // optional bool fade_in = 5;
      public static final int FADE_IN_FIELD_NUMBER = 5;
      private boolean fadeIn_;
      /**
       * <code>optional bool fade_in = 5;</code>
       */
      public boolean hasFadeIn() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool fade_in = 5;</code>
       */
      public boolean getFadeIn() {
        return fadeIn_;
      }

      // optional bool fade_out = 6;
      public static final int FADE_OUT_FIELD_NUMBER = 6;
      private boolean fadeOut_;
      /**
       * <code>optional bool fade_out = 6;</code>
       */
      public boolean hasFadeOut() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool fade_out = 6;</code>
       */
      public boolean getFadeOut() {
        return fadeOut_;
      }

      // optional bool rotate = 7;
      public static final int ROTATE_FIELD_NUMBER = 7;
      private boolean rotate_;
      /**
       * <code>optional bool rotate = 7;</code>
       */
      public boolean hasRotate() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool rotate = 7;</code>
       */
      public boolean getRotate() {
        return rotate_;
      }

      // optional int32 alpha = 8;
      public static final int ALPHA_FIELD_NUMBER = 8;
      private int alpha_;
      /**
       * <code>optional int32 alpha = 8;</code>
       */
      public boolean hasAlpha() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 alpha = 8;</code>
       */
      public int getAlpha() {
        return alpha_;
      }

      private void initFields() {
        red_ = 0;
        green_ = 0;
        blue_ = 0;
        delayMilliseconds_ = 0;
        fadeIn_ = false;
        fadeOut_ = false;
        rotate_ = false;
        alpha_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, red_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, green_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, blue_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, delayMilliseconds_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, fadeIn_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, fadeOut_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBool(7, rotate_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeInt32(8, alpha_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, red_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, green_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, blue_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, delayMilliseconds_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, fadeIn_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, fadeOut_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, rotate_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, alpha_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static FlashAction parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static FlashAction parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static FlashAction parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static FlashAction parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static FlashAction parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static FlashAction parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static FlashAction parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static FlashAction parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static FlashAction parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static FlashAction parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(FlashAction prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code SyncResponse.FlashAction}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements FlashActionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return OutputProtos.internal_static_SyncResponse_FlashAction_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return OutputProtos.internal_static_SyncResponse_FlashAction_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  FlashAction.class, Builder.class);
        }

        // Construct using com.hello.suripu.api.output.OutputProtos.SyncResponse.FlashAction.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          red_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          green_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          blue_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          delayMilliseconds_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          fadeIn_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          fadeOut_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          rotate_ = false;
          bitField0_ = (bitField0_ & ~0x00000040);
          alpha_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return OutputProtos.internal_static_SyncResponse_FlashAction_descriptor;
        }

        public FlashAction getDefaultInstanceForType() {
          return FlashAction.getDefaultInstance();
        }

        public FlashAction build() {
          FlashAction result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public FlashAction buildPartial() {
          FlashAction result = new FlashAction(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.red_ = red_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.green_ = green_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.blue_ = blue_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.delayMilliseconds_ = delayMilliseconds_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.fadeIn_ = fadeIn_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.fadeOut_ = fadeOut_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.rotate_ = rotate_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.alpha_ = alpha_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof FlashAction) {
            return mergeFrom((FlashAction)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(FlashAction other) {
          if (other == FlashAction.getDefaultInstance()) return this;
          if (other.hasRed()) {
            setRed(other.getRed());
          }
          if (other.hasGreen()) {
            setGreen(other.getGreen());
          }
          if (other.hasBlue()) {
            setBlue(other.getBlue());
          }
          if (other.hasDelayMilliseconds()) {
            setDelayMilliseconds(other.getDelayMilliseconds());
          }
          if (other.hasFadeIn()) {
            setFadeIn(other.getFadeIn());
          }
          if (other.hasFadeOut()) {
            setFadeOut(other.getFadeOut());
          }
          if (other.hasRotate()) {
            setRotate(other.getRotate());
          }
          if (other.hasAlpha()) {
            setAlpha(other.getAlpha());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          FlashAction parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (FlashAction) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int32 red = 1;
        private int red_ ;
        /**
         * <code>optional int32 red = 1;</code>
         */
        public boolean hasRed() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 red = 1;</code>
         */
        public int getRed() {
          return red_;
        }
        /**
         * <code>optional int32 red = 1;</code>
         */
        public Builder setRed(int value) {
          bitField0_ |= 0x00000001;
          red_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 red = 1;</code>
         */
        public Builder clearRed() {
          bitField0_ = (bitField0_ & ~0x00000001);
          red_ = 0;
          onChanged();
          return this;
        }

        // optional int32 green = 2;
        private int green_ ;
        /**
         * <code>optional int32 green = 2;</code>
         */
        public boolean hasGreen() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 green = 2;</code>
         */
        public int getGreen() {
          return green_;
        }
        /**
         * <code>optional int32 green = 2;</code>
         */
        public Builder setGreen(int value) {
          bitField0_ |= 0x00000002;
          green_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 green = 2;</code>
         */
        public Builder clearGreen() {
          bitField0_ = (bitField0_ & ~0x00000002);
          green_ = 0;
          onChanged();
          return this;
        }

        // optional int32 blue = 3;
        private int blue_ ;
        /**
         * <code>optional int32 blue = 3;</code>
         */
        public boolean hasBlue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 blue = 3;</code>
         */
        public int getBlue() {
          return blue_;
        }
        /**
         * <code>optional int32 blue = 3;</code>
         */
        public Builder setBlue(int value) {
          bitField0_ |= 0x00000004;
          blue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 blue = 3;</code>
         */
        public Builder clearBlue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          blue_ = 0;
          onChanged();
          return this;
        }

        // optional int32 delay_milliseconds = 4;
        private int delayMilliseconds_ ;
        /**
         * <code>optional int32 delay_milliseconds = 4;</code>
         */
        public boolean hasDelayMilliseconds() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 delay_milliseconds = 4;</code>
         */
        public int getDelayMilliseconds() {
          return delayMilliseconds_;
        }
        /**
         * <code>optional int32 delay_milliseconds = 4;</code>
         */
        public Builder setDelayMilliseconds(int value) {
          bitField0_ |= 0x00000008;
          delayMilliseconds_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 delay_milliseconds = 4;</code>
         */
        public Builder clearDelayMilliseconds() {
          bitField0_ = (bitField0_ & ~0x00000008);
          delayMilliseconds_ = 0;
          onChanged();
          return this;
        }

        // optional bool fade_in = 5;
        private boolean fadeIn_ ;
        /**
         * <code>optional bool fade_in = 5;</code>
         */
        public boolean hasFadeIn() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool fade_in = 5;</code>
         */
        public boolean getFadeIn() {
          return fadeIn_;
        }
        /**
         * <code>optional bool fade_in = 5;</code>
         */
        public Builder setFadeIn(boolean value) {
          bitField0_ |= 0x00000010;
          fadeIn_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool fade_in = 5;</code>
         */
        public Builder clearFadeIn() {
          bitField0_ = (bitField0_ & ~0x00000010);
          fadeIn_ = false;
          onChanged();
          return this;
        }

        // optional bool fade_out = 6;
        private boolean fadeOut_ ;
        /**
         * <code>optional bool fade_out = 6;</code>
         */
        public boolean hasFadeOut() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional bool fade_out = 6;</code>
         */
        public boolean getFadeOut() {
          return fadeOut_;
        }
        /**
         * <code>optional bool fade_out = 6;</code>
         */
        public Builder setFadeOut(boolean value) {
          bitField0_ |= 0x00000020;
          fadeOut_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool fade_out = 6;</code>
         */
        public Builder clearFadeOut() {
          bitField0_ = (bitField0_ & ~0x00000020);
          fadeOut_ = false;
          onChanged();
          return this;
        }

        // optional bool rotate = 7;
        private boolean rotate_ ;
        /**
         * <code>optional bool rotate = 7;</code>
         */
        public boolean hasRotate() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional bool rotate = 7;</code>
         */
        public boolean getRotate() {
          return rotate_;
        }
        /**
         * <code>optional bool rotate = 7;</code>
         */
        public Builder setRotate(boolean value) {
          bitField0_ |= 0x00000040;
          rotate_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool rotate = 7;</code>
         */
        public Builder clearRotate() {
          bitField0_ = (bitField0_ & ~0x00000040);
          rotate_ = false;
          onChanged();
          return this;
        }

        // optional int32 alpha = 8;
        private int alpha_ ;
        /**
         * <code>optional int32 alpha = 8;</code>
         */
        public boolean hasAlpha() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional int32 alpha = 8;</code>
         */
        public int getAlpha() {
          return alpha_;
        }
        /**
         * <code>optional int32 alpha = 8;</code>
         */
        public Builder setAlpha(int value) {
          bitField0_ |= 0x00000080;
          alpha_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 alpha = 8;</code>
         */
        public Builder clearAlpha() {
          bitField0_ = (bitField0_ & ~0x00000080);
          alpha_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:SyncResponse.FlashAction)
      }

      static {
        defaultInstance = new FlashAction(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:SyncResponse.FlashAction)
    }

    public interface AudioControlOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int32 audio_min_energy_threshold = 1;
      /**
       * <code>optional int32 audio_min_energy_threshold = 1;</code>
       *
       * <pre>
       *minimum log2 audio energy above background noise to save off and classify.
       *500 is a good value for this.  Raise to 1000 to be less sensitive.    
       * </pre>
       */
      boolean hasAudioMinEnergyThreshold();
      /**
       * <code>optional int32 audio_min_energy_threshold = 1;</code>
       *
       * <pre>
       *minimum log2 audio energy above background noise to save off and classify.
       *500 is a good value for this.  Raise to 1000 to be less sensitive.    
       * </pre>
       */
      int getAudioMinEnergyThreshold();

      // optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;
      /**
       * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
       *
       * <pre>
       *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
       *so every 1875 feat vecs is a minute. 
       * </pre>
       */
      boolean hasAudioNumFeatVecsUntilAttemptFeatureUpload();
      /**
       * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
       *
       * <pre>
       *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
       *so every 1875 feat vecs is a minute. 
       * </pre>
       */
      int getAudioNumFeatVecsUntilAttemptFeatureUpload();

      // optional int32 audio_feat_buffer_size = 3;
      /**
       * <code>optional int32 audio_feat_buffer_size = 3;</code>
       *
       * <pre>
       *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
       *the buffer should be sized for your upload period 
       * </pre>
       */
      boolean hasAudioFeatBufferSize();
      /**
       * <code>optional int32 audio_feat_buffer_size = 3;</code>
       *
       * <pre>
       *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
       *the buffer should be sized for your upload period 
       * </pre>
       */
      int getAudioFeatBufferSize();

      // optional int32 audio_recording_period_in_frames = 4;
      /**
       * <code>optional int32 audio_recording_period_in_frames = 4;</code>
       *
       * <pre>
       *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
       * </pre>
       */
      boolean hasAudioRecordingPeriodInFrames();
      /**
       * <code>optional int32 audio_recording_period_in_frames = 4;</code>
       *
       * <pre>
       *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
       * </pre>
       */
      int getAudioRecordingPeriodInFrames();

      // optional .Matrix audio_recording_classifier = 5;
      /**
       * <code>optional .Matrix audio_recording_classifier = 5;</code>
       *
       * <pre>
       *Matrix == 2D array of integers with some describing strings
       *audio classifier and HMM determines when you should record to sd card
       *You can think of the classifier as a high level feature extraction
       *The HMM evaluation "fuses" the high level classification together
       * </pre>
       */
      boolean hasAudioRecordingClassifier();
      /**
       * <code>optional .Matrix audio_recording_classifier = 5;</code>
       *
       * <pre>
       *Matrix == 2D array of integers with some describing strings
       *audio classifier and HMM determines when you should record to sd card
       *You can think of the classifier as a high level feature extraction
       *The HMM evaluation "fuses" the high level classification together
       * </pre>
       */
      com.hello.suripu.api.audio.MatrixProtos.Matrix getAudioRecordingClassifier();
      /**
       * <code>optional .Matrix audio_recording_classifier = 5;</code>
       *
       * <pre>
       *Matrix == 2D array of integers with some describing strings
       *audio classifier and HMM determines when you should record to sd card
       *You can think of the classifier as a high level feature extraction
       *The HMM evaluation "fuses" the high level classification together
       * </pre>
       */
      com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder getAudioRecordingClassifierOrBuilder();

      // optional .Matrix audio_recording_hmm = 6;
      /**
       * <code>optional .Matrix audio_recording_hmm = 6;</code>
       */
      boolean hasAudioRecordingHmm();
      /**
       * <code>optional .Matrix audio_recording_hmm = 6;</code>
       */
      com.hello.suripu.api.audio.MatrixProtos.Matrix getAudioRecordingHmm();
      /**
       * <code>optional .Matrix audio_recording_hmm = 6;</code>
       */
      com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder getAudioRecordingHmmOrBuilder();

      // optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;
      /**
       * <code>optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
       */
      boolean hasAudioCaptureAction();
      /**
       * <code>optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
       */
      AudioControl.AudioCaptureAction getAudioCaptureAction();
    }
    /**
     * Protobuf type {@code SyncResponse.AudioControl}
     */
    public static final class AudioControl extends
        com.google.protobuf.GeneratedMessage
        implements AudioControlOrBuilder {
      // Use AudioControl.newBuilder() to construct.
      private AudioControl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private AudioControl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final AudioControl defaultInstance;
      public static AudioControl getDefaultInstance() {
        return defaultInstance;
      }

      public AudioControl getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private AudioControl(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                audioMinEnergyThreshold_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                audioNumFeatVecsUntilAttemptFeatureUpload_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                audioFeatBufferSize_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                audioRecordingPeriodInFrames_ = input.readInt32();
                break;
              }
              case 42: {
                com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                  subBuilder = audioRecordingClassifier_.toBuilder();
                }
                audioRecordingClassifier_ = input.readMessage(com.hello.suripu.api.audio.MatrixProtos.Matrix.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(audioRecordingClassifier_);
                  audioRecordingClassifier_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              case 50: {
                com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = audioRecordingHmm_.toBuilder();
                }
                audioRecordingHmm_ = input.readMessage(com.hello.suripu.api.audio.MatrixProtos.Matrix.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(audioRecordingHmm_);
                  audioRecordingHmm_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
              case 64: {
                int rawValue = input.readEnum();
                AudioCaptureAction value = AudioCaptureAction.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(8, rawValue);
                } else {
                  bitField0_ |= 0x00000040;
                  audioCaptureAction_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OutputProtos.internal_static_SyncResponse_AudioControl_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OutputProtos.internal_static_SyncResponse_AudioControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AudioControl.class, Builder.class);
      }

      public static com.google.protobuf.Parser<AudioControl> PARSER =
          new com.google.protobuf.AbstractParser<AudioControl>() {
        public AudioControl parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AudioControl(input, extensionRegistry);
        }
      };

      @Override
      public com.google.protobuf.Parser<AudioControl> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code SyncResponse.AudioControl.AudioCaptureAction}
       *
       * <pre>
       *turn on/off audio capture
       * </pre>
       */
      public enum AudioCaptureAction
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>OFF = 0;</code>
         */
        OFF(0, 0),
        /**
         * <code>ON = 1;</code>
         */
        ON(1, 1),
        ;

        /**
         * <code>OFF = 0;</code>
         */
        public static final int OFF_VALUE = 0;
        /**
         * <code>ON = 1;</code>
         */
        public static final int ON_VALUE = 1;


        public final int getNumber() { return value; }

        public static AudioCaptureAction valueOf(int value) {
          switch (value) {
            case 0: return OFF;
            case 1: return ON;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<AudioCaptureAction>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<AudioCaptureAction>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<AudioCaptureAction>() {
                public AudioCaptureAction findValueByNumber(int number) {
                  return AudioCaptureAction.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return AudioControl.getDescriptor().getEnumTypes().get(0);
        }

        private static final AudioCaptureAction[] VALUES = values();

        public static AudioCaptureAction valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private AudioCaptureAction(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:SyncResponse.AudioControl.AudioCaptureAction)
      }

      private int bitField0_;
      // optional int32 audio_min_energy_threshold = 1;
      public static final int AUDIO_MIN_ENERGY_THRESHOLD_FIELD_NUMBER = 1;
      private int audioMinEnergyThreshold_;
      /**
       * <code>optional int32 audio_min_energy_threshold = 1;</code>
       *
       * <pre>
       *minimum log2 audio energy above background noise to save off and classify.
       *500 is a good value for this.  Raise to 1000 to be less sensitive.    
       * </pre>
       */
      public boolean hasAudioMinEnergyThreshold() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 audio_min_energy_threshold = 1;</code>
       *
       * <pre>
       *minimum log2 audio energy above background noise to save off and classify.
       *500 is a good value for this.  Raise to 1000 to be less sensitive.    
       * </pre>
       */
      public int getAudioMinEnergyThreshold() {
        return audioMinEnergyThreshold_;
      }

      // optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;
      public static final int AUDIO_NUM_FEAT_VECS_UNTIL_ATTEMPT_FEATURE_UPLOAD_FIELD_NUMBER = 2;
      private int audioNumFeatVecsUntilAttemptFeatureUpload_;
      /**
       * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
       *
       * <pre>
       *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
       *so every 1875 feat vecs is a minute. 
       * </pre>
       */
      public boolean hasAudioNumFeatVecsUntilAttemptFeatureUpload() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
       *
       * <pre>
       *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
       *so every 1875 feat vecs is a minute. 
       * </pre>
       */
      public int getAudioNumFeatVecsUntilAttemptFeatureUpload() {
        return audioNumFeatVecsUntilAttemptFeatureUpload_;
      }

      // optional int32 audio_feat_buffer_size = 3;
      public static final int AUDIO_FEAT_BUFFER_SIZE_FIELD_NUMBER = 3;
      private int audioFeatBufferSize_;
      /**
       * <code>optional int32 audio_feat_buffer_size = 3;</code>
       *
       * <pre>
       *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
       *the buffer should be sized for your upload period 
       * </pre>
       */
      public boolean hasAudioFeatBufferSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 audio_feat_buffer_size = 3;</code>
       *
       * <pre>
       *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
       *the buffer should be sized for your upload period 
       * </pre>
       */
      public int getAudioFeatBufferSize() {
        return audioFeatBufferSize_;
      }

      // optional int32 audio_recording_period_in_frames = 4;
      public static final int AUDIO_RECORDING_PERIOD_IN_FRAMES_FIELD_NUMBER = 4;
      private int audioRecordingPeriodInFrames_;
      /**
       * <code>optional int32 audio_recording_period_in_frames = 4;</code>
       *
       * <pre>
       *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
       * </pre>
       */
      public boolean hasAudioRecordingPeriodInFrames() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 audio_recording_period_in_frames = 4;</code>
       *
       * <pre>
       *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
       * </pre>
       */
      public int getAudioRecordingPeriodInFrames() {
        return audioRecordingPeriodInFrames_;
      }

      // optional .Matrix audio_recording_classifier = 5;
      public static final int AUDIO_RECORDING_CLASSIFIER_FIELD_NUMBER = 5;
      private com.hello.suripu.api.audio.MatrixProtos.Matrix audioRecordingClassifier_;
      /**
       * <code>optional .Matrix audio_recording_classifier = 5;</code>
       *
       * <pre>
       *Matrix == 2D array of integers with some describing strings
       *audio classifier and HMM determines when you should record to sd card
       *You can think of the classifier as a high level feature extraction
       *The HMM evaluation "fuses" the high level classification together
       * </pre>
       */
      public boolean hasAudioRecordingClassifier() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .Matrix audio_recording_classifier = 5;</code>
       *
       * <pre>
       *Matrix == 2D array of integers with some describing strings
       *audio classifier and HMM determines when you should record to sd card
       *You can think of the classifier as a high level feature extraction
       *The HMM evaluation "fuses" the high level classification together
       * </pre>
       */
      public com.hello.suripu.api.audio.MatrixProtos.Matrix getAudioRecordingClassifier() {
        return audioRecordingClassifier_;
      }
      /**
       * <code>optional .Matrix audio_recording_classifier = 5;</code>
       *
       * <pre>
       *Matrix == 2D array of integers with some describing strings
       *audio classifier and HMM determines when you should record to sd card
       *You can think of the classifier as a high level feature extraction
       *The HMM evaluation "fuses" the high level classification together
       * </pre>
       */
      public com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder getAudioRecordingClassifierOrBuilder() {
        return audioRecordingClassifier_;
      }

      // optional .Matrix audio_recording_hmm = 6;
      public static final int AUDIO_RECORDING_HMM_FIELD_NUMBER = 6;
      private com.hello.suripu.api.audio.MatrixProtos.Matrix audioRecordingHmm_;
      /**
       * <code>optional .Matrix audio_recording_hmm = 6;</code>
       */
      public boolean hasAudioRecordingHmm() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .Matrix audio_recording_hmm = 6;</code>
       */
      public com.hello.suripu.api.audio.MatrixProtos.Matrix getAudioRecordingHmm() {
        return audioRecordingHmm_;
      }
      /**
       * <code>optional .Matrix audio_recording_hmm = 6;</code>
       */
      public com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder getAudioRecordingHmmOrBuilder() {
        return audioRecordingHmm_;
      }

      // optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;
      public static final int AUDIO_CAPTURE_ACTION_FIELD_NUMBER = 8;
      private AudioCaptureAction audioCaptureAction_;
      /**
       * <code>optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
       */
      public boolean hasAudioCaptureAction() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
       */
      public AudioCaptureAction getAudioCaptureAction() {
        return audioCaptureAction_;
      }

      private void initFields() {
        audioMinEnergyThreshold_ = 0;
        audioNumFeatVecsUntilAttemptFeatureUpload_ = 0;
        audioFeatBufferSize_ = 0;
        audioRecordingPeriodInFrames_ = 0;
        audioRecordingClassifier_ = com.hello.suripu.api.audio.MatrixProtos.Matrix.getDefaultInstance();
        audioRecordingHmm_ = com.hello.suripu.api.audio.MatrixProtos.Matrix.getDefaultInstance();
        audioCaptureAction_ = AudioCaptureAction.OFF;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (hasAudioRecordingClassifier()) {
          if (!getAudioRecordingClassifier().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (hasAudioRecordingHmm()) {
          if (!getAudioRecordingHmm().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, audioMinEnergyThreshold_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, audioNumFeatVecsUntilAttemptFeatureUpload_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, audioFeatBufferSize_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, audioRecordingPeriodInFrames_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeMessage(5, audioRecordingClassifier_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeMessage(6, audioRecordingHmm_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeEnum(8, audioCaptureAction_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, audioMinEnergyThreshold_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, audioNumFeatVecsUntilAttemptFeatureUpload_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, audioFeatBufferSize_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, audioRecordingPeriodInFrames_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, audioRecordingClassifier_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, audioRecordingHmm_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, audioCaptureAction_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static AudioControl parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AudioControl parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AudioControl parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AudioControl parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AudioControl parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static AudioControl parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static AudioControl parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static AudioControl parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static AudioControl parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static AudioControl parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(AudioControl prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code SyncResponse.AudioControl}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements AudioControlOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return OutputProtos.internal_static_SyncResponse_AudioControl_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return OutputProtos.internal_static_SyncResponse_AudioControl_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  AudioControl.class, Builder.class);
        }

        // Construct using com.hello.suripu.api.output.OutputProtos.SyncResponse.AudioControl.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getAudioRecordingClassifierFieldBuilder();
            getAudioRecordingHmmFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          audioMinEnergyThreshold_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          audioNumFeatVecsUntilAttemptFeatureUpload_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          audioFeatBufferSize_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          audioRecordingPeriodInFrames_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          if (audioRecordingClassifierBuilder_ == null) {
            audioRecordingClassifier_ = com.hello.suripu.api.audio.MatrixProtos.Matrix.getDefaultInstance();
          } else {
            audioRecordingClassifierBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          if (audioRecordingHmmBuilder_ == null) {
            audioRecordingHmm_ = com.hello.suripu.api.audio.MatrixProtos.Matrix.getDefaultInstance();
          } else {
            audioRecordingHmmBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          audioCaptureAction_ = AudioCaptureAction.OFF;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return OutputProtos.internal_static_SyncResponse_AudioControl_descriptor;
        }

        public AudioControl getDefaultInstanceForType() {
          return AudioControl.getDefaultInstance();
        }

        public AudioControl build() {
          AudioControl result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public AudioControl buildPartial() {
          AudioControl result = new AudioControl(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.audioMinEnergyThreshold_ = audioMinEnergyThreshold_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.audioNumFeatVecsUntilAttemptFeatureUpload_ = audioNumFeatVecsUntilAttemptFeatureUpload_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.audioFeatBufferSize_ = audioFeatBufferSize_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.audioRecordingPeriodInFrames_ = audioRecordingPeriodInFrames_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          if (audioRecordingClassifierBuilder_ == null) {
            result.audioRecordingClassifier_ = audioRecordingClassifier_;
          } else {
            result.audioRecordingClassifier_ = audioRecordingClassifierBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          if (audioRecordingHmmBuilder_ == null) {
            result.audioRecordingHmm_ = audioRecordingHmm_;
          } else {
            result.audioRecordingHmm_ = audioRecordingHmmBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.audioCaptureAction_ = audioCaptureAction_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof AudioControl) {
            return mergeFrom((AudioControl)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(AudioControl other) {
          if (other == AudioControl.getDefaultInstance()) return this;
          if (other.hasAudioMinEnergyThreshold()) {
            setAudioMinEnergyThreshold(other.getAudioMinEnergyThreshold());
          }
          if (other.hasAudioNumFeatVecsUntilAttemptFeatureUpload()) {
            setAudioNumFeatVecsUntilAttemptFeatureUpload(other.getAudioNumFeatVecsUntilAttemptFeatureUpload());
          }
          if (other.hasAudioFeatBufferSize()) {
            setAudioFeatBufferSize(other.getAudioFeatBufferSize());
          }
          if (other.hasAudioRecordingPeriodInFrames()) {
            setAudioRecordingPeriodInFrames(other.getAudioRecordingPeriodInFrames());
          }
          if (other.hasAudioRecordingClassifier()) {
            mergeAudioRecordingClassifier(other.getAudioRecordingClassifier());
          }
          if (other.hasAudioRecordingHmm()) {
            mergeAudioRecordingHmm(other.getAudioRecordingHmm());
          }
          if (other.hasAudioCaptureAction()) {
            setAudioCaptureAction(other.getAudioCaptureAction());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (hasAudioRecordingClassifier()) {
            if (!getAudioRecordingClassifier().isInitialized()) {
              
              return false;
            }
          }
          if (hasAudioRecordingHmm()) {
            if (!getAudioRecordingHmm().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          AudioControl parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (AudioControl) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int32 audio_min_energy_threshold = 1;
        private int audioMinEnergyThreshold_ ;
        /**
         * <code>optional int32 audio_min_energy_threshold = 1;</code>
         *
         * <pre>
         *minimum log2 audio energy above background noise to save off and classify.
         *500 is a good value for this.  Raise to 1000 to be less sensitive.    
         * </pre>
         */
        public boolean hasAudioMinEnergyThreshold() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 audio_min_energy_threshold = 1;</code>
         *
         * <pre>
         *minimum log2 audio energy above background noise to save off and classify.
         *500 is a good value for this.  Raise to 1000 to be less sensitive.    
         * </pre>
         */
        public int getAudioMinEnergyThreshold() {
          return audioMinEnergyThreshold_;
        }
        /**
         * <code>optional int32 audio_min_energy_threshold = 1;</code>
         *
         * <pre>
         *minimum log2 audio energy above background noise to save off and classify.
         *500 is a good value for this.  Raise to 1000 to be less sensitive.    
         * </pre>
         */
        public Builder setAudioMinEnergyThreshold(int value) {
          bitField0_ |= 0x00000001;
          audioMinEnergyThreshold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 audio_min_energy_threshold = 1;</code>
         *
         * <pre>
         *minimum log2 audio energy above background noise to save off and classify.
         *500 is a good value for this.  Raise to 1000 to be less sensitive.    
         * </pre>
         */
        public Builder clearAudioMinEnergyThreshold() {
          bitField0_ = (bitField0_ & ~0x00000001);
          audioMinEnergyThreshold_ = 0;
          onChanged();
          return this;
        }

        // optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;
        private int audioNumFeatVecsUntilAttemptFeatureUpload_ ;
        /**
         * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
         *
         * <pre>
         *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
         *so every 1875 feat vecs is a minute. 
         * </pre>
         */
        public boolean hasAudioNumFeatVecsUntilAttemptFeatureUpload() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
         *
         * <pre>
         *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
         *so every 1875 feat vecs is a minute. 
         * </pre>
         */
        public int getAudioNumFeatVecsUntilAttemptFeatureUpload() {
          return audioNumFeatVecsUntilAttemptFeatureUpload_;
        }
        /**
         * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
         *
         * <pre>
         *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
         *so every 1875 feat vecs is a minute. 
         * </pre>
         */
        public Builder setAudioNumFeatVecsUntilAttemptFeatureUpload(int value) {
          bitField0_ |= 0x00000002;
          audioNumFeatVecsUntilAttemptFeatureUpload_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 audio_num_feat_vecs_until_attempt_feature_upload = 2;</code>
         *
         * <pre>
         *feature vectors come in every 32ms  ( 256 / 16000Hz * 2, where the "2" is for the average 2, decimate)
         *so every 1875 feat vecs is a minute. 
         * </pre>
         */
        public Builder clearAudioNumFeatVecsUntilAttemptFeatureUpload() {
          bitField0_ = (bitField0_ & ~0x00000002);
          audioNumFeatVecsUntilAttemptFeatureUpload_ = 0;
          onChanged();
          return this;
        }

        // optional int32 audio_feat_buffer_size = 3;
        private int audioFeatBufferSize_ ;
        /**
         * <code>optional int32 audio_feat_buffer_size = 3;</code>
         *
         * <pre>
         *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
         *the buffer should be sized for your upload period 
         * </pre>
         */
        public boolean hasAudioFeatBufferSize() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 audio_feat_buffer_size = 3;</code>
         *
         * <pre>
         *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
         *the buffer should be sized for your upload period 
         * </pre>
         */
        public int getAudioFeatBufferSize() {
          return audioFeatBufferSize_;
        }
        /**
         * <code>optional int32 audio_feat_buffer_size = 3;</code>
         *
         * <pre>
         *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
         *the buffer should be sized for your upload period 
         * </pre>
         */
        public Builder setAudioFeatBufferSize(int value) {
          bitField0_ |= 0x00000004;
          audioFeatBufferSize_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 audio_feat_buffer_size = 3;</code>
         *
         * <pre>
         *buffer size in bytes of audio features.  Note every ~330 bytes is 32 feat vecs, ergo 1 minute is about 20K
         *the buffer should be sized for your upload period 
         * </pre>
         */
        public Builder clearAudioFeatBufferSize() {
          bitField0_ = (bitField0_ & ~0x00000004);
          audioFeatBufferSize_ = 0;
          onChanged();
          return this;
        }

        // optional int32 audio_recording_period_in_frames = 4;
        private int audioRecordingPeriodInFrames_ ;
        /**
         * <code>optional int32 audio_recording_period_in_frames = 4;</code>
         *
         * <pre>
         *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
         * </pre>
         */
        public boolean hasAudioRecordingPeriodInFrames() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 audio_recording_period_in_frames = 4;</code>
         *
         * <pre>
         *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
         * </pre>
         */
        public int getAudioRecordingPeriodInFrames() {
          return audioRecordingPeriodInFrames_;
        }
        /**
         * <code>optional int32 audio_recording_period_in_frames = 4;</code>
         *
         * <pre>
         *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
         * </pre>
         */
        public Builder setAudioRecordingPeriodInFrames(int value) {
          bitField0_ |= 0x00000008;
          audioRecordingPeriodInFrames_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 audio_recording_period_in_frames = 4;</code>
         *
         * <pre>
         *frames are 16ms long (256/16000).  When you detect snoring (or whatever), this is how many frames of data you want to record
         * </pre>
         */
        public Builder clearAudioRecordingPeriodInFrames() {
          bitField0_ = (bitField0_ & ~0x00000008);
          audioRecordingPeriodInFrames_ = 0;
          onChanged();
          return this;
        }

        // optional .Matrix audio_recording_classifier = 5;
        private com.hello.suripu.api.audio.MatrixProtos.Matrix audioRecordingClassifier_ = com.hello.suripu.api.audio.MatrixProtos.Matrix.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.hello.suripu.api.audio.MatrixProtos.Matrix, com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder, com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder> audioRecordingClassifierBuilder_;
        /**
         * <code>optional .Matrix audio_recording_classifier = 5;</code>
         *
         * <pre>
         *Matrix == 2D array of integers with some describing strings
         *audio classifier and HMM determines when you should record to sd card
         *You can think of the classifier as a high level feature extraction
         *The HMM evaluation "fuses" the high level classification together
         * </pre>
         */
        public boolean hasAudioRecordingClassifier() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .Matrix audio_recording_classifier = 5;</code>
         *
         * <pre>
         *Matrix == 2D array of integers with some describing strings
         *audio classifier and HMM determines when you should record to sd card
         *You can think of the classifier as a high level feature extraction
         *The HMM evaluation "fuses" the high level classification together
         * </pre>
         */
        public com.hello.suripu.api.audio.MatrixProtos.Matrix getAudioRecordingClassifier() {
          if (audioRecordingClassifierBuilder_ == null) {
            return audioRecordingClassifier_;
          } else {
            return audioRecordingClassifierBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .Matrix audio_recording_classifier = 5;</code>
         *
         * <pre>
         *Matrix == 2D array of integers with some describing strings
         *audio classifier and HMM determines when you should record to sd card
         *You can think of the classifier as a high level feature extraction
         *The HMM evaluation "fuses" the high level classification together
         * </pre>
         */
        public Builder setAudioRecordingClassifier(com.hello.suripu.api.audio.MatrixProtos.Matrix value) {
          if (audioRecordingClassifierBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            audioRecordingClassifier_ = value;
            onChanged();
          } else {
            audioRecordingClassifierBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .Matrix audio_recording_classifier = 5;</code>
         *
         * <pre>
         *Matrix == 2D array of integers with some describing strings
         *audio classifier and HMM determines when you should record to sd card
         *You can think of the classifier as a high level feature extraction
         *The HMM evaluation "fuses" the high level classification together
         * </pre>
         */
        public Builder setAudioRecordingClassifier(
            com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder builderForValue) {
          if (audioRecordingClassifierBuilder_ == null) {
            audioRecordingClassifier_ = builderForValue.build();
            onChanged();
          } else {
            audioRecordingClassifierBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .Matrix audio_recording_classifier = 5;</code>
         *
         * <pre>
         *Matrix == 2D array of integers with some describing strings
         *audio classifier and HMM determines when you should record to sd card
         *You can think of the classifier as a high level feature extraction
         *The HMM evaluation "fuses" the high level classification together
         * </pre>
         */
        public Builder mergeAudioRecordingClassifier(com.hello.suripu.api.audio.MatrixProtos.Matrix value) {
          if (audioRecordingClassifierBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010) &&
                audioRecordingClassifier_ != com.hello.suripu.api.audio.MatrixProtos.Matrix.getDefaultInstance()) {
              audioRecordingClassifier_ =
                com.hello.suripu.api.audio.MatrixProtos.Matrix.newBuilder(audioRecordingClassifier_).mergeFrom(value).buildPartial();
            } else {
              audioRecordingClassifier_ = value;
            }
            onChanged();
          } else {
            audioRecordingClassifierBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .Matrix audio_recording_classifier = 5;</code>
         *
         * <pre>
         *Matrix == 2D array of integers with some describing strings
         *audio classifier and HMM determines when you should record to sd card
         *You can think of the classifier as a high level feature extraction
         *The HMM evaluation "fuses" the high level classification together
         * </pre>
         */
        public Builder clearAudioRecordingClassifier() {
          if (audioRecordingClassifierBuilder_ == null) {
            audioRecordingClassifier_ = com.hello.suripu.api.audio.MatrixProtos.Matrix.getDefaultInstance();
            onChanged();
          } else {
            audioRecordingClassifierBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <code>optional .Matrix audio_recording_classifier = 5;</code>
         *
         * <pre>
         *Matrix == 2D array of integers with some describing strings
         *audio classifier and HMM determines when you should record to sd card
         *You can think of the classifier as a high level feature extraction
         *The HMM evaluation "fuses" the high level classification together
         * </pre>
         */
        public com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder getAudioRecordingClassifierBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getAudioRecordingClassifierFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .Matrix audio_recording_classifier = 5;</code>
         *
         * <pre>
         *Matrix == 2D array of integers with some describing strings
         *audio classifier and HMM determines when you should record to sd card
         *You can think of the classifier as a high level feature extraction
         *The HMM evaluation "fuses" the high level classification together
         * </pre>
         */
        public com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder getAudioRecordingClassifierOrBuilder() {
          if (audioRecordingClassifierBuilder_ != null) {
            return audioRecordingClassifierBuilder_.getMessageOrBuilder();
          } else {
            return audioRecordingClassifier_;
          }
        }
        /**
         * <code>optional .Matrix audio_recording_classifier = 5;</code>
         *
         * <pre>
         *Matrix == 2D array of integers with some describing strings
         *audio classifier and HMM determines when you should record to sd card
         *You can think of the classifier as a high level feature extraction
         *The HMM evaluation "fuses" the high level classification together
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.hello.suripu.api.audio.MatrixProtos.Matrix, com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder, com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder> 
            getAudioRecordingClassifierFieldBuilder() {
          if (audioRecordingClassifierBuilder_ == null) {
            audioRecordingClassifierBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.hello.suripu.api.audio.MatrixProtos.Matrix, com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder, com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder>(
                    audioRecordingClassifier_,
                    getParentForChildren(),
                    isClean());
            audioRecordingClassifier_ = null;
          }
          return audioRecordingClassifierBuilder_;
        }

        // optional .Matrix audio_recording_hmm = 6;
        private com.hello.suripu.api.audio.MatrixProtos.Matrix audioRecordingHmm_ = com.hello.suripu.api.audio.MatrixProtos.Matrix.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.hello.suripu.api.audio.MatrixProtos.Matrix, com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder, com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder> audioRecordingHmmBuilder_;
        /**
         * <code>optional .Matrix audio_recording_hmm = 6;</code>
         */
        public boolean hasAudioRecordingHmm() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .Matrix audio_recording_hmm = 6;</code>
         */
        public com.hello.suripu.api.audio.MatrixProtos.Matrix getAudioRecordingHmm() {
          if (audioRecordingHmmBuilder_ == null) {
            return audioRecordingHmm_;
          } else {
            return audioRecordingHmmBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .Matrix audio_recording_hmm = 6;</code>
         */
        public Builder setAudioRecordingHmm(com.hello.suripu.api.audio.MatrixProtos.Matrix value) {
          if (audioRecordingHmmBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            audioRecordingHmm_ = value;
            onChanged();
          } else {
            audioRecordingHmmBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .Matrix audio_recording_hmm = 6;</code>
         */
        public Builder setAudioRecordingHmm(
            com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder builderForValue) {
          if (audioRecordingHmmBuilder_ == null) {
            audioRecordingHmm_ = builderForValue.build();
            onChanged();
          } else {
            audioRecordingHmmBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .Matrix audio_recording_hmm = 6;</code>
         */
        public Builder mergeAudioRecordingHmm(com.hello.suripu.api.audio.MatrixProtos.Matrix value) {
          if (audioRecordingHmmBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020) &&
                audioRecordingHmm_ != com.hello.suripu.api.audio.MatrixProtos.Matrix.getDefaultInstance()) {
              audioRecordingHmm_ =
                com.hello.suripu.api.audio.MatrixProtos.Matrix.newBuilder(audioRecordingHmm_).mergeFrom(value).buildPartial();
            } else {
              audioRecordingHmm_ = value;
            }
            onChanged();
          } else {
            audioRecordingHmmBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .Matrix audio_recording_hmm = 6;</code>
         */
        public Builder clearAudioRecordingHmm() {
          if (audioRecordingHmmBuilder_ == null) {
            audioRecordingHmm_ = com.hello.suripu.api.audio.MatrixProtos.Matrix.getDefaultInstance();
            onChanged();
          } else {
            audioRecordingHmmBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        /**
         * <code>optional .Matrix audio_recording_hmm = 6;</code>
         */
        public com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder getAudioRecordingHmmBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getAudioRecordingHmmFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .Matrix audio_recording_hmm = 6;</code>
         */
        public com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder getAudioRecordingHmmOrBuilder() {
          if (audioRecordingHmmBuilder_ != null) {
            return audioRecordingHmmBuilder_.getMessageOrBuilder();
          } else {
            return audioRecordingHmm_;
          }
        }
        /**
         * <code>optional .Matrix audio_recording_hmm = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.hello.suripu.api.audio.MatrixProtos.Matrix, com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder, com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder> 
            getAudioRecordingHmmFieldBuilder() {
          if (audioRecordingHmmBuilder_ == null) {
            audioRecordingHmmBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.hello.suripu.api.audio.MatrixProtos.Matrix, com.hello.suripu.api.audio.MatrixProtos.Matrix.Builder, com.hello.suripu.api.audio.MatrixProtos.MatrixOrBuilder>(
                    audioRecordingHmm_,
                    getParentForChildren(),
                    isClean());
            audioRecordingHmm_ = null;
          }
          return audioRecordingHmmBuilder_;
        }

        // optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;
        private AudioCaptureAction audioCaptureAction_ = AudioCaptureAction.OFF;
        /**
         * <code>optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
         */
        public boolean hasAudioCaptureAction() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
         */
        public AudioCaptureAction getAudioCaptureAction() {
          return audioCaptureAction_;
        }
        /**
         * <code>optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
         */
        public Builder setAudioCaptureAction(AudioCaptureAction value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000040;
          audioCaptureAction_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .SyncResponse.AudioControl.AudioCaptureAction audio_capture_action = 8;</code>
         */
        public Builder clearAudioCaptureAction() {
          bitField0_ = (bitField0_ & ~0x00000040);
          audioCaptureAction_ = AudioCaptureAction.OFF;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:SyncResponse.AudioControl)
      }

      static {
        defaultInstance = new AudioControl(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:SyncResponse.AudioControl)
    }

    private int bitField0_;
    // optional int32 upload_cycle = 1;
    public static final int UPLOAD_CYCLE_FIELD_NUMBER = 1;
    private int uploadCycle_;
    /**
     * <code>optional int32 upload_cycle = 1;</code>
     */
    public boolean hasUploadCycle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 upload_cycle = 1;</code>
     */
    public int getUploadCycle() {
      return uploadCycle_;
    }

    // optional int32 sync_cycle = 2;
    public static final int SYNC_CYCLE_FIELD_NUMBER = 2;
    private int syncCycle_;
    /**
     * <code>optional int32 sync_cycle = 2;</code>
     */
    public boolean hasSyncCycle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sync_cycle = 2;</code>
     */
    public int getSyncCycle() {
      return syncCycle_;
    }

    // optional int32 acc_scan_cyle = 3;
    public static final int ACC_SCAN_CYLE_FIELD_NUMBER = 3;
    private int accScanCyle_;
    /**
     * <code>optional int32 acc_scan_cyle = 3;</code>
     */
    public boolean hasAccScanCyle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 acc_scan_cyle = 3;</code>
     */
    public int getAccScanCyle() {
      return accScanCyle_;
    }

    // optional int32 acc_sampling_interval = 4;
    public static final int ACC_SAMPLING_INTERVAL_FIELD_NUMBER = 4;
    private int accSamplingInterval_;
    /**
     * <code>optional int32 acc_sampling_interval = 4;</code>
     */
    public boolean hasAccSamplingInterval() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 acc_sampling_interval = 4;</code>
     */
    public int getAccSamplingInterval() {
      return accSamplingInterval_;
    }

    // optional int32 device_sampling_interval = 5;
    public static final int DEVICE_SAMPLING_INTERVAL_FIELD_NUMBER = 5;
    private int deviceSamplingInterval_;
    /**
     * <code>optional int32 device_sampling_interval = 5;</code>
     */
    public boolean hasDeviceSamplingInterval() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 device_sampling_interval = 5;</code>
     */
    public int getDeviceSamplingInterval() {
      return deviceSamplingInterval_;
    }

    // optional .SyncResponse.Alarm alarm = 6;
    public static final int ALARM_FIELD_NUMBER = 6;
    private Alarm alarm_;
    /**
     * <code>optional .SyncResponse.Alarm alarm = 6;</code>
     */
    public boolean hasAlarm() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .SyncResponse.Alarm alarm = 6;</code>
     */
    public Alarm getAlarm() {
      return alarm_;
    }
    /**
     * <code>optional .SyncResponse.Alarm alarm = 6;</code>
     */
    public AlarmOrBuilder getAlarmOrBuilder() {
      return alarm_;
    }

    // optional .SyncResponse.PairingAction pairing_action = 7;
    public static final int PAIRING_ACTION_FIELD_NUMBER = 7;
    private PairingAction pairingAction_;
    /**
     * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
     */
    public boolean hasPairingAction() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
     */
    public PairingAction getPairingAction() {
      return pairingAction_;
    }
    /**
     * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
     */
    public PairingActionOrBuilder getPairingActionOrBuilder() {
      return pairingAction_;
    }

    // optional .SyncResponse.WhiteNoise white_noise = 8;
    public static final int WHITE_NOISE_FIELD_NUMBER = 8;
    private WhiteNoise whiteNoise_;
    /**
     * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
     */
    public boolean hasWhiteNoise() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
     */
    public WhiteNoise getWhiteNoise() {
      return whiteNoise_;
    }
    /**
     * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
     */
    public WhiteNoiseOrBuilder getWhiteNoiseOrBuilder() {
      return whiteNoise_;
    }

    // optional .SyncResponse.FlashAction flash_action = 9;
    public static final int FLASH_ACTION_FIELD_NUMBER = 9;
    private FlashAction flashAction_;
    /**
     * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
     */
    public boolean hasFlashAction() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
     */
    public FlashAction getFlashAction() {
      return flashAction_;
    }
    /**
     * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
     */
    public FlashActionOrBuilder getFlashActionOrBuilder() {
      return flashAction_;
    }

    // optional bool reset_device = 10;
    public static final int RESET_DEVICE_FIELD_NUMBER = 10;
    private boolean resetDevice_;
    /**
     * <code>optional bool reset_device = 10;</code>
     */
    public boolean hasResetDevice() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool reset_device = 10;</code>
     */
    public boolean getResetDevice() {
      return resetDevice_;
    }

    // optional .SyncResponse.RoomConditions room_conditions = 12;
    public static final int ROOM_CONDITIONS_FIELD_NUMBER = 12;
    private RoomConditions roomConditions_;
    /**
     * <code>optional .SyncResponse.RoomConditions room_conditions = 12;</code>
     */
    public boolean hasRoomConditions() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .SyncResponse.RoomConditions room_conditions = 12;</code>
     */
    public RoomConditions getRoomConditions() {
      return roomConditions_;
    }

    // repeated .SyncResponse.FileDownload files = 13;
    public static final int FILES_FIELD_NUMBER = 13;
    private java.util.List<FileDownload> files_;
    /**
     * <code>repeated .SyncResponse.FileDownload files = 13;</code>
     */
    public java.util.List<FileDownload> getFilesList() {
      return files_;
    }
    /**
     * <code>repeated .SyncResponse.FileDownload files = 13;</code>
     */
    public java.util.List<? extends FileDownloadOrBuilder>
        getFilesOrBuilderList() {
      return files_;
    }
    /**
     * <code>repeated .SyncResponse.FileDownload files = 13;</code>
     */
    public int getFilesCount() {
      return files_.size();
    }
    /**
     * <code>repeated .SyncResponse.FileDownload files = 13;</code>
     */
    public FileDownload getFiles(int index) {
      return files_.get(index);
    }
    /**
     * <code>repeated .SyncResponse.FileDownload files = 13;</code>
     */
    public FileDownloadOrBuilder getFilesOrBuilder(
        int index) {
      return files_.get(index);
    }

    // optional bool reset_to_factory_fw = 14;
    public static final int RESET_TO_FACTORY_FW_FIELD_NUMBER = 14;
    private boolean resetToFactoryFw_;
    /**
     * <code>optional bool reset_to_factory_fw = 14;</code>
     */
    public boolean hasResetToFactoryFw() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool reset_to_factory_fw = 14;</code>
     */
    public boolean getResetToFactoryFw() {
      return resetToFactoryFw_;
    }

    // optional .SyncResponse.AudioControl audio_control = 15;
    public static final int AUDIO_CONTROL_FIELD_NUMBER = 15;
    private AudioControl audioControl_;
    /**
     * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
     */
    public boolean hasAudioControl() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
     */
    public AudioControl getAudioControl() {
      return audioControl_;
    }
    /**
     * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
     */
    public AudioControlOrBuilder getAudioControlOrBuilder() {
      return audioControl_;
    }

    private void initFields() {
      uploadCycle_ = 0;
      syncCycle_ = 0;
      accScanCyle_ = 0;
      accSamplingInterval_ = 0;
      deviceSamplingInterval_ = 0;
      alarm_ = Alarm.getDefaultInstance();
      pairingAction_ = PairingAction.getDefaultInstance();
      whiteNoise_ = WhiteNoise.getDefaultInstance();
      flashAction_ = FlashAction.getDefaultInstance();
      resetDevice_ = false;
      roomConditions_ = RoomConditions.IDEAL;
      files_ = java.util.Collections.emptyList();
      resetToFactoryFw_ = false;
      audioControl_ = AudioControl.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasAudioControl()) {
        if (!getAudioControl().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uploadCycle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, syncCycle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, accScanCyle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, accSamplingInterval_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, deviceSamplingInterval_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, alarm_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, pairingAction_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, whiteNoise_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, flashAction_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, resetDevice_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(12, roomConditions_.getNumber());
      }
      for (int i = 0; i < files_.size(); i++) {
        output.writeMessage(13, files_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(14, resetToFactoryFw_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(15, audioControl_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uploadCycle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, syncCycle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, accScanCyle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, accSamplingInterval_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, deviceSamplingInterval_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, alarm_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, pairingAction_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, whiteNoise_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, flashAction_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, resetDevice_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, roomConditions_.getNumber());
      }
      for (int i = 0; i < files_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, files_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, resetToFactoryFw_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, audioControl_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SyncResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SyncResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SyncResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SyncResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SyncResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SyncResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SyncResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SyncResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SyncResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SyncResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SyncResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SyncResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements SyncResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OutputProtos.internal_static_SyncResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OutputProtos.internal_static_SyncResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SyncResponse.class, Builder.class);
      }

      // Construct using com.hello.suripu.api.output.OutputProtos.SyncResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAlarmFieldBuilder();
          getPairingActionFieldBuilder();
          getWhiteNoiseFieldBuilder();
          getFlashActionFieldBuilder();
          getFilesFieldBuilder();
          getAudioControlFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uploadCycle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        syncCycle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        accScanCyle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        accSamplingInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        deviceSamplingInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (alarmBuilder_ == null) {
          alarm_ = Alarm.getDefaultInstance();
        } else {
          alarmBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (pairingActionBuilder_ == null) {
          pairingAction_ = PairingAction.getDefaultInstance();
        } else {
          pairingActionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (whiteNoiseBuilder_ == null) {
          whiteNoise_ = WhiteNoise.getDefaultInstance();
        } else {
          whiteNoiseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (flashActionBuilder_ == null) {
          flashAction_ = FlashAction.getDefaultInstance();
        } else {
          flashActionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        resetDevice_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        roomConditions_ = RoomConditions.IDEAL;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          filesBuilder_.clear();
        }
        resetToFactoryFw_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (audioControlBuilder_ == null) {
          audioControl_ = AudioControl.getDefaultInstance();
        } else {
          audioControlBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OutputProtos.internal_static_SyncResponse_descriptor;
      }

      public SyncResponse getDefaultInstanceForType() {
        return SyncResponse.getDefaultInstance();
      }

      public SyncResponse build() {
        SyncResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SyncResponse buildPartial() {
        SyncResponse result = new SyncResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uploadCycle_ = uploadCycle_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.syncCycle_ = syncCycle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accScanCyle_ = accScanCyle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.accSamplingInterval_ = accSamplingInterval_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.deviceSamplingInterval_ = deviceSamplingInterval_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (alarmBuilder_ == null) {
          result.alarm_ = alarm_;
        } else {
          result.alarm_ = alarmBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (pairingActionBuilder_ == null) {
          result.pairingAction_ = pairingAction_;
        } else {
          result.pairingAction_ = pairingActionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (whiteNoiseBuilder_ == null) {
          result.whiteNoise_ = whiteNoise_;
        } else {
          result.whiteNoise_ = whiteNoiseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (flashActionBuilder_ == null) {
          result.flashAction_ = flashAction_;
        } else {
          result.flashAction_ = flashActionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.resetDevice_ = resetDevice_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.roomConditions_ = roomConditions_;
        if (filesBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            files_ = java.util.Collections.unmodifiableList(files_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.files_ = files_;
        } else {
          result.files_ = filesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.resetToFactoryFw_ = resetToFactoryFw_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (audioControlBuilder_ == null) {
          result.audioControl_ = audioControl_;
        } else {
          result.audioControl_ = audioControlBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SyncResponse) {
          return mergeFrom((SyncResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SyncResponse other) {
        if (other == SyncResponse.getDefaultInstance()) return this;
        if (other.hasUploadCycle()) {
          setUploadCycle(other.getUploadCycle());
        }
        if (other.hasSyncCycle()) {
          setSyncCycle(other.getSyncCycle());
        }
        if (other.hasAccScanCyle()) {
          setAccScanCyle(other.getAccScanCyle());
        }
        if (other.hasAccSamplingInterval()) {
          setAccSamplingInterval(other.getAccSamplingInterval());
        }
        if (other.hasDeviceSamplingInterval()) {
          setDeviceSamplingInterval(other.getDeviceSamplingInterval());
        }
        if (other.hasAlarm()) {
          mergeAlarm(other.getAlarm());
        }
        if (other.hasPairingAction()) {
          mergePairingAction(other.getPairingAction());
        }
        if (other.hasWhiteNoise()) {
          mergeWhiteNoise(other.getWhiteNoise());
        }
        if (other.hasFlashAction()) {
          mergeFlashAction(other.getFlashAction());
        }
        if (other.hasResetDevice()) {
          setResetDevice(other.getResetDevice());
        }
        if (other.hasRoomConditions()) {
          setRoomConditions(other.getRoomConditions());
        }
        if (filesBuilder_ == null) {
          if (!other.files_.isEmpty()) {
            if (files_.isEmpty()) {
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureFilesIsMutable();
              files_.addAll(other.files_);
            }
            onChanged();
          }
        } else {
          if (!other.files_.isEmpty()) {
            if (filesBuilder_.isEmpty()) {
              filesBuilder_.dispose();
              filesBuilder_ = null;
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000800);
              filesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFilesFieldBuilder() : null;
            } else {
              filesBuilder_.addAllMessages(other.files_);
            }
          }
        }
        if (other.hasResetToFactoryFw()) {
          setResetToFactoryFw(other.getResetToFactoryFw());
        }
        if (other.hasAudioControl()) {
          mergeAudioControl(other.getAudioControl());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasAudioControl()) {
          if (!getAudioControl().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SyncResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SyncResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 upload_cycle = 1;
      private int uploadCycle_ ;
      /**
       * <code>optional int32 upload_cycle = 1;</code>
       */
      public boolean hasUploadCycle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 upload_cycle = 1;</code>
       */
      public int getUploadCycle() {
        return uploadCycle_;
      }
      /**
       * <code>optional int32 upload_cycle = 1;</code>
       */
      public Builder setUploadCycle(int value) {
        bitField0_ |= 0x00000001;
        uploadCycle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 upload_cycle = 1;</code>
       */
      public Builder clearUploadCycle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uploadCycle_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sync_cycle = 2;
      private int syncCycle_ ;
      /**
       * <code>optional int32 sync_cycle = 2;</code>
       */
      public boolean hasSyncCycle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 sync_cycle = 2;</code>
       */
      public int getSyncCycle() {
        return syncCycle_;
      }
      /**
       * <code>optional int32 sync_cycle = 2;</code>
       */
      public Builder setSyncCycle(int value) {
        bitField0_ |= 0x00000002;
        syncCycle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sync_cycle = 2;</code>
       */
      public Builder clearSyncCycle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        syncCycle_ = 0;
        onChanged();
        return this;
      }

      // optional int32 acc_scan_cyle = 3;
      private int accScanCyle_ ;
      /**
       * <code>optional int32 acc_scan_cyle = 3;</code>
       */
      public boolean hasAccScanCyle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 acc_scan_cyle = 3;</code>
       */
      public int getAccScanCyle() {
        return accScanCyle_;
      }
      /**
       * <code>optional int32 acc_scan_cyle = 3;</code>
       */
      public Builder setAccScanCyle(int value) {
        bitField0_ |= 0x00000004;
        accScanCyle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 acc_scan_cyle = 3;</code>
       */
      public Builder clearAccScanCyle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accScanCyle_ = 0;
        onChanged();
        return this;
      }

      // optional int32 acc_sampling_interval = 4;
      private int accSamplingInterval_ ;
      /**
       * <code>optional int32 acc_sampling_interval = 4;</code>
       */
      public boolean hasAccSamplingInterval() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 acc_sampling_interval = 4;</code>
       */
      public int getAccSamplingInterval() {
        return accSamplingInterval_;
      }
      /**
       * <code>optional int32 acc_sampling_interval = 4;</code>
       */
      public Builder setAccSamplingInterval(int value) {
        bitField0_ |= 0x00000008;
        accSamplingInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 acc_sampling_interval = 4;</code>
       */
      public Builder clearAccSamplingInterval() {
        bitField0_ = (bitField0_ & ~0x00000008);
        accSamplingInterval_ = 0;
        onChanged();
        return this;
      }

      // optional int32 device_sampling_interval = 5;
      private int deviceSamplingInterval_ ;
      /**
       * <code>optional int32 device_sampling_interval = 5;</code>
       */
      public boolean hasDeviceSamplingInterval() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 device_sampling_interval = 5;</code>
       */
      public int getDeviceSamplingInterval() {
        return deviceSamplingInterval_;
      }
      /**
       * <code>optional int32 device_sampling_interval = 5;</code>
       */
      public Builder setDeviceSamplingInterval(int value) {
        bitField0_ |= 0x00000010;
        deviceSamplingInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 device_sampling_interval = 5;</code>
       */
      public Builder clearDeviceSamplingInterval() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deviceSamplingInterval_ = 0;
        onChanged();
        return this;
      }

      // optional .SyncResponse.Alarm alarm = 6;
      private Alarm alarm_ = Alarm.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Alarm, Alarm.Builder, AlarmOrBuilder> alarmBuilder_;
      /**
       * <code>optional .SyncResponse.Alarm alarm = 6;</code>
       */
      public boolean hasAlarm() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .SyncResponse.Alarm alarm = 6;</code>
       */
      public Alarm getAlarm() {
        if (alarmBuilder_ == null) {
          return alarm_;
        } else {
          return alarmBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SyncResponse.Alarm alarm = 6;</code>
       */
      public Builder setAlarm(Alarm value) {
        if (alarmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alarm_ = value;
          onChanged();
        } else {
          alarmBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .SyncResponse.Alarm alarm = 6;</code>
       */
      public Builder setAlarm(
          Alarm.Builder builderForValue) {
        if (alarmBuilder_ == null) {
          alarm_ = builderForValue.build();
          onChanged();
        } else {
          alarmBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .SyncResponse.Alarm alarm = 6;</code>
       */
      public Builder mergeAlarm(Alarm value) {
        if (alarmBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              alarm_ != Alarm.getDefaultInstance()) {
            alarm_ =
              Alarm.newBuilder(alarm_).mergeFrom(value).buildPartial();
          } else {
            alarm_ = value;
          }
          onChanged();
        } else {
          alarmBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .SyncResponse.Alarm alarm = 6;</code>
       */
      public Builder clearAlarm() {
        if (alarmBuilder_ == null) {
          alarm_ = Alarm.getDefaultInstance();
          onChanged();
        } else {
          alarmBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .SyncResponse.Alarm alarm = 6;</code>
       */
      public Alarm.Builder getAlarmBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getAlarmFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SyncResponse.Alarm alarm = 6;</code>
       */
      public AlarmOrBuilder getAlarmOrBuilder() {
        if (alarmBuilder_ != null) {
          return alarmBuilder_.getMessageOrBuilder();
        } else {
          return alarm_;
        }
      }
      /**
       * <code>optional .SyncResponse.Alarm alarm = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Alarm, Alarm.Builder, AlarmOrBuilder>
          getAlarmFieldBuilder() {
        if (alarmBuilder_ == null) {
          alarmBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Alarm, Alarm.Builder, AlarmOrBuilder>(
                  alarm_,
                  getParentForChildren(),
                  isClean());
          alarm_ = null;
        }
        return alarmBuilder_;
      }

      // optional .SyncResponse.PairingAction pairing_action = 7;
      private PairingAction pairingAction_ = PairingAction.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          PairingAction, PairingAction.Builder, PairingActionOrBuilder> pairingActionBuilder_;
      /**
       * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
       */
      public boolean hasPairingAction() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
       */
      public PairingAction getPairingAction() {
        if (pairingActionBuilder_ == null) {
          return pairingAction_;
        } else {
          return pairingActionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
       */
      public Builder setPairingAction(PairingAction value) {
        if (pairingActionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pairingAction_ = value;
          onChanged();
        } else {
          pairingActionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
       */
      public Builder setPairingAction(
          PairingAction.Builder builderForValue) {
        if (pairingActionBuilder_ == null) {
          pairingAction_ = builderForValue.build();
          onChanged();
        } else {
          pairingActionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
       */
      public Builder mergePairingAction(PairingAction value) {
        if (pairingActionBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              pairingAction_ != PairingAction.getDefaultInstance()) {
            pairingAction_ =
              PairingAction.newBuilder(pairingAction_).mergeFrom(value).buildPartial();
          } else {
            pairingAction_ = value;
          }
          onChanged();
        } else {
          pairingActionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
       */
      public Builder clearPairingAction() {
        if (pairingActionBuilder_ == null) {
          pairingAction_ = PairingAction.getDefaultInstance();
          onChanged();
        } else {
          pairingActionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
       */
      public PairingAction.Builder getPairingActionBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getPairingActionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
       */
      public PairingActionOrBuilder getPairingActionOrBuilder() {
        if (pairingActionBuilder_ != null) {
          return pairingActionBuilder_.getMessageOrBuilder();
        } else {
          return pairingAction_;
        }
      }
      /**
       * <code>optional .SyncResponse.PairingAction pairing_action = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          PairingAction, PairingAction.Builder, PairingActionOrBuilder>
          getPairingActionFieldBuilder() {
        if (pairingActionBuilder_ == null) {
          pairingActionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              PairingAction, PairingAction.Builder, PairingActionOrBuilder>(
                  pairingAction_,
                  getParentForChildren(),
                  isClean());
          pairingAction_ = null;
        }
        return pairingActionBuilder_;
      }

      // optional .SyncResponse.WhiteNoise white_noise = 8;
      private WhiteNoise whiteNoise_ = WhiteNoise.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          WhiteNoise, WhiteNoise.Builder, WhiteNoiseOrBuilder> whiteNoiseBuilder_;
      /**
       * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
       */
      public boolean hasWhiteNoise() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
       */
      public WhiteNoise getWhiteNoise() {
        if (whiteNoiseBuilder_ == null) {
          return whiteNoise_;
        } else {
          return whiteNoiseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
       */
      public Builder setWhiteNoise(WhiteNoise value) {
        if (whiteNoiseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          whiteNoise_ = value;
          onChanged();
        } else {
          whiteNoiseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
       */
      public Builder setWhiteNoise(
          WhiteNoise.Builder builderForValue) {
        if (whiteNoiseBuilder_ == null) {
          whiteNoise_ = builderForValue.build();
          onChanged();
        } else {
          whiteNoiseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
       */
      public Builder mergeWhiteNoise(WhiteNoise value) {
        if (whiteNoiseBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              whiteNoise_ != WhiteNoise.getDefaultInstance()) {
            whiteNoise_ =
              WhiteNoise.newBuilder(whiteNoise_).mergeFrom(value).buildPartial();
          } else {
            whiteNoise_ = value;
          }
          onChanged();
        } else {
          whiteNoiseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
       */
      public Builder clearWhiteNoise() {
        if (whiteNoiseBuilder_ == null) {
          whiteNoise_ = WhiteNoise.getDefaultInstance();
          onChanged();
        } else {
          whiteNoiseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
       */
      public WhiteNoise.Builder getWhiteNoiseBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getWhiteNoiseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
       */
      public WhiteNoiseOrBuilder getWhiteNoiseOrBuilder() {
        if (whiteNoiseBuilder_ != null) {
          return whiteNoiseBuilder_.getMessageOrBuilder();
        } else {
          return whiteNoise_;
        }
      }
      /**
       * <code>optional .SyncResponse.WhiteNoise white_noise = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          WhiteNoise, WhiteNoise.Builder, WhiteNoiseOrBuilder>
          getWhiteNoiseFieldBuilder() {
        if (whiteNoiseBuilder_ == null) {
          whiteNoiseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              WhiteNoise, WhiteNoise.Builder, WhiteNoiseOrBuilder>(
                  whiteNoise_,
                  getParentForChildren(),
                  isClean());
          whiteNoise_ = null;
        }
        return whiteNoiseBuilder_;
      }

      // optional .SyncResponse.FlashAction flash_action = 9;
      private FlashAction flashAction_ = FlashAction.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FlashAction, FlashAction.Builder, FlashActionOrBuilder> flashActionBuilder_;
      /**
       * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
       */
      public boolean hasFlashAction() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
       */
      public FlashAction getFlashAction() {
        if (flashActionBuilder_ == null) {
          return flashAction_;
        } else {
          return flashActionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
       */
      public Builder setFlashAction(FlashAction value) {
        if (flashActionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flashAction_ = value;
          onChanged();
        } else {
          flashActionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
       */
      public Builder setFlashAction(
          FlashAction.Builder builderForValue) {
        if (flashActionBuilder_ == null) {
          flashAction_ = builderForValue.build();
          onChanged();
        } else {
          flashActionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
       */
      public Builder mergeFlashAction(FlashAction value) {
        if (flashActionBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              flashAction_ != FlashAction.getDefaultInstance()) {
            flashAction_ =
              FlashAction.newBuilder(flashAction_).mergeFrom(value).buildPartial();
          } else {
            flashAction_ = value;
          }
          onChanged();
        } else {
          flashActionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
       */
      public Builder clearFlashAction() {
        if (flashActionBuilder_ == null) {
          flashAction_ = FlashAction.getDefaultInstance();
          onChanged();
        } else {
          flashActionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
       */
      public FlashAction.Builder getFlashActionBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getFlashActionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
       */
      public FlashActionOrBuilder getFlashActionOrBuilder() {
        if (flashActionBuilder_ != null) {
          return flashActionBuilder_.getMessageOrBuilder();
        } else {
          return flashAction_;
        }
      }
      /**
       * <code>optional .SyncResponse.FlashAction flash_action = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FlashAction, FlashAction.Builder, FlashActionOrBuilder>
          getFlashActionFieldBuilder() {
        if (flashActionBuilder_ == null) {
          flashActionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FlashAction, FlashAction.Builder, FlashActionOrBuilder>(
                  flashAction_,
                  getParentForChildren(),
                  isClean());
          flashAction_ = null;
        }
        return flashActionBuilder_;
      }

      // optional bool reset_device = 10;
      private boolean resetDevice_ ;
      /**
       * <code>optional bool reset_device = 10;</code>
       */
      public boolean hasResetDevice() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool reset_device = 10;</code>
       */
      public boolean getResetDevice() {
        return resetDevice_;
      }
      /**
       * <code>optional bool reset_device = 10;</code>
       */
      public Builder setResetDevice(boolean value) {
        bitField0_ |= 0x00000200;
        resetDevice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool reset_device = 10;</code>
       */
      public Builder clearResetDevice() {
        bitField0_ = (bitField0_ & ~0x00000200);
        resetDevice_ = false;
        onChanged();
        return this;
      }

      // optional .SyncResponse.RoomConditions room_conditions = 12;
      private RoomConditions roomConditions_ = RoomConditions.IDEAL;
      /**
       * <code>optional .SyncResponse.RoomConditions room_conditions = 12;</code>
       */
      public boolean hasRoomConditions() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .SyncResponse.RoomConditions room_conditions = 12;</code>
       */
      public RoomConditions getRoomConditions() {
        return roomConditions_;
      }
      /**
       * <code>optional .SyncResponse.RoomConditions room_conditions = 12;</code>
       */
      public Builder setRoomConditions(RoomConditions value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        roomConditions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SyncResponse.RoomConditions room_conditions = 12;</code>
       */
      public Builder clearRoomConditions() {
        bitField0_ = (bitField0_ & ~0x00000400);
        roomConditions_ = RoomConditions.IDEAL;
        onChanged();
        return this;
      }

      // repeated .SyncResponse.FileDownload files = 13;
      private java.util.List<FileDownload> files_ =
        java.util.Collections.emptyList();
      private void ensureFilesIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          files_ = new java.util.ArrayList<FileDownload>(files_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          FileDownload, FileDownload.Builder, FileDownloadOrBuilder> filesBuilder_;

      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public java.util.List<FileDownload> getFilesList() {
        if (filesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(files_);
        } else {
          return filesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public int getFilesCount() {
        if (filesBuilder_ == null) {
          return files_.size();
        } else {
          return filesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public FileDownload getFiles(int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);
        } else {
          return filesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public Builder setFiles(
          int index, FileDownload value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.set(index, value);
          onChanged();
        } else {
          filesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public Builder setFiles(
          int index, FileDownload.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.set(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public Builder addFiles(FileDownload value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(value);
          onChanged();
        } else {
          filesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public Builder addFiles(
          int index, FileDownload value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(index, value);
          onChanged();
        } else {
          filesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public Builder addFiles(
          FileDownload.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public Builder addFiles(
          int index, FileDownload.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public Builder addAllFiles(
          Iterable<? extends FileDownload> values) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          super.addAll(values, files_);
          onChanged();
        } else {
          filesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public Builder clearFiles() {
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          filesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public Builder removeFiles(int index) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.remove(index);
          onChanged();
        } else {
          filesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public FileDownload.Builder getFilesBuilder(
          int index) {
        return getFilesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public FileDownloadOrBuilder getFilesOrBuilder(
          int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);  } else {
          return filesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public java.util.List<? extends FileDownloadOrBuilder>
           getFilesOrBuilderList() {
        if (filesBuilder_ != null) {
          return filesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(files_);
        }
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public FileDownload.Builder addFilesBuilder() {
        return getFilesFieldBuilder().addBuilder(
            FileDownload.getDefaultInstance());
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public FileDownload.Builder addFilesBuilder(
          int index) {
        return getFilesFieldBuilder().addBuilder(
            index, FileDownload.getDefaultInstance());
      }
      /**
       * <code>repeated .SyncResponse.FileDownload files = 13;</code>
       */
      public java.util.List<FileDownload.Builder>
           getFilesBuilderList() {
        return getFilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          FileDownload, FileDownload.Builder, FileDownloadOrBuilder>
          getFilesFieldBuilder() {
        if (filesBuilder_ == null) {
          filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              FileDownload, FileDownload.Builder, FileDownloadOrBuilder>(
                  files_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          files_ = null;
        }
        return filesBuilder_;
      }

      // optional bool reset_to_factory_fw = 14;
      private boolean resetToFactoryFw_ ;
      /**
       * <code>optional bool reset_to_factory_fw = 14;</code>
       */
      public boolean hasResetToFactoryFw() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool reset_to_factory_fw = 14;</code>
       */
      public boolean getResetToFactoryFw() {
        return resetToFactoryFw_;
      }
      /**
       * <code>optional bool reset_to_factory_fw = 14;</code>
       */
      public Builder setResetToFactoryFw(boolean value) {
        bitField0_ |= 0x00001000;
        resetToFactoryFw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool reset_to_factory_fw = 14;</code>
       */
      public Builder clearResetToFactoryFw() {
        bitField0_ = (bitField0_ & ~0x00001000);
        resetToFactoryFw_ = false;
        onChanged();
        return this;
      }

      // optional .SyncResponse.AudioControl audio_control = 15;
      private AudioControl audioControl_ = AudioControl.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          AudioControl, AudioControl.Builder, AudioControlOrBuilder> audioControlBuilder_;
      /**
       * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
       */
      public boolean hasAudioControl() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
       */
      public AudioControl getAudioControl() {
        if (audioControlBuilder_ == null) {
          return audioControl_;
        } else {
          return audioControlBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
       */
      public Builder setAudioControl(AudioControl value) {
        if (audioControlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioControl_ = value;
          onChanged();
        } else {
          audioControlBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
       */
      public Builder setAudioControl(
          AudioControl.Builder builderForValue) {
        if (audioControlBuilder_ == null) {
          audioControl_ = builderForValue.build();
          onChanged();
        } else {
          audioControlBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
       */
      public Builder mergeAudioControl(AudioControl value) {
        if (audioControlBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              audioControl_ != AudioControl.getDefaultInstance()) {
            audioControl_ =
              AudioControl.newBuilder(audioControl_).mergeFrom(value).buildPartial();
          } else {
            audioControl_ = value;
          }
          onChanged();
        } else {
          audioControlBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
       */
      public Builder clearAudioControl() {
        if (audioControlBuilder_ == null) {
          audioControl_ = AudioControl.getDefaultInstance();
          onChanged();
        } else {
          audioControlBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
       */
      public AudioControl.Builder getAudioControlBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getAudioControlFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
       */
      public AudioControlOrBuilder getAudioControlOrBuilder() {
        if (audioControlBuilder_ != null) {
          return audioControlBuilder_.getMessageOrBuilder();
        } else {
          return audioControl_;
        }
      }
      /**
       * <code>optional .SyncResponse.AudioControl audio_control = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          AudioControl, AudioControl.Builder, AudioControlOrBuilder>
          getAudioControlFieldBuilder() {
        if (audioControlBuilder_ == null) {
          audioControlBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              AudioControl, AudioControl.Builder, AudioControlOrBuilder>(
                  audioControl_,
                  getParentForChildren(),
                  isClean());
          audioControl_ = null;
        }
        return audioControlBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SyncResponse)
    }

    static {
      defaultInstance = new SyncResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SyncResponse)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SyncResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncResponse_FileDownload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SyncResponse_FileDownload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncResponse_Alarm_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SyncResponse_Alarm_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncResponse_PairingAction_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SyncResponse_PairingAction_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncResponse_WhiteNoise_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SyncResponse_WhiteNoise_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncResponse_FlashAction_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SyncResponse_FlashAction_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncResponse_AudioControl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SyncResponse_AudioControl_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\023sync_response.proto\032\014matrix.proto\"\266\r\n\014" +
      "SyncResponse\022\024\n\014upload_cycle\030\001 \001(\005\022\022\n\nsy" +
      "nc_cycle\030\002 \001(\005\022\025\n\racc_scan_cyle\030\003 \001(\005\022\035\n" +
      "\025acc_sampling_interval\030\004 \001(\005\022 \n\030device_s" +
      "ampling_interval\030\005 \001(\005\022\"\n\005alarm\030\006 \001(\0132\023." +
      "SyncResponse.Alarm\0223\n\016pairing_action\030\007 \001" +
      "(\0132\033.SyncResponse.PairingAction\022-\n\013white" +
      "_noise\030\010 \001(\0132\030.SyncResponse.WhiteNoise\022/" +
      "\n\014flash_action\030\t \001(\0132\031.SyncResponse.Flas" +
      "hAction\022\024\n\014reset_device\030\n \001(\010\0225\n\017room_co",
      "nditions\030\014 \001(\0162\034.SyncResponse.RoomCondit" +
      "ions\022)\n\005files\030\r \003(\0132\032.SyncResponse.FileD" +
      "ownload\022\033\n\023reset_to_factory_fw\030\016 \001(\010\0221\n\r" +
      "audio_control\030\017 \001(\0132\032.SyncResponse.Audio" +
      "Control\032\205\002\n\014FileDownload\022\014\n\004host\030\001 \001(\t\022\013" +
      "\n\003url\030\002 \001(\t\022\034\n\024copy_to_serial_flash\030\004 \001(" +
      "\010\022\037\n\027reset_network_processor\030\005 \001(\010\022#\n\033re" +
      "set_application_processor\030\006 \001(\010\022\035\n\025seria" +
      "l_flash_filename\030\007 \001(\t\022\031\n\021serial_flash_p" +
      "ath\030\010 \001(\t\022\030\n\020sd_card_filename\030\003 \001(\t\022\024\n\014s",
      "d_card_path\030\t \001(\t\022\014\n\004sha1\030\n \001(\014\032\216\001\n\005Alar" +
      "m\022\022\n\nstart_time\030\001 \001(\r\022\020\n\010end_time\030\002 \001(\r\022" +
      "\026\n\013ringtone_id\030\003 \001(\005:\0011\022&\n\036ring_offset_f" +
      "rom_now_in_second\030\004 \001(\005\022\037\n\027ring_duration" +
      "_in_second\030\005 \001(\005\032w\n\rPairingAction\022\014\n\004ssi" +
      "d\030\001 \001(\t\0224\n\004type\030\002 \001(\0162&.SyncResponse.Pai" +
      "ringAction.ActionType\"\"\n\nActionType\022\010\n\004P" +
      "AIR\020\000\022\n\n\006UNPAIR\020\001\032D\n\nWhiteNoise\022\022\n\nstart" +
      "_time\030\001 \001(\005\022\020\n\010end_time\030\002 \001(\005\022\020\n\010sound_i" +
      "d\030\003 \001(\005\032\225\001\n\013FlashAction\022\013\n\003red\030\001 \001(\005\022\r\n\005",
      "green\030\002 \001(\005\022\014\n\004blue\030\003 \001(\005\022\032\n\022delay_milli" +
      "seconds\030\004 \001(\005\022\017\n\007fade_in\030\005 \001(\010\022\020\n\010fade_o" +
      "ut\030\006 \001(\010\022\016\n\006rotate\030\007 \001(\010\022\r\n\005alpha\030\010 \001(\005\032" +
      "\375\002\n\014AudioControl\022\"\n\032audio_min_energy_thr" +
      "eshold\030\001 \001(\005\0228\n0audio_num_feat_vecs_unti" +
      "l_attempt_feature_upload\030\002 \001(\005\022\036\n\026audio_" +
      "feat_buffer_size\030\003 \001(\005\022(\n audio_recordin" +
      "g_period_in_frames\030\004 \001(\005\022+\n\032audio_record" +
      "ing_classifier\030\005 \001(\0132\007.Matrix\022$\n\023audio_r" +
      "ecording_hmm\030\006 \001(\0132\007.Matrix\022K\n\024audio_cap",
      "ture_action\030\010 \001(\0162-.SyncResponse.AudioCo" +
      "ntrol.AudioCaptureAction\"%\n\022AudioCapture" +
      "Action\022\007\n\003OFF\020\000\022\006\n\002ON\020\001\"3\n\016RoomCondition" +
      "s\022\t\n\005IDEAL\020\001\022\013\n\007WARNING\020\002\022\t\n\005ALERT\020\003B+\n\033" +
      "com.hello.suripu.api.outputB\014OutputProto" +
      "s"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_SyncResponse_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_SyncResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SyncResponse_descriptor,
              new String[] { "UploadCycle", "SyncCycle", "AccScanCyle", "AccSamplingInterval", "DeviceSamplingInterval", "Alarm", "PairingAction", "WhiteNoise", "FlashAction", "ResetDevice", "RoomConditions", "Files", "ResetToFactoryFw", "AudioControl", });
          internal_static_SyncResponse_FileDownload_descriptor =
            internal_static_SyncResponse_descriptor.getNestedTypes().get(0);
          internal_static_SyncResponse_FileDownload_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SyncResponse_FileDownload_descriptor,
              new String[] { "Host", "Url", "CopyToSerialFlash", "ResetNetworkProcessor", "ResetApplicationProcessor", "SerialFlashFilename", "SerialFlashPath", "SdCardFilename", "SdCardPath", "Sha1", });
          internal_static_SyncResponse_Alarm_descriptor =
            internal_static_SyncResponse_descriptor.getNestedTypes().get(1);
          internal_static_SyncResponse_Alarm_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SyncResponse_Alarm_descriptor,
              new String[] { "StartTime", "EndTime", "RingtoneId", "RingOffsetFromNowInSecond", "RingDurationInSecond", });
          internal_static_SyncResponse_PairingAction_descriptor =
            internal_static_SyncResponse_descriptor.getNestedTypes().get(2);
          internal_static_SyncResponse_PairingAction_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SyncResponse_PairingAction_descriptor,
              new String[] { "Ssid", "Type", });
          internal_static_SyncResponse_WhiteNoise_descriptor =
            internal_static_SyncResponse_descriptor.getNestedTypes().get(3);
          internal_static_SyncResponse_WhiteNoise_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SyncResponse_WhiteNoise_descriptor,
              new String[] { "StartTime", "EndTime", "SoundId", });
          internal_static_SyncResponse_FlashAction_descriptor =
            internal_static_SyncResponse_descriptor.getNestedTypes().get(4);
          internal_static_SyncResponse_FlashAction_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SyncResponse_FlashAction_descriptor,
              new String[] { "Red", "Green", "Blue", "DelayMilliseconds", "FadeIn", "FadeOut", "Rotate", "Alpha", });
          internal_static_SyncResponse_AudioControl_descriptor =
            internal_static_SyncResponse_descriptor.getNestedTypes().get(5);
          internal_static_SyncResponse_AudioControl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SyncResponse_AudioControl_descriptor,
              new String[] { "AudioMinEnergyThreshold", "AudioNumFeatVecsUntilAttemptFeatureUpload", "AudioFeatBufferSize", "AudioRecordingPeriodInFrames", "AudioRecordingClassifier", "AudioRecordingHmm", "AudioCaptureAction", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.hello.suripu.api.audio.MatrixProtos.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
